{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "art.width+30",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "art.height+30",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "7",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": ".5",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-83.375X-Xf83.375a-f-83.375Y-Yf83.375a-f-3.5Z-Zf3.5am__f1iaa-f-85.125X-Xf85.125a-f-83.375Y-Yf83.375aa-f-83.375X-Xf83.375a-f-85.125Y-Yf85.125a-f-1.75Z-Zf1.75-r++q-Xf83.375q-Yf83.375q-Zf1.75f1.75-r++q-Xf-83.375q-Yf83.375q-Zf1.75f1.75-r++q-Xf83.375q-Yf-83.375q-Zf1.75f1.75-r++q-Xf-83.375q-Yf-83.375q-Zf1.75f1.75-r++q-Xf83.375q-Yf83.375q-Zf-1.75f1.75-r++q-Xf-83.375q-Yf83.375q-Zf-1.75f1.75-r++q-Xf83.375q-Yf-83.375q-Zf-1.75f1.75-r++q-Xf-83.375q-Yf-83.375q-Zf-1.75f1.75am__f1-r+q-Xf83.375q-Yf83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf83.375q-Zf1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf83.375q-Zf1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf-83.375q-Yf83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf-83.375q-Zf1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf-83.375q-Zf1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf83.375q-Yf-83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf83.375q-Zf-1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf83.375q-Zf-1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf-83.375q-Yf-83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf-83.375q-Zf-1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf-83.375q-Zf-1.75f1.75a-f-83.375Y-Yf83.375',float('-85.125000'),float('-85.125000'),float('-3.500000'),float('85.125000'),float('85.125000'),float('3.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                2673.976573187748,
                -534.411510106522
            ],
            "name": "body",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "body.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "body.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "body.z-2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "140.25",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "140.25",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "body.depth-2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-70.125X-Xf70.125a-f-70.125Y-Yf70.125a-f-4.5Z-Zf0.5',float('-70.125000'),float('-70.125000'),float('-4.500000'),float('70.125000'),float('70.125000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2217.2937371566727,
                -484.34172622898217
            ],
            "name": "art",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "art.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "art.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "body.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "art.width-4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "art.height-4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "body.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-68.125X-Xf68.125a-f-68.125Y-Yf68.125a-f-3.5Z-Zf3.5',float('-68.125000'),float('-68.125000'),float('-3.500000'),float('68.125000'),float('68.125000'),float('3.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2204.687092970028,
                60.04487443483194
            ],
            "name": "viewport",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__6.__4,__15.__5,__2.__6,__1.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-83.375X-Xf83.375a-f-83.375Y-Yf83.375a-f-3.5Z-Zf3.5am__f1iaa-f-85.125X-Xf85.125a-f-83.375Y-Yf83.375aa-f-83.375X-Xf83.375a-f-85.125Y-Yf85.125a-f-1.75Z-Zf1.75-r++q-Xf83.375q-Yf83.375q-Zf1.75f1.75-r++q-Xf-83.375q-Yf83.375q-Zf1.75f1.75-r++q-Xf83.375q-Yf-83.375q-Zf1.75f1.75-r++q-Xf-83.375q-Yf-83.375q-Zf1.75f1.75-r++q-Xf83.375q-Yf83.375q-Zf-1.75f1.75-r++q-Xf-83.375q-Yf83.375q-Zf-1.75f1.75-r++q-Xf83.375q-Yf-83.375q-Zf-1.75f1.75-r++q-Xf-83.375q-Yf-83.375q-Zf-1.75f1.75am__f1-r+q-Xf83.375q-Yf83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf83.375q-Zf1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf83.375q-Zf1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf-83.375q-Yf83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf-83.375q-Zf1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf-83.375q-Zf1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf83.375q-Yf-83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf83.375q-Zf-1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf83.375q-Zf-1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf-83.375q-Yf-83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf-83.375q-Zf-1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf-83.375q-Zf-1.75f1.75a-f-83.375Y-Yf83.375niiim-*f2f-48.125X__am__f1=1;a-f-3.5Z-Zf-2.5am__f1mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4a-f3.2Z-Zf3.5am__f1aa-f-68.125X-Xf68.125a-f-68.125Y-Yf68.125a-f-3.5Z-Zf3.5am__f1aa-f-70.125X-Xf70.125a-f-70.125Y-Yf70.125a-f-4.5Z-Zf0.5',float('-85.125000'),float('-85.125000'),float('-3.500000'),float('85.125000'),float('85.125000'),float('3.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3265.268016469022,
                -108.048125252266
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-0.3",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "body.z+body.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__46.__10]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4a-f3.2Z-Zf3.5',float('-85.125000'),float('-85.125000'),float('3.200000'),float('85.125000'),float('85.125000'),float('3.500000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2212.1504398852194,
                460.32683557077326
            ],
            "name": "e0",
            "script": [
                "import fab",
                "",
                "title('Extrude')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.extrude_z(shape, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, zmin), (_x, _y, zmax)], color=sb.color.green)",
                "sb.ui.point(_x, _y, zmin, color=sb.color.green)",
                "sb.ui.point(_x, _y, zmax, color=sb.color.green)",
                "",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "art.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "art.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "art.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "art.width-.25",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "art.height-.25",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0.9",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-70X-Xf70a-f-70Y-Yf70a-f-2.45Z-Zf-1.55',float('-70.000000'),float('-70.000000'),float('-2.450000'),float('70.000000'),float('70.000000'),float('-1.550000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2209.721833181553,
                1097.1669291947173
            ],
            "name": "backer",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "body.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "body.y+body.height/2-(35/4)-2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "body.z-body.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "body.width/3",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "35/4+8",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "body.depth/1.25",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7',float('-28.375000'),float('66.000000'),float('-6.300000'),float('28.375000'),float('82.750000'),float('-0.700000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2915.3793623527426,
                543.8174076537352
            ],
            "name": "hanger_slot",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 22
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__42.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aaiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-83.375X-Xf83.375a-f-83.375Y-Yf83.375a-f-3.5Z-Zf3.5am__f1iaa-f-85.125X-Xf85.125a-f-83.375Y-Yf83.375aa-f-83.375X-Xf83.375a-f-85.125Y-Yf85.125a-f-1.75Z-Zf1.75-r++q-Xf83.375q-Yf83.375q-Zf1.75f1.75-r++q-Xf-83.375q-Yf83.375q-Zf1.75f1.75-r++q-Xf83.375q-Yf-83.375q-Zf1.75f1.75-r++q-Xf-83.375q-Yf-83.375q-Zf1.75f1.75-r++q-Xf83.375q-Yf83.375q-Zf-1.75f1.75-r++q-Xf-83.375q-Yf83.375q-Zf-1.75f1.75-r++q-Xf83.375q-Yf-83.375q-Zf-1.75f1.75-r++q-Xf-83.375q-Yf-83.375q-Zf-1.75f1.75am__f1-r+q-Xf83.375q-Yf83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf83.375q-Zf1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf83.375q-Zf1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf-83.375q-Yf83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf-83.375q-Zf1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf-83.375q-Zf1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf83.375q-Yf-83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf83.375q-Zf-1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf83.375q-Zf-1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf-83.375q-Yf-83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf-83.375q-Zf-1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf-83.375q-Zf-1.75f1.75a-f-83.375Y-Yf83.375niiim-*f2f-48.125X__am__f1=1;a-f-3.5Z-Zf-2.5am__f1mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4a-f3.2Z-Zf3.5am__f1aa-f-68.125X-Xf68.125a-f-68.125Y-Yf68.125a-f-3.5Z-Zf3.5am__f1aa-f-70.125X-Xf70.125a-f-70.125Y-Yf70.125a-f-4.5Z-Zf0.5niim_-*f2f0Y_am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0im_-*f2f0Y_am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7',float('-85.125000'),float('-85.125000'),float('-3.500000'),float('85.125000'),float('85.125000'),float('3.500000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                4525.954854729952,
                694.1712990971257
            ],
            "name": "frame_outer",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 35
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-70X-Xf70a-f-70Y-Yf70a-f-2.45Z-Zf-1.55nam__f1mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4a-f-1.85Z-Zf-1.55',float('-70.000000'),float('-70.000000'),float('-2.450000'),float('70.000000'),float('70.000000'),float('-1.550000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                3043.115443710928,
                1576.186735798481
            ],
            "name": "frame_inner",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 36
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__12.__4,__7.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-83.375X-Xf83.375a-f-83.375Y-Yf83.375a-f-3.5Z-Zf3.5am__f1iaa-f-85.125X-Xf85.125a-f-83.375Y-Yf83.375aa-f-83.375X-Xf83.375a-f-85.125Y-Yf85.125a-f-1.75Z-Zf1.75-r++q-Xf83.375q-Yf83.375q-Zf1.75f1.75-r++q-Xf-83.375q-Yf83.375q-Zf1.75f1.75-r++q-Xf83.375q-Yf-83.375q-Zf1.75f1.75-r++q-Xf-83.375q-Yf-83.375q-Zf1.75f1.75-r++q-Xf83.375q-Yf83.375q-Zf-1.75f1.75-r++q-Xf-83.375q-Yf83.375q-Zf-1.75f1.75-r++q-Xf83.375q-Yf-83.375q-Zf-1.75f1.75-r++q-Xf-83.375q-Yf-83.375q-Zf-1.75f1.75am__f1-r+q-Xf83.375q-Yf83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf83.375q-Zf1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf83.375q-Zf1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf-83.375q-Yf83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf-83.375q-Zf1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf-83.375q-Zf1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf83.375q-Yf-83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf83.375q-Zf-1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf83.375q-Zf-1.75f1.75a-f-83.375Y-Yf83.375am__f1-r+q-Xf-83.375q-Yf-83.375f1.75a-f-1.75Z-Zf1.75a-r+q-Yf-83.375q-Zf-1.75f1.75a-f-83.375X-Xf83.375a-r+q-Xf-83.375q-Zf-1.75f1.75a-f-83.375Y-Yf83.375niiim-*f2f-48.125X__am__f1=1;a-f-3.5Z-Zf-2.5am__f1mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4a-f3.2Z-Zf3.5am__f1aa-f-68.125X-Xf68.125a-f-68.125Y-Yf68.125a-f-3.5Z-Zf3.5am__f1aa-f-70.125X-Xf70.125a-f-70.125Y-Yf70.125a-f-4.5Z-Zf0.5niim_-*f2f0Y_am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0im_-*f2f0Y_am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7',float('-85.125000'),float('-85.125000'),float('-3.500000'),float('85.125000'),float('85.125000'),float('3.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4164.194010295699,
                664.8738026000385
            ],
            "name": "d3",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 42
        },
        {
            "datums": [
                {
                    "expr": "1887664",
                    "name": "serial",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "body.x",
                    "name": "x",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "body.y",
                    "name": "y",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "body.z+body.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "body.width",
                    "name": "width",
                    "type": "float",
                    "uid": 11
                },
                {
                    "expr": "body.height",
                    "name": "height",
                    "type": "float",
                    "uid": 12
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 13
                },
                {
                    "expr": "\u0012fab.types.Shape('mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4',float('-85.125000'),float('-85.125000'),float('-inf'),float('85.125000'),float('85.125000'),float('inf'))",
                    "name": "texture",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                },
                {
                    "expr": "\u001212",
                    "name": "morph_count",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "\u001290.08727245746826",
                    "name": "texture_rotation",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u00120.6434143784150808",
                    "name": "texture_thickness",
                    "type": "float",
                    "uid": 5
                }
            ],
            "inspector": [
                1469.838022874227,
                751.3799569970386
            ],
            "name": "texture",
            "script": [
                "import fab",
                "from fab.types import Shape",
                "import math",
                "import random",
                "",
                "def slice_xy(shape,z):",
                "  return Shape(('mXYf%g' % z) + shape.math, shape.bounds.xmin,shape.bounds.ymin, shape.bounds.xmax,shape.bounds.ymax)",
                "",
                "title('Woodgrain (XY)')",
                "",
                "input('serial', float)",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "random.seed(serial)",
                "",
                "# compute the gyroid over a larger region to allow room for the rotation/morphs",
                "xmin = x - width*3",
                "xmax = x + width*3",
                "ymin = y - height*3",
                "ymax = y + height*3",
                "zmin = z - depth",
                "zmax = z + depth",
                "",
                "# real dimensions of the final texture",
                "real_xmin = x - width/2",
                "real_xmax = x + width/2",
                "real_ymin = y - height/2",
                "real_ymax = y + height/2",
                "real_zmin = z - depth/2",
                "real_zmax = z + depth/2",
                "",
                "# randomized gyroid structure",
                "x_period = 0.5",
                "y_period = 4.0",
                "z_period = 0.001",
                "thickness = random.uniform(0.45,0.65)",
                "rotation = random.uniform(20.0, 160.0)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "# generate the base gyroid and rotate it",
                "shape = fab.shapes.rotate_z(fab.shapes.function_prefix_xyz(fn, xmin, xmax, ymin, ymax, zmin, zmax), rotation, x, y)",
                "",
                "morph_count = random.randrange(10, 20)",
                "",
                "# apply attract/repels to make the texture interesting",
                "for i in range(morph_count):",
                "  r = random.uniform(25.0, 70.0)",
                "  attract = random.random()",
                "  # Prefer to place the morphs near the frame edge",
                "  leftright = random.random()",
                "  shortlong = random.random()",
                "  edge_variance = width * .15",
                "  morph_x = 0",
                "  morph_y = 0",
                "",
                "  if shortlong < 0.5:",
                "    morph_x = random.uniform(real_xmin-edge_variance, real_xmin+edge_variance) if leftright < 0.5 else random.uniform(real_xmax-edge_variance, real_xmax+edge_variance)",
                "    morph_y = random.uniform(real_ymin, real_ymax)",
                "  else:",
                "    morph_x = random.uniform(real_xmin, real_xmax)",
                "    morph_y = random.uniform(real_ymin-edge_variance, real_ymin+edge_variance) if leftright < 0.5 else random.uniform(real_ymax-edge_variance, real_ymax+edge_variance)",
                "",
                "  sb.ui.point(morph_x, morph_y, real_zmax, key=str(i), color=sb.color.red if attract < 0.5 else sb.color.green)",
                "",
                "  if attract < 0.5:",
                "    shape = fab.shapes.attract(shape, morph_x, morph_y, z, r)",
                "  else:",
                "    shape = fab.shapes.repel(shape, morph_x, morph_y, z, r)",
                "",
                "# slice and trim the gyroid to fit the requested dimensions",
                "output('texture', slice_xy(shape & fab.shapes.cube(real_xmin, real_xmax, real_ymin, real_ymax, real_zmin, real_zmax), z))",
                "output('morph_count', morph_count)",
                "output('texture_rotation', rotation)",
                "output('texture_thickness', thickness)",
                "",
                ""
            ],
            "uid": 46
        },
        {
            "datums": [
                {
                    "expr": "body.x-body.width/2+self.scale+20+10",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "body.y-body.height/2+self.scale-2.5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "'' # '+str(int(texture.serial))",
                    "name": "text",
                    "type": "str",
                    "uid": 2
                },
                {
                    "expr": "7",
                    "name": "scale",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('=1;')",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                960.3604742205459,
                -165.49476798970775
            ],
            "name": "serial_id",
            "script": [
                "import fab",
                "",
                "title('Text')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('text', str)",
                "input('scale', float)",
                "",
                "output('shape', fab.shapes.text(text, x, y, scale))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, 0), (x, y+scale, 0)])",
                "sb.ui.point(x, y, 0)",
                "sb.ui.point(x, y + scale, 0, drag=(None, scale, None))",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "body.z-body.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__4.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1=1;a-f-3.5Z-Zf-2.5',float('-inf'),float('-inf'),float('-3.500000'),float('inf'),float('inf'),float('-2.500000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1303.0946810254106,
                -50.25935433706866
            ],
            "name": "e1",
            "script": [
                "import fab",
                "",
                "title('Extrude')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.extrude_z(shape, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, zmin), (_x, _y, zmax)], color=sb.color.green)",
                "sb.ui.point(_x, _y, zmin, color=sb.color.green)",
                "sb.ui.point(_x, _y, zmax, color=sb.color.green)",
                "",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__4.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__5.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-*f2f-48.125X__am__f1=1;a-f-3.5Z-Zf-2.5',float('-inf'),float('-inf'),float('-3.500000'),float('inf'),float('inf'),float('-2.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1646.6730917321918,
                -165.4403951317789
            ],
            "name": "r0",
            "script": [
                "import fab",
                "",
                "title('Reflect (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__22.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f0Y_am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7',float('-28.375000'),float('-82.750000'),float('-6.300000'),float('28.375000'),float('82.750000'),float('-0.700000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                3349.2561831395997,
                622.7140558638157
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "body.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "body.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__12.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0im_-*f2f0Y_am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f66Y-Yf82.75a-f-6.3Z-Zf-0.7',float('-82.750000'),float('-28.375000'),float('-6.300000'),float('82.750000'),float('28.375000'),float('-0.700000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3782.073753210435,
                831.7936556160414
            ],
            "name": "r1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-0.3",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "backer.z+backer.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__46.__10]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4a-f-1.85Z-Zf-1.55',float('-85.125000'),float('-85.125000'),float('-1.850000'),float('85.125000'),float('85.125000'),float('-1.550000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2212.9296024981004,
                1608.904152684723
            ],
            "name": "e2",
            "script": [
                "import fab",
                "",
                "title('Extrude')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.extrude_z(shape, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, zmin), (_x, _y, zmax)], color=sb.color.green)",
                "sb.ui.point(_x, _y, zmin, color=sb.color.green)",
                "sb.ui.point(_x, _y, zmax, color=sb.color.green)",
                "",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__8.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__9.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-70X-Xf70a-f-70Y-Yf70a-f-2.45Z-Zf-1.55nam__f1mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4a-f-1.85Z-Zf-1.55',float('-70.000000'),float('-70.000000'),float('-2.450000'),float('70.000000'),float('70.000000'),float('-1.550000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2661.8303345184963,
                1556.7383183826585
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "backer.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "backer.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "backer.z-backer.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "backer.z+backer.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "logo.r*logo_scale.sx+5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf57a-f-2.45Z-Zf-1.55',float('-57.000000'),float('-57.000000'),float('-2.450000'),float('57.000000'),float('57.000000'),float('-1.550000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3026.1046983704914,
                1975.7760156020731
            ],
            "name": "ring",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 20
        },
        {
            "datums": [
                {
                    "expr": "logo.x0-logo.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "logo.x0+logo.r",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "logo.y0-logo.r",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "logo.y0+logo.r",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "-0.1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0.1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "30",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "20",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "2",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "0.8",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1',float('-4.000000'),float('-4.000000'),float('-0.100000'),float('4.000000'),float('4.000000'),float('0.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                307.9944753839359,
                2456.0075585454497
            ],
            "name": "g0",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 21
        },
        {
            "datums": [
                {
                    "expr": "backer.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "backer.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "4",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf4',float('-4.000000'),float('-4.000000'),float('-inf'),float('4.000000'),float('4.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                720.2977720346175,
                2373.5674427606255
            ],
            "name": "logo",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 23
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__23.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__23.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__26.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1',float('-5.656856'),float('-5.656856'),float('-inf'),float('5.656856'),float('5.656856'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1553.9182538936468,
                2373.5674427606264
            ],
            "name": "r2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 24
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__21.__10]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1',float('-4.000000'),float('-4.000000'),float('-inf'),float('4.000000'),float('4.000000'),float('inf'))",
                    "name": "slice",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                706.3264790425668,
                2940.180991882685
            ],
            "name": "s3",
            "script": [
                "# Neil Gershenfeld 7/12/15",
                "",
                "import fab",
                "from fab.types import Shape",
                "",
                "title('Slice (XY)')",
                "",
                "def slice_xy(shape,z):",
                "    return Shape(('mXYf%g' % z) + shape.math,",
                "       shape.bounds.xmin,shape.bounds.ymin,",
                "       shape.bounds.xmax,shape.bounds.ymax)",
                "",
                "input('shape',fab.types.Shape)",
                "input('z',float)",
                "",
                "output('slice',slice_xy(shape,z))",
                "",
                ""
            ],
            "uid": 25
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__23.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__25.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1',float('-4.000000'),float('-4.000000'),float('-inf'),float('4.000000'),float('4.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1136.3318300201292,
                2750.7923535459963
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 26
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__26.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__29.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXqYf4n-r+qXqYf4.5',float('-4.000000'),float('-4.000000'),float('-inf'),float('4.000000'),float('4.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1541.4993267896018,
                2906.0289423465606
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 27
        },
        {
            "datums": [
                {
                    "expr": "logo.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "logo.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "13",
                    "name": "sx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.sx",
                    "name": "sy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__27.__2,__24.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/-Xf0f13+f0/-Yf0f13_ia-r+qXqYf4n-r+qXqYf4.5m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1',float('-73.539131'),float('-73.539131'),float('-inf'),float('73.539131'),float('73.539131'),float('inf'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2081.7226558155644,
                2592.4510329694203
            ],
            "name": "logo_scale",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "",
                "title('Scale (2D)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('sx', float)",
                "input('sy', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_xy(shape, x0, y0, sx, sy))",
                "",
                "# UI",
                "sb.ui.wireframe([(x0 + sx, y0, _z), (x0, y0, _z), (x0, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sx, y0 + sx/10, _z), (x0 + sx, y0 - sx/10, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sy/10, y0 + sy, _z), (x0 - sy/10, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.point(x0, y0, _z, color=sb.color.teal)",
                "sb.ui.point(x0 + sx, y0, _z, color=sb.color.teal, drag=(sx, None, None))",
                "sb.ui.point(x0, y0 + sy, _z, color=sb.color.teal, drag=(None, sy, None))",
                ""
            ],
            "uid": 28
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__23.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__23.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "logo.r+0.5",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf4.5',float('-4.500000'),float('-4.500000'),float('-inf'),float('4.500000'),float('4.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1153.4078547881913,
                3039.5324087150457
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 29
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-0.3",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "ring.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__28.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1m+f0/-Xf0f13+f0/-Yf0f13_ia-r+qXqYf4n-r+qXqYf4.5m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1a-f-1.85Z-Zf-1.55',float('-73.539131'),float('-73.539131'),float('-1.850000'),float('73.539131'),float('73.539131'),float('-1.550000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2503.4632672667326,
                2635.1499662801994
            ],
            "name": "e3",
            "script": [
                "import fab",
                "",
                "title('Extrude')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.extrude_z(shape, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, zmin), (_x, _y, zmax)], color=sb.color.green)",
                "sb.ui.point(_x, _y, zmin, color=sb.color.green)",
                "sb.ui.point(_x, _y, zmax, color=sb.color.green)",
                "",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__36.__1,__20.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__11.__5,__31.__0,__51.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiaam__f1aa-f-70X-Xf70a-f-70Y-Yf70a-f-2.45Z-Zf-1.55nam__f1mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4a-f-1.85Z-Zf-1.55am__f1-r+qXqYf57a-f-2.45Z-Zf-1.55niiam__f1m+f0/-Xf0f13+f0/-Yf0f13_ia-r+qXqYf4n-r+qXqYf4.5m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1a-f-1.85Z-Zf-1.55aiiim-*f2f0X__iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05am__f1iaa-f-3X-Xf3a-f11.2Y-Yf14.2aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05-r++q-Xf3q-Yf14.2q-Zf4.05f0-r++q-Xf-3q-Yf14.2q-Zf4.05f0-r++q-Xf3q-Yf11.2q-Zf4.05f0-r++q-Xf-3q-Yf11.2q-Zf4.05f0-r++q-Xf3q-Yf14.2q-Zf-2.45f0-r++q-Xf-3q-Yf14.2q-Zf-2.45f0-r++q-Xf3q-Yf11.2q-Zf-2.45f0-r++q-Xf-3q-Yf11.2q-Zf-2.45f0am__f1-r+q-Xf3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf-3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf3q-Zf-2.45f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf-3q-Zf-2.45f0a-f11.2Y-Yf14.2aam__f1aa-f-41.1X-Xf41.1a-f-15.7Y-Yf15.7a-f-3.45Z-Zf-2.45niam__f1aa-f-35.1X-Xf35.1a-f-19.7Y-Yf7.7a-f-3.45Z-Zf-2.45am__f1aa-f-43.1X-Xf43.1a-f-21.2Y-Yf-4.2a-f-3.45Z-Zf-2.45nam__f1aa-f-38.1X-Xf38.1a-f-12.7Y-Yf12.7a-f1.7Z-Zf3.2iiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f0.5X*f0.866025Y+*f-0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f0.5X*f-0.866025Y+*f0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55',float('-70.000000'),float('-70.000000'),float('-2.450000'),float('70.000000'),float('70.000000'),float('-1.550000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3483.3255868077854,
                2511.9591833321188
            ],
            "name": "d4",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "backer.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "backer.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ring.zmax+4",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "76.2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.width/3",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1.5",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-38.1X-Xf38.1a-f-12.7Y-Yf12.7a-f1.7Z-Zf3.2',float('-38.099998'),float('-12.700000'),float('1.700000'),float('38.099998'),float('12.700000'),float('3.200000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2353.1531340083984,
                3272.699791836539
            ],
            "name": "slide",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "slide.x-slide.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ring.zmax+self.depth/2-backer.depth",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "3",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "5",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "6.5",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5',float('-39.599998'),float('-2.500000'),float('-2.450000'),float('-36.599998'),float('2.500000'),float('4.050000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                1796.9276357445028,
                3744.9371364594363
            ],
            "name": "clip",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__16.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5',float('-39.599998'),float('-2.500000'),float('-2.450000'),float('39.599998'),float('2.500000'),float('4.050000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2384.9908771956657,
                3983.2620032018135
            ],
            "name": "m1",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 17
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y+slide.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__16.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "6",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "clip.width",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__16.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__16.__6]",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05am__f1iaa-f-3X-Xf3a-f11.2Y-Yf14.2aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05-r++q-Xf3q-Yf14.2q-Zf4.05f0-r++q-Xf-3q-Yf14.2q-Zf4.05f0-r++q-Xf3q-Yf11.2q-Zf4.05f0-r++q-Xf-3q-Yf11.2q-Zf4.05f0-r++q-Xf3q-Yf14.2q-Zf-2.45f0-r++q-Xf-3q-Yf14.2q-Zf-2.45f0-r++q-Xf3q-Yf11.2q-Zf-2.45f0-r++q-Xf-3q-Yf11.2q-Zf-2.45f0am__f1-r+q-Xf3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf-3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf3q-Zf-2.45f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf-3q-Zf-2.45f0a-f11.2Y-Yf14.2',float('-3.000000'),float('11.200000'),float('-2.450000'),float('3.000000'),float('14.200000'),float('4.050000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                2254.117202409894,
                4258.630285302506
            ],
            "name": "bottom_clip",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 18
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "clip.z-clip.depth/2-self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.width+clip.width*2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height+bottom_clip.height*2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-41.1X-Xf41.1a-f-15.7Y-Yf15.7a-f-3.45Z-Zf-2.45',float('-41.099998'),float('-15.700000'),float('-3.450000'),float('41.099998'),float('15.700000'),float('-2.450000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2371.5267586986947,
                4732.524561888433
            ],
            "name": "clip_backer",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 19
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__17.__4,__18.__7,__47.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__14.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiim-*f2f0X__iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05am__f1iaa-f-3X-Xf3a-f11.2Y-Yf14.2aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05-r++q-Xf3q-Yf14.2q-Zf4.05f0-r++q-Xf-3q-Yf14.2q-Zf4.05f0-r++q-Xf3q-Yf11.2q-Zf4.05f0-r++q-Xf-3q-Yf11.2q-Zf4.05f0-r++q-Xf3q-Yf14.2q-Zf-2.45f0-r++q-Xf-3q-Yf14.2q-Zf-2.45f0-r++q-Xf3q-Yf11.2q-Zf-2.45f0-r++q-Xf-3q-Yf11.2q-Zf-2.45f0am__f1-r+q-Xf3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf-3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf3q-Zf-2.45f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf-3q-Zf-2.45f0a-f11.2Y-Yf14.2aam__f1aa-f-41.1X-Xf41.1a-f-15.7Y-Yf15.7a-f-3.45Z-Zf-2.45niam__f1aa-f-35.1X-Xf35.1a-f-19.7Y-Yf7.7a-f-3.45Z-Zf-2.45am__f1aa-f-43.1X-Xf43.1a-f-21.2Y-Yf-4.2a-f-3.45Z-Zf-2.45nam__f1aa-f-38.1X-Xf38.1a-f-12.7Y-Yf12.7a-f1.7Z-Zf3.2',float('-41.099998'),float('-15.700000'),float('-3.450000'),float('41.099998'),float('15.700000'),float('4.050000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2938.9285046752493,
                4066.6271164430605
            ],
            "name": "d5",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 30
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__30.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiim-*f2f0X__iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05am__f1iaa-f-3X-Xf3a-f11.2Y-Yf14.2aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05-r++q-Xf3q-Yf14.2q-Zf4.05f0-r++q-Xf-3q-Yf14.2q-Zf4.05f0-r++q-Xf3q-Yf11.2q-Zf4.05f0-r++q-Xf-3q-Yf11.2q-Zf4.05f0-r++q-Xf3q-Yf14.2q-Zf-2.45f0-r++q-Xf-3q-Yf14.2q-Zf-2.45f0-r++q-Xf3q-Yf11.2q-Zf-2.45f0-r++q-Xf-3q-Yf11.2q-Zf-2.45f0am__f1-r+q-Xf3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf-3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf3q-Zf-2.45f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf-3q-Zf-2.45f0a-f11.2Y-Yf14.2aam__f1aa-f-41.1X-Xf41.1a-f-15.7Y-Yf15.7a-f-3.45Z-Zf-2.45niam__f1aa-f-35.1X-Xf35.1a-f-19.7Y-Yf7.7a-f-3.45Z-Zf-2.45am__f1aa-f-43.1X-Xf43.1a-f-21.2Y-Yf-4.2a-f-3.45Z-Zf-2.45nam__f1aa-f-38.1X-Xf38.1a-f-12.7Y-Yf12.7a-f1.7Z-Zf3.2',float('-41.099998'),float('-15.700000'),float('-3.450000'),float('41.099998'),float('15.700000'),float('4.050000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                3321.289656173545,
                4063.8401448423656
            ],
            "name": "slide_clips",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 31
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__13.__2,__56.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iaiaam__f1aa-f-70X-Xf70a-f-70Y-Yf70a-f-2.45Z-Zf-1.55nam__f1mXYf3.5am-Xf-13.5121-Yf98.8245-Zf3.5m*X-f1xn/r++qXqYqZf56.2942*Y-f1xn/r++qXqYqZf56.2942*Z-f1xn/r++qXqYqZf56.2942m-Xf13.5121-Yf-98.8245-Zf-3.5m-Xf-53.0787-Yf85.3323-Zf3.5m*X-f1xn/r++qXqYqZf31.4715*Y-f1xn/r++qXqYqZf31.4715*Z-f1xn/r++qXqYqZf31.4715m-Xf53.0787-Yf-85.3323-Zf-3.5m-Xf72.2287-Yf53.5681-Zf3.5m*X-f1xn/r++qXqYqZf68.1885*Y-f1xn/r++qXqYqZf68.1885*Z-f1xn/r++qXqYqZf68.1885m-Xf-72.2287-Yf-53.5681-Zf-3.5m-Xf-73.6751-Yf-45.0704-Zf3.5m*X-f1xn/r++qXqYqZf59.9407*Y-f1xn/r++qXqYqZf59.9407*Z-f1xn/r++qXqYqZf59.9407m-Xf73.6751-Yf45.0704-Zf-3.5m-Xf-85.8696-Yf37.1545-Zf3.5m*X+f1xn/r++qXqYqZf38.9494*Y+f1xn/r++qXqYqZf38.9494*Z+f1xn/r++qXqYqZf38.9494m-Xf85.8696-Yf-37.1545-Zf-3.5m-Xf-18.3218-Yf-73.2993-Zf3.5m*X-f1xn/r++qXqYqZf37.2832*Y-f1xn/r++qXqYqZf37.2832*Z-f1xn/r++qXqYqZf37.2832m-Xf18.3218-Yf73.2993-Zf-3.5m-Xf0.505098-Yf109.855-Zf3.5m*X-f1xn/r++qXqYqZf53.1495*Y-f1xn/r++qXqYqZf53.1495*Z-f1xn/r++qXqYqZf53.1495m-Xf-0.505098-Yf-109.855-Zf-3.5m-Xf-93.4294-Yf-84.6794-Zf3.5m*X+f1xn/r++qXqYqZf27.1077*Y+f1xn/r++qXqYqZf27.1077*Z+f1xn/r++qXqYqZf27.1077m-Xf93.4294-Yf84.6794-Zf-3.5m-Xf75.5299-Yf27.259-Zf3.5m*X-f1xn/r++qXqYqZf32.6821*Y-f1xn/r++qXqYqZf32.6821*Z-f1xn/r++qXqYqZf32.6821m-Xf-75.5299-Yf-27.259-Zf-3.5m-Xf82.5647-Yf84.8746-Zf3.5m*X+f1xn/r++qXqYqZf32.5653*Y+f1xn/r++qXqYqZf32.5653*Z+f1xn/r++qXqYqZf32.5653m-Xf-82.5647-Yf-84.8746-Zf-3.5m-Xf44.4109-Yf-103.324-Zf3.5m*X+f1xn/r++qXqYqZf40.7874*Y+f1xn/r++qXqYqZf40.7874*Z+f1xn/r++qXqYqZf40.7874m-Xf-44.4109-Yf103.324-Zf-3.5m-Xf-30.5521-Yf65.6843-Zf3.5m*X-f1xn/r++qXqYqZf28.6767*Y-f1xn/r++qXqYqZf28.6767*Z-f1xn/r++qXqYqZf28.6767m-Xf30.5521-Yf-65.6843-Zf-3.5m-Xf0-Yf0-Zf0m+*f-0.00152319X*f0.999999Y+*f-0.999999X*f-0.00152319Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 12.566370614359172)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 12.566370614359172)) - 0.6434143784150808;am__f1aa-f-510.75X-Xf510.75a-f-510.75Y-Yf510.75a-f2.5Z-Zf4.5am__f1aa-f-85.125X-Xf85.125a-f-85.125Y-Yf85.125a-f3Z-Zf4a-f-1.85Z-Zf-1.55am__f1-r+qXqYf57a-f-2.45Z-Zf-1.55niiam__f1m+f0/-Xf0f13+f0/-Yf0f13_ia-r+qXqYf4n-r+qXqYf4.5m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1a-f-1.85Z-Zf-1.55aiiim-*f2f0X__iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05am__f1iaa-f-3X-Xf3a-f11.2Y-Yf14.2aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05-r++q-Xf3q-Yf14.2q-Zf4.05f0-r++q-Xf-3q-Yf14.2q-Zf4.05f0-r++q-Xf3q-Yf11.2q-Zf4.05f0-r++q-Xf-3q-Yf11.2q-Zf4.05f0-r++q-Xf3q-Yf14.2q-Zf-2.45f0-r++q-Xf-3q-Yf14.2q-Zf-2.45f0-r++q-Xf3q-Yf11.2q-Zf-2.45f0-r++q-Xf-3q-Yf11.2q-Zf-2.45f0am__f1-r+q-Xf3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf-3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf3q-Zf-2.45f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf-3q-Zf-2.45f0a-f11.2Y-Yf14.2aam__f1aa-f-41.1X-Xf41.1a-f-15.7Y-Yf15.7a-f-3.45Z-Zf-2.45niam__f1aa-f-35.1X-Xf35.1a-f-19.7Y-Yf7.7a-f-3.45Z-Zf-2.45am__f1aa-f-43.1X-Xf43.1a-f-21.2Y-Yf-4.2a-f-3.45Z-Zf-2.45nam__f1aa-f-38.1X-Xf38.1a-f-12.7Y-Yf12.7a-f1.7Z-Zf3.2iiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f0.5X*f0.866025Y+*f-0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f0.5X*f-0.866025Y+*f0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55am__f1aa-f-36.1X-Xf36.1a-f-10.7Y-Yf10.7a-f-2.45Z-Zf-1.55',float('-70.000000'),float('-70.000000'),float('-2.450000'),float('70.000000'),float('70.000000'),float('-1.550000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                3940.9594493179748,
                2550.6521513848625
            ],
            "name": "logo_backer",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 32
        },
        {
            "datums": [
                {
                    "expr": "hanger_slot.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "hanger_slot.y+2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "hanger_slot.z+hanger_slot.depth/2-self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "hanger_slot.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "hanger_slot.height-5",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "hanger_slot.depth-2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-28.375X-Xf28.375a-f70.5Y-Yf82.25a-f-4.3Z-Zf-0.7',float('-28.375000'),float('70.500000'),float('-4.300000'),float('28.375000'),float('82.250000'),float('-0.700000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5286.822972216053,
                1370.4065521740158
            ],
            "name": "plug",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 33
        },
        {
            "datums": [
                {
                    "expr": "backer.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "backer.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "backer.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "backer.width-0.1",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "backer.height-0.1",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-69.95X-Xf69.95a-f-69.95Y-Yf69.95a-f-3Z-Zf-1',float('-69.949997'),float('-69.949997'),float('-3.000000'),float('69.949997'),float('69.949997'),float('-1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5294.271212519638,
                4994.690272145514
            ],
            "name": "backer_spacer",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 34
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__34.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__34.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__34.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "backer_spacer.width-4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "backer_spacer.height-4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__34.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-67.95X-Xf67.95a-f-67.95Y-Yf67.95a-f-3Z-Zf-1',float('-67.949997'),float('-67.949997'),float('-3.000000'),float('67.949997'),float('67.949997'),float('-1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5762.039285828196,
                5411.888824015309
            ],
            "name": "c2",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 37
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__34.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__37.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-69.95X-Xf69.95a-f-69.95Y-Yf69.95a-f-3Z-Zf-1nam__f1aa-f-67.95X-Xf67.95a-f-67.95Y-Yf67.95a-f-3Z-Zf-1',float('-69.949997'),float('-69.949997'),float('-3.000000'),float('69.949997'),float('69.949997'),float('-1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                6099.169428753281,
                5288.274438276111
            ],
            "name": "d6",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 38
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__38.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-69.95X-Xf69.95a-f-69.95Y-Yf69.95a-f-3Z-Zf-1nam__f1aa-f-67.95X-Xf67.95a-f-67.95Y-Yf67.95a-f-3Z-Zf-1',float('-69.949997'),float('-69.949997'),float('-3.000000'),float('69.949997'),float('69.949997'),float('-1.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                6477.03613061515,
                5274.227348987565
            ],
            "name": "back_spacer",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 39
        },
        {
            "datums": [
                {
                    "expr": "plug.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plug.y-plug.height/2-self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plug.z-plug.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plug.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "9",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-28.375X-Xf28.375a-f61.5Y-Yf70.5a-f-4.3Z-Zf-3.3',float('-28.375000'),float('61.500000'),float('-4.300000'),float('28.375000'),float('70.500000'),float('-3.300000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5205.857259540488,
                2066.005600057346
            ],
            "name": "plug_retainer",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 40
        },
        {
            "datums": [
                {
                    "expr": "plug.x+plug.width/2+self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plug.y+plug.height/2-self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plug_retainer.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plug_retainer.height",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "plug.height+plug_retainer.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "plug_retainer.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3',float('28.375000'),float('61.500000'),float('-4.300000'),float('37.375000'),float('82.250000'),float('-3.300000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                4904.676196810521,
                2552.2362338199296
            ],
            "name": "c3",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 41
        },
        {
            "datums": [
                {
                    "expr": "plug.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__41.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3',float('-37.375000'),float('61.500000'),float('-4.300000'),float('37.375000'),float('82.250000'),float('-3.300000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                5270.754525297824,
                2871.9102671468704
            ],
            "name": "m2",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 43
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__33.__6,__40.__6,__43.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iiam__f1aa-f-28.375X-Xf28.375a-f70.5Y-Yf82.25a-f-4.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f61.5Y-Yf70.5a-f-4.3Z-Zf-3.3im-*f2f0X__am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3',float('-37.375000'),float('61.500000'),float('-4.300000'),float('37.375000'),float('82.250000'),float('-0.700000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                5816.017092236872,
                2304.4596025844207
            ],
            "name": "back_plug",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 44
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__53.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__44.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f91.375Y_iiam__f1aa-f-28.375X-Xf28.375a-f70.5Y-Yf82.25a-f-4.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f61.5Y-Yf70.5a-f-4.3Z-Zf-3.3im-*f2f0X__am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3iiam__f1aa-f-28.375X-Xf28.375a-f70.5Y-Yf82.25a-f-4.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f61.5Y-Yf70.5a-f-4.3Z-Zf-3.3im-*f2f0X__am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3',float('-37.375000'),float('61.500000'),float('-4.300000'),float('37.375000'),float('121.250000'),float('-0.700000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                6633.357952881073,
                2307.1450708496836
            ],
            "name": "m3",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 49
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__49.__4,__53.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iim_-*f2f91.375Y_iiam__f1aa-f-28.375X-Xf28.375a-f70.5Y-Yf82.25a-f-4.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f61.5Y-Yf70.5a-f-4.3Z-Zf-3.3im-*f2f0X__am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3iiam__f1aa-f-28.375X-Xf28.375a-f70.5Y-Yf82.25a-f-4.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f61.5Y-Yf70.5a-f-4.3Z-Zf-3.3im-*f2f0X__am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3m-Xf0-Yf91.375-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-91.375-Zf0a= abs( sin(X / 2.0943951023931953)*cos(Y / 3.222146311374147) + sin(Y / 3.222146311374147)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 2.0943951023931953)) - 0.8;am__f1aa-f-10X-Xf10a-f76.375Y-Yf106.375a-f-4.3Z-Zf-3.8',float('-37.375000'),float('61.500000'),float('-4.300000'),float('37.375000'),float('121.250000'),float('-0.700000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                7111.459007669858,
                2508.2377020445733
            ],
            "name": "plug_spacer",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 50
        },
        {
            "datums": [
                {
                    "expr": "plug.x-10",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plug.x+10",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plug.y",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plug.y+30",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "plug_retainer.z-plug_retainer.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.zmin+plug_retainer.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "3",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "1.95",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "0.1",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "0.8",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 2.0943951023931953)*cos(Y / 3.222146311374147) + sin(Y / 3.222146311374147)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 2.0943951023931953)) - 0.8;am__f1aa-f-10X-Xf10a-f76.375Y-Yf106.375a-f-4.3Z-Zf-3.8',float('-10.000000'),float('76.375000'),float('-4.300000'),float('10.000000'),float('106.375000'),float('-3.800000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                5815.95387118575,
                2866.626982906859
            ],
            "name": "g1",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 52
        },
        {
            "datums": [
                {
                    "expr": "(g1.xmin+g1.xmax)/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "(g1.ymin+g1.ymax)/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__52.__10]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf91.375-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-91.375-Zf0a= abs( sin(X / 2.0943951023931953)*cos(Y / 3.222146311374147) + sin(Y / 3.222146311374147)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 2.0943951023931953)) - 0.8;am__f1aa-f-10X-Xf10a-f76.375Y-Yf106.375a-f-4.3Z-Zf-3.8',float('-15.000000'),float('81.375000'),float('-4.300000'),float('15.000000'),float('101.375000'),float('-3.800000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6283.672186349891,
                3072.92099263705
            ],
            "name": "r3",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 53
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__19.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "clip_backer.y-6",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__19.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "clip_backer.width-12",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "clip_backer.height-4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__19.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-35.1X-Xf35.1a-f-19.7Y-Yf7.7a-f-3.45Z-Zf-2.45',float('-35.099998'),float('-19.700001'),float('-3.450000'),float('35.099998'),float('7.700000'),float('-2.450000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2778.894559487103,
                5260.082733408832
            ],
            "name": "clip_backer_cutout",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 45
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__19.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__45.__6,__59.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-41.1X-Xf41.1a-f-15.7Y-Yf15.7a-f-3.45Z-Zf-2.45niam__f1aa-f-35.1X-Xf35.1a-f-19.7Y-Yf7.7a-f-3.45Z-Zf-2.45am__f1aa-f-43.1X-Xf43.1a-f-21.2Y-Yf-4.2a-f-3.45Z-Zf-2.45',float('-41.099998'),float('-15.700000'),float('-3.450000'),float('41.099998'),float('15.700000'),float('-2.450000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3637.969435539301,
                5088.890839131159
            ],
            "name": "d7",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 47
        },
        {
            "datums": [
                {
                    "expr": "ring.x+ring.r-self.r-1",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ring.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "backer.z-backer.depth/2-2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "gild_ring.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1.1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55',float('53.799999'),float('-1.100000'),float('-4.450000'),float('56.000000'),float('1.100000'),float('-0.550000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                133.64732982562123,
                3552.1305106289697
            ],
            "name": "ring_peg",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 48
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__48.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "ring.x",
                    "name": "x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ring.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "6",
                    "name": "n",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f0.5X*f0.866025Y+*f-0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f0.5X*f-0.866025Y+*f0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55',float('-56.000000'),float('-49.047398'),float('-4.450000'),float('56.000000'),float('49.047398'),float('-0.550000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                496.61382022962175,
                3610.7843178965236
            ],
            "name": "a0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Array (polar)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('x', float)",
                "input('y', float)",
                "input('n', int)",
                "",
                "output('array', fab.shapes.iterate_polar(shape, x, y, n))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * 0.3 + x,",
                "     math.sin(i/36. * 2*math.pi) * 0.3 + y, 0)",
                "    for i in range(36)], close=True, color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, 0, color=sb.color.teal)",
                ""
            ],
            "uid": 51
        },
        {
            "datums": [
                {
                    "expr": "ring.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ring.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "ring.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.R-4",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "ring.r",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf57a-f-1.55Z-Zf-0.55nam__f1-r+qXqYf53a-f-1.55Z-Zf-0.55',float('-57.000000'),float('-57.000000'),float('-1.550000'),float('57.000000'),float('57.000000'),float('-0.550000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                499.63671218847185,
                3975.1202225277975
            ],
            "name": "gild_ring",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 54
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__54.__6,__51.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iaam__f1-r+qXqYf57a-f-1.55Z-Zf-0.55nam__f1-r+qXqYf53a-f-1.55Z-Zf-0.55iiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f0.5X*f0.866025Y+*f-0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55m-Xf0-Yf0-Zf0m+*f0.5X*f-0.866025Y+*f0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf54.9qYf1.1a-f-4.45Z-Zf-0.55',float('-57.000000'),float('-57.000000'),float('-4.450000'),float('57.000000'),float('57.000000'),float('-0.550000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1000.2628763873427,
                3870.5016084571703
            ],
            "name": "gilding",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 55
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "backer.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.width-4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height-4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "backer.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-36.1X-Xf36.1a-f-10.7Y-Yf10.7a-f-2.45Z-Zf-1.55',float('-36.099998'),float('-10.700000'),float('-2.450000'),float('36.099998'),float('10.700000'),float('-1.550000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3469.264706617269,
                1991.9099450158055
            ],
            "name": "slide_back",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 56
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "-backer.height/2-40",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "-0.85",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__58.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-110-Zf-0.85m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0aiiim-*f2f0X__iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05am__f1iaa-f-3X-Xf3a-f11.2Y-Yf14.2aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05-r++q-Xf3q-Yf14.2q-Zf4.05f0-r++q-Xf-3q-Yf14.2q-Zf4.05f0-r++q-Xf3q-Yf11.2q-Zf4.05f0-r++q-Xf-3q-Yf11.2q-Zf4.05f0-r++q-Xf3q-Yf14.2q-Zf-2.45f0-r++q-Xf-3q-Yf14.2q-Zf-2.45f0-r++q-Xf3q-Yf11.2q-Zf-2.45f0-r++q-Xf-3q-Yf11.2q-Zf-2.45f0am__f1-r+q-Xf3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf-3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf3q-Zf-2.45f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf-3q-Zf-2.45f0a-f11.2Y-Yf14.2aam__f1aa-f-41.1X-Xf41.1a-f-15.7Y-Yf15.7a-f-3.45Z-Zf-2.45niam__f1aa-f-35.1X-Xf35.1a-f-19.7Y-Yf7.7a-f-3.45Z-Zf-2.45am__f1aa-f-43.1X-Xf43.1a-f-21.2Y-Yf-4.2a-f-3.45Z-Zf-2.45nam__f1aa-f-38.1X-Xf38.1a-f-12.7Y-Yf12.7a-f1.7Z-Zf3.2',float('-41.099998'),float('-125.699997'),float('-4.300000'),float('41.099998'),float('-94.300003'),float('3.200000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                4094.9596612353553,
                3964.2106970474006
            ],
            "name": "t0",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 57
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "180",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__31.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0aiiim-*f2f0X__iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05am__f1iaa-f-3X-Xf3a-f11.2Y-Yf14.2aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05-r++q-Xf3q-Yf14.2q-Zf4.05f0-r++q-Xf-3q-Yf14.2q-Zf4.05f0-r++q-Xf3q-Yf11.2q-Zf4.05f0-r++q-Xf-3q-Yf11.2q-Zf4.05f0-r++q-Xf3q-Yf14.2q-Zf-2.45f0-r++q-Xf-3q-Yf14.2q-Zf-2.45f0-r++q-Xf3q-Yf11.2q-Zf-2.45f0-r++q-Xf-3q-Yf11.2q-Zf-2.45f0am__f1-r+q-Xf3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf-3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf3q-Zf-2.45f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf-3q-Zf-2.45f0a-f11.2Y-Yf14.2aam__f1aa-f-41.1X-Xf41.1a-f-15.7Y-Yf15.7a-f-3.45Z-Zf-2.45niam__f1aa-f-35.1X-Xf35.1a-f-19.7Y-Yf7.7a-f-3.45Z-Zf-2.45am__f1aa-f-43.1X-Xf43.1a-f-21.2Y-Yf-4.2a-f-3.45Z-Zf-2.45nam__f1aa-f-38.1X-Xf38.1a-f-12.7Y-Yf12.7a-f1.7Z-Zf3.2',float('-41.099998'),float('-15.700000'),float('-3.450000'),float('41.099998'),float('15.700000'),float('4.050000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3712.884892603785,
                3996.5841816061384
            ],
            "name": "r4",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 58
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y-slide.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__45.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.width+10",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "17",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__45.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-43.1X-Xf43.1a-f-21.2Y-Yf-4.2a-f-3.45Z-Zf-2.45',float('-43.099998'),float('-21.200001'),float('-3.450000'),float('43.099998'),float('-4.200000'),float('-2.450000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3328.421048717342,
                5628.281822800151
            ],
            "name": "c1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 59
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__44.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f0Y_iiam__f1aa-f-28.375X-Xf28.375a-f70.5Y-Yf82.25a-f-4.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f61.5Y-Yf70.5a-f-4.3Z-Zf-3.3im-*f2f0X__am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3',float('-37.375000'),float('-82.250000'),float('-4.300000'),float('37.375000'),float('-61.500000'),float('-0.700000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                3765.9020188618956,
                3466.933832368125
            ],
            "name": "r5",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 60
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "clip_backer.y+t0.dy+10",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plug_retainer.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "50",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "clip_backer.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3',float('-2.000000'),float('-125.000000'),float('-4.300000'),float('2.000000'),float('-75.000000'),float('-3.300000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                4021.6665022422503,
                4417.794384231254
            ],
            "name": "c4",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 61
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__61.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "15",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "1",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3m-Xf15-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3',float('-2.000000'),float('-125.000000'),float('-4.300000'),float('17.000000'),float('-75.000000'),float('-3.300000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                4414.336209385435,
                4481.73462827802
            ],
            "name": "a1",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 62
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__62.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3m-Xf15-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3m-Xf15-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3',float('-17.000000'),float('-125.000000'),float('-4.300000'),float('17.000000'),float('-75.000000'),float('-3.300000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                4794.689247570507,
                4592.773803721064
            ],
            "name": "m4",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 63
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__60.__4,__57.__7,__63.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iim_-*f2f0Y_iiam__f1aa-f-28.375X-Xf28.375a-f70.5Y-Yf82.25a-f-4.3Z-Zf-0.7am__f1aa-f-28.375X-Xf28.375a-f61.5Y-Yf70.5a-f-4.3Z-Zf-3.3im-*f2f0X__am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3am__f1aa-f28.375X-Xf37.375a-f61.5Y-Yf82.25a-f-4.3Z-Zf-3.3m-Xf0-Yf-110-Zf-0.85m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0aiiim-*f2f0X__iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05am__f1iaa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5aa-f-39.6X-Xf-36.6a-f-2.5Y-Yf2.5a-f-2.45Z-Zf4.05-r++q-Xf-36.6q-Yf2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-39.6q-Yf-2.5q-Zf4.05f0-r++q-Xf-36.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf2.5q-Zf-2.45f0-r++q-Xf-36.6q-Yf-2.5q-Zf-2.45f0-r++q-Xf-39.6q-Yf-2.5q-Zf-2.45f0am__f1-r+q-Xf-36.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf4.05f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf4.05f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-36.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-36.6q-Zf-2.45f0a-f-2.5Y-Yf2.5am__f1-r+q-Xf-39.6q-Yf-2.5f0a-f-2.45Z-Zf4.05a-r+q-Yf-2.5q-Zf-2.45f0a-f-39.6X-Xf-36.6a-r+q-Xf-39.6q-Zf-2.45f0a-f-2.5Y-Yf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05am__f1iaa-f-3X-Xf3a-f11.2Y-Yf14.2aa-f-3X-Xf3a-f11.2Y-Yf14.2a-f-2.45Z-Zf4.05-r++q-Xf3q-Yf14.2q-Zf4.05f0-r++q-Xf-3q-Yf14.2q-Zf4.05f0-r++q-Xf3q-Yf11.2q-Zf4.05f0-r++q-Xf-3q-Yf11.2q-Zf4.05f0-r++q-Xf3q-Yf14.2q-Zf-2.45f0-r++q-Xf-3q-Yf14.2q-Zf-2.45f0-r++q-Xf3q-Yf11.2q-Zf-2.45f0-r++q-Xf-3q-Yf11.2q-Zf-2.45f0am__f1-r+q-Xf3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf14.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf4.05f0a-f-3X-Xf3a-r+q-Xf-3q-Zf4.05f0a-f11.2Y-Yf14.2am__f1-r+q-Xf3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf14.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf3q-Zf-2.45f0a-f11.2Y-Yf14.2am__f1-r+q-Xf-3q-Yf11.2f0a-f-2.45Z-Zf4.05a-r+q-Yf11.2q-Zf-2.45f0a-f-3X-Xf3a-r+q-Xf-3q-Zf-2.45f0a-f11.2Y-Yf14.2aam__f1aa-f-41.1X-Xf41.1a-f-15.7Y-Yf15.7a-f-3.45Z-Zf-2.45niam__f1aa-f-35.1X-Xf35.1a-f-19.7Y-Yf7.7a-f-3.45Z-Zf-2.45am__f1aa-f-43.1X-Xf43.1a-f-21.2Y-Yf-4.2a-f-3.45Z-Zf-2.45nam__f1aa-f-38.1X-Xf38.1a-f-12.7Y-Yf12.7a-f1.7Z-Zf3.2im-*f2f0X__m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3m-Xf15-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3m-Xf15-Yf0-Zf0am__f1aa-f-2X-Xf2a-f-125Y-Yf-75a-f-4.3Z-Zf-3.3',float('-41.099998'),float('-125.699997'),float('-4.300000'),float('41.099998'),float('-61.500000'),float('3.200000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                5524.180384783451,
                4056.6036409562685
            ],
            "name": "bottom_slide_holder",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 64
        }
    ],
    "protocol": 6,
    "type": "sb"
}
