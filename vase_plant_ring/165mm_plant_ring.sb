{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "4",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "165/2-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+8",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf89.5a-f0Z-Zf4nam__f1-r+qXqYf81.5a-f0Z-Zf4',float('-89.500000'),float('-89.500000'),float('0.000000'),float('89.500000'),float('89.500000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -592.2897748903025,
                -329.4657687798591
            ],
            "name": "brim",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-10",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__0.__1]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__0.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__0.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "brim.r-5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+5+1",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf82.5a-f-6Z-Zf4nam__f1-r+qXqYf76.5a-f-6Z-Zf4',float('-82.500000'),float('-82.500000'),float('-6.000000'),float('82.500000'),float('82.500000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -204.22151268750306,
                173.4759498343294
            ],
            "name": "lip",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "brim.x-brim.R",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "brim.x+brim.R",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "brim.y-brim.R",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "brim.y+brim.R",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "brim.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "brim.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "1",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "1",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "0.001",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "0.6",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4',float('-89.500000'),float('-89.500000'),float('0.000000'),float('89.500000'),float('89.500000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                -980.1306829115989,
                350.70616396719214
            ],
            "name": "vent",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__10]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "brim.x",
                    "name": "x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "brim.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "4",
                    "name": "n",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4',float('-89.500000'),float('-89.500000'),float('0.000000'),float('89.500000'),float('89.500000'),float('4.000000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -601.973637512229,
                344.66597875918546
            ],
            "name": "a0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Array (polar)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('x', float)",
                "input('y', float)",
                "input('n', int)",
                "",
                "output('array', fab.shapes.iterate_polar(shape, x, y, n))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * 0.3 + x,",
                "     math.sin(i/36. * 2*math.pi) * 0.3 + y, 0)",
                "    for i in range(36)], close=True, color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, 0, color=sb.color.teal)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__5.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4aam__f1-r+qXqYf81.5a-f0Z-Zf4nam__f1-r+qXqYf51.5a-f0Z-Zf4',float('-81.500000'),float('-81.500000'),float('0.000000'),float('81.500000'),float('81.500000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -215.33981528845345,
                648.0491188980579
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__4]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__2.__5]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "brim.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "brim.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "brim.r-30",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "brim.r",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf81.5a-f0Z-Zf4nam__f1-r+qXqYf51.5a-f0Z-Zf4',float('-81.500000'),float('-81.500000'),float('0.000000'),float('81.500000'),float('81.500000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -596.3723454202365,
                680.7313870984824
            ],
            "name": "vent_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__5.__0]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__5.__1]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__5.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__5.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.R-5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__5.__4]",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf51.5a-f0Z-Zf4nam__f1-r+qXqYf46.5a-f0Z-Zf4',float('-51.500000'),float('-51.500000'),float('0.000000'),float('51.500000'),float('51.500000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -216.72921926465426,
                918.7656992547975
            ],
            "name": "pupil",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__6.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__6.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(pupil.zmax+pupil.zmin)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__6.__4]",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "(brim.zmax+brim.zmin)/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf2-r+q-f46.5r+qXqYqZf2',float('-48.500000'),float('-48.500000'),float('0.000000'),float('48.500000'),float('48.500000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                179.85627611165614,
                1288.1950007141104
            ],
            "name": "iris",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__0.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(brim.zmax+brim.zmin)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__0.__5]",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "(brim.zmax+brim.zmin)/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf2-r+q-f89.5r+qXqYqZf2',float('-91.500000'),float('-91.500000'),float('0.000000'),float('91.500000'),float('91.500000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -201.22981848407375,
                -492.73071596623674
            ],
            "name": "trim",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaam__f1-r+qXqYf89.5a-f0Z-Zf4nam__f1-r+qXqYf81.5a-f0Z-Zf4m-Xf0-Yf0-Zf2-r+q-f89.5r+qXqYqZf2iiim-Xf0-Yf0-Zf2-r+q-f46.5r+qXqYqZf2aam__f1-r+qXqYf51.5a-f0Z-Zf4nam__f1-r+qXqYf46.5a-f0Z-Zf4aiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4aam__f1-r+qXqYf81.5a-f0Z-Zf4nam__f1-r+qXqYf51.5a-f0Z-Zf4aam__f1-r+qXqYf82.5a-f-6Z-Zf4nam__f1-r+qXqYf76.5a-f-6Z-Zf4',float('-91.500000'),float('-91.500000'),float('-6.000000'),float('91.500000'),float('91.500000'),float('4.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1202.4679665079066,
                396.51736382161914
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__6,__8.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__7.__5,__6.__6,__4.__2,__1.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaam__f1-r+qXqYf89.5a-f0Z-Zf4nam__f1-r+qXqYf81.5a-f0Z-Zf4m-Xf0-Yf0-Zf2-r+q-f89.5r+qXqYqZf2iiim-Xf0-Yf0-Zf2-r+q-f46.5r+qXqYqZf2aam__f1-r+qXqYf51.5a-f0Z-Zf4nam__f1-r+qXqYf46.5a-f0Z-Zf4aiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 6.283185307179586)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /6283.185307179586) + sin(Z / 6283.185307179586)*cos(X / 6.283185307179586)) - 0.6;am__f1aa-f-89.5X-Xf89.5a-f-89.5Y-Yf89.5a-f0Z-Zf4aam__f1-r+qXqYf81.5a-f0Z-Zf4nam__f1-r+qXqYf51.5a-f0Z-Zf4aam__f1-r+qXqYf82.5a-f-6Z-Zf4nam__f1-r+qXqYf76.5a-f-6Z-Zf4',float('-91.500000'),float('-91.500000'),float('-6.000000'),float('91.500000'),float('91.500000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                803.3674276776779,
                368.10243872691035
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "-50",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+4",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lip.R-2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf80.5a-f-50Z-Zf-46',float('-80.500000'),float('-80.500000'),float('-50.000000'),float('80.500000'),float('80.500000'),float('-46.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                830.8912462785132,
                1972.144811019883
            ],
            "name": "plate",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "plate.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plate.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(plate.zmax+plate.zmin)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plate.r",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "4/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf-48-r+q-f80.5r+qXqYqZf2',float('-82.500000'),float('-82.500000'),float('-50.000000'),float('82.500000'),float('82.500000'),float('-46.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1349.9322122608094,
                1953.8030588378163
            ],
            "name": "plate_trim",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-4",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plate.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plate.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "40",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "60",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf60a-f-54Z-Zf-50nam__f1-r+qXqYf40a-f-54Z-Zf-50',float('-60.000000'),float('-60.000000'),float('-54.000000'),float('60.000000'),float('60.000000'),float('-50.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                825.0560985209107,
                2373.352862128237
            ],
            "name": "plate_stand",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 13
        }
    ],
    "protocol": 6,
    "type": "sb"
}
