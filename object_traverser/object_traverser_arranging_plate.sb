{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "3",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "98.25/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf49.125a-f0Z-Zf3',float('-49.125000'),float('-49.125000'),float('0.000000'),float('49.125000'),float('49.125000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                596.7633140470632,
                -1134.9903853264773
            ],
            "name": "disk",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "disk.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "disk.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "disk.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "disk.r+1.8",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf50.925a-f2Z-Zf3',float('-50.924999'),float('-50.924999'),float('2.000000'),float('50.924999'),float('50.924999'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                593.7633140470632,
                -753.8920943418682
            ],
            "name": "rim",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "disk.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "disk.y-19+2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmax-self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "76",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "26",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1.15",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-38X-Xf38a-f-30Y-Yf-4a-f1.85Z-Zf3',float('-38.000000'),float('-30.000000'),float('1.850000'),float('38.000000'),float('-4.000000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -551.2522672037791,
                1144.1312169519654
            ],
            "name": "slide",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__5,__0.__5,__27.__6,__31.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__14.__4,__9.__0,__6.__5,__25.__5,__28.__6,__16.__6,__10.__7]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiam__f1-r+qXqYf50.925a-f2Z-Zf3am__f1-r+qXqYf49.125a-f0Z-Zf3am__f1aa-f37.5X-Xf39.5a-f-30.75Y-Yf23.75a-f3Z-Zf4im-*f2f0X__aam__f1-r+q-Xf18q-Yf33f7.375a-f3Z-Zf3.5nam__f1-r+q-Xf18q-Yf33f6.375a-f3Z-Zf3.5aam__f1-r+q-Xf18q-Yf33f7.375a-f3Z-Zf3.5nam__f1-r+q-Xf18q-Yf33f6.375a-f3Z-Zf3.5niiiiiiim-*f2f0X__iiam__f1-r+q-Xf18q-Yf33f5.375a-f0Z-Zf2.6am__f1-r+q-Xf18q-Yf33f6.375a-f2.6Z-Zf3am__f1aa-f14X-Xf22a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5iiam__f1-r+q-Xf18q-Yf33f5.375a-f0Z-Zf2.6am__f1-r+q-Xf18q-Yf33f6.375a-f2.6Z-Zf3am__f1aa-f14X-Xf22a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5iiam__f1aa-f-38X-Xf38a-f-30Y-Yf-4a-f1.85Z-Zf3am__f1aa-f-37X-Xf37a-f-29Y-Yf-5a-f-0.575Z-Zf5.425im-*f2f0X__am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+qXq-Yf33f9.625a-f0Z-Zf3mXY/Zf0.4-r++qXq-Yf-40.5q-Zf11.5f10am__f1aa-f-7.5X-Xf7.5a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5am__f1aa-f-10.5X-Xf10.5a-f3Y-Yf63a-f2Z-Zf8m-Xf0-Yf27-Zf0iiam__f1aa-f-38X-Xf38a-f-30Y-Yf-4a-f1.85Z-Zf3am__f1aa-f-37X-Xf37a-f-29Y-Yf-5a-f-0.575Z-Zf5.425im-*f2f0X__am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4',float('-50.924999'),float('-50.924999'),float('0.000000'),float('50.924999'),float('50.924999'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1763.9490807069924,
                33.678968219583254
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.width-2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height-2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "6",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-37X-Xf37a-f-29Y-Yf-5a-f-0.575Z-Zf5.425',float('-37.000000'),float('-29.000000'),float('-0.575000'),float('37.000000'),float('-5.000000'),float('5.425000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -629.7681886736252,
                1679.7981139885903
            ],
            "name": "slide_window",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "slide.x-slide.width/2+4",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "disk.zmax+slide_lip.depth",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "9",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4',float('-43.000000'),float('-26.000000'),float('0.000000'),float('-25.000000'),float('-8.000000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -586.3623541103638,
                659.8524850960714
            ],
            "name": "slide_fingerslot",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "disk.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "disk.y+31+2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "disk.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "19.25/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf33f9.625a-f0Z-Zf3',float('-9.625000'),float('23.375000'),float('0.000000'),float('9.625000'),float('42.625000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                693.7060492741022,
                913.3609534061279
            ],
            "name": "scale",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "disk.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "disk.zmax-1.5-.1-.17-.3",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "scale.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "scale.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.R-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "scale.r",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf33f9.625a-f0Z-Zf0.93nam__f1-r+qXq-Yf33f8.625a-f0Z-Zf0.93',float('-9.625000'),float('23.375000'),float('0.000000'),float('9.625000'),float('42.625000'),float('0.930000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2608.194595460471,
                1515.0167324824793
            ],
            "name": "scale_rim",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__7.__6,__19.__6,__24.__4,__29.__6,__30.__6,__32.__6,__34.__2,__42.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaiiiam__f1-r+qXqYf50.925a-f2Z-Zf3am__f1-r+qXqYf49.125a-f0Z-Zf3am__f1aa-f37.5X-Xf39.5a-f-30.75Y-Yf23.75a-f3Z-Zf4im-*f2f0X__aam__f1-r+q-Xf18q-Yf33f7.375a-f3Z-Zf3.5nam__f1-r+q-Xf18q-Yf33f6.375a-f3Z-Zf3.5aam__f1-r+q-Xf18q-Yf33f7.375a-f3Z-Zf3.5nam__f1-r+q-Xf18q-Yf33f6.375a-f3Z-Zf3.5niiiiiiim-*f2f0X__iiam__f1-r+q-Xf18q-Yf33f5.375a-f0Z-Zf2.6am__f1-r+q-Xf18q-Yf33f6.375a-f2.6Z-Zf3am__f1aa-f14X-Xf22a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5iiam__f1-r+q-Xf18q-Yf33f5.375a-f0Z-Zf2.6am__f1-r+q-Xf18q-Yf33f6.375a-f2.6Z-Zf3am__f1aa-f14X-Xf22a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5iiam__f1aa-f-38X-Xf38a-f-30Y-Yf-4a-f1.85Z-Zf3am__f1aa-f-37X-Xf37a-f-29Y-Yf-5a-f-0.575Z-Zf5.425im-*f2f0X__am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+qXq-Yf33f9.625a-f0Z-Zf3mXY/Zf0.4-r++qXq-Yf-40.5q-Zf11.5f10am__f1aa-f-7.5X-Xf7.5a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5am__f1aa-f-10.5X-Xf10.5a-f3Y-Yf63a-f2Z-Zf8m-Xf0-Yf27-Zf0iiam__f1aa-f-38X-Xf38a-f-30Y-Yf-4a-f1.85Z-Zf3am__f1aa-f-37X-Xf37a-f-29Y-Yf-5a-f-0.575Z-Zf5.425im-*f2f0X__am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4iiiiiiiaam__f1-r+qXq-Yf33f9.625a-f0Z-Zf0.93nam__f1-r+qXq-Yf33f8.625a-f0Z-Zf0.93am__f1aa-f-0.2X-Xf0.2a-f-30.5Y-Yf22.5a-f0Z-Zf0.5im-*f2f0X__iiiam__f1aa-f19.25X-Xf23.75a-f32.8Y-Yf33.2a-f0Z-Zf0.5am__f1aa-f17.8X-Xf18.2a-f27.25Y-Yf31.75a-f0Z-Zf0.5aam__f1-r+q-Xf18q-Yf33f1.4a-f0Z-Zf0.5nam__f1-r+q-Xf18q-Yf33f1a-f0Z-Zf0.5am__f1aa-f6.5X-Xf17a-f32.8Y-Yf33.2a-f0Z-Zf0.5iiiam__f1aa-f19.25X-Xf23.75a-f32.8Y-Yf33.2a-f0Z-Zf0.5am__f1aa-f17.8X-Xf18.2a-f27.25Y-Yf31.75a-f0Z-Zf0.5aam__f1-r+q-Xf18q-Yf33f1.4a-f0Z-Zf0.5nam__f1-r+q-Xf18q-Yf33f1a-f0Z-Zf0.5am__f1aa-f6.5X-Xf17a-f32.8Y-Yf33.2a-f0Z-Zf0.5am__f1aa-f17.8X-Xf18.2a-f-30.5Y-Yf22.5a-f0Z-Zf0.5am__f1aa-f-18.2X-Xf-17.8a-f-30.5Y-Yf22.5a-f0Z-Zf0.5aam__f1-r+qXq-Yf33f6.775a-f0Z-Zf0.5nam__f1-r+qXq-Yf33f6.375a-f0Z-Zf0.5aam__f1aa-f-0.2X-Xf0.2a-f23.375Y-Yf42.625a-f0Z-Zf0.5nam__f1-r+qXq-Yf33f6.375a-f0Z-Zf1im_-*f2f-3.5Y_aiiiam__f1aa-f-38X-Xf-37a-f-23.5Y-Yf-10.5a-f0Z-Zf3am__f1aa-f-41.1X-Xf-39.1a-f-21Y-Yf-13a-f0Z-Zf3am__f1aa-f-39.5X-Xf-37.5a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3am__f1aa-f-44.7X-Xf-40.7a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3nam__f1aa-f-40.725X-Xf-39.475a-f-22.625Y-Yf-13.375a-f0Z-Zf3aiiiam__f1aa-f-38X-Xf-37a-f-23.5Y-Yf-10.5a-f0Z-Zf3am__f1aa-f-41.1X-Xf-39.1a-f-21Y-Yf-13a-f0Z-Zf3am__f1aa-f-39.5X-Xf-37.5a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3am__f1aa-f-44.7X-Xf-40.7a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3nam__f1aa-f-40.725X-Xf-39.475a-f-22.625Y-Yf-13.375a-f0Z-Zf3',float('-50.924999'),float('-50.924999'),float('0.000000'),float('50.924999'),float('50.924999'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2415.5836998898862,
                38.35773208517065
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__6,__4.__6,__11.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iiam__f1aa-f-38X-Xf38a-f-30Y-Yf-4a-f1.85Z-Zf3am__f1aa-f-37X-Xf37a-f-29Y-Yf-5a-f-0.575Z-Zf5.425im-*f2f0X__am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4',float('-43.000000'),float('-30.000000'),float('-0.575000'),float('43.000000'),float('-4.000000'),float('5.425000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                -64.95125825884188,
                1513.3643174310153
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "27",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__9.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf27-Zf0iiam__f1aa-f-38X-Xf38a-f-30Y-Yf-4a-f1.85Z-Zf3am__f1aa-f-37X-Xf37a-f-29Y-Yf-5a-f-0.575Z-Zf5.425im-*f2f0X__am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4',float('-43.000000'),float('-3.000000'),float('-0.575000'),float('43.000000'),float('23.000000'),float('5.425000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -55.58364966159608,
                1800.910249035713
            ],
            "name": "t0",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "disk.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__5.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4',float('-43.000000'),float('-26.000000'),float('0.000000'),float('43.000000'),float('-8.000000'),float('4.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -76.27986641674576,
                950.2661324797988
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "disk.x+18",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "scale.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-.4",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "disk.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "12.75/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf18q-Yf33f6.375a-f2.6Z-Zf3',float('11.625000'),float('26.625000'),float('2.600000'),float('24.375000'),float('39.375000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                680.6632068560725,
                1934.2520251691144
            ],
            "name": "slip",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "slip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slip.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slip.r-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf18q-Yf33f5.375a-f0Z-Zf2.6',float('12.625000'),float('27.625000'),float('0.000000'),float('23.375000'),float('38.375000'),float('2.600000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                676.5752790544921,
                2361.9994742102376
            ],
            "name": "sliphole",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__13.__5,__12.__5,__15.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__iiam__f1-r+q-Xf18q-Yf33f5.375a-f0Z-Zf2.6am__f1-r+q-Xf18q-Yf33f6.375a-f2.6Z-Zf3am__f1aa-f14X-Xf22a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5iiam__f1-r+q-Xf18q-Yf33f5.375a-f0Z-Zf2.6am__f1-r+q-Xf18q-Yf33f6.375a-f2.6Z-Zf3am__f1aa-f14X-Xf22a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5',float('-24.375000'),float('26.625000'),float('-0.500000'),float('24.375000'),float('56.500000'),float('6.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1209.5124391133847,
                2165.3712031994364
            ],
            "name": "m1",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "slip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slip.y+10",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slip.zmax",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "8",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "27",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "7",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f14X-Xf22a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5',float('14.000000'),float('29.500000'),float('-0.500000'),float('22.000000'),float('56.500000'),float('6.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                664.2703740974584,
                2740.356313937103
            ],
            "name": "slip_tweezer",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "scale.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "scale.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "scale.zmax+2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "21",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "60",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "6",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-10.5X-Xf10.5a-f3Y-Yf63a-f2Z-Zf8',float('-10.500000'),float('3.000000'),float('2.000000'),float('10.500000'),float('63.000000'),float('8.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1229.401214248513,
                1060.7626681575655
            ],
            "name": "scale_slot",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "disk.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "disk.y-40.5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmax+self.r-1.5",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "10",
                    "name": "r",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r++qXq-Yf-40.5q-Zf11.5f10',float('-10.000000'),float('-50.500000'),float('1.500000'),float('10.000000'),float('-30.500000'),float('21.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                236.06704885418526,
                567.6651343531994
            ],
            "name": "thumbprint",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Sphere (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.sphere(x, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z-r), (x,y,z+r)])",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y, z + r, drag=(None, None, r))",
                "sb.ui.point(x, y, z - r, drag=(None, None, r))",
                ""
            ],
            "uid": 17
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__8.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iaiiiam__f1-r+qXqYf50.925a-f2Z-Zf3am__f1-r+qXqYf49.125a-f0Z-Zf3am__f1aa-f37.5X-Xf39.5a-f-30.75Y-Yf23.75a-f3Z-Zf4im-*f2f0X__aam__f1-r+q-Xf18q-Yf33f7.375a-f3Z-Zf3.5nam__f1-r+q-Xf18q-Yf33f6.375a-f3Z-Zf3.5aam__f1-r+q-Xf18q-Yf33f7.375a-f3Z-Zf3.5nam__f1-r+q-Xf18q-Yf33f6.375a-f3Z-Zf3.5niiiiiiim-*f2f0X__iiam__f1-r+q-Xf18q-Yf33f5.375a-f0Z-Zf2.6am__f1-r+q-Xf18q-Yf33f6.375a-f2.6Z-Zf3am__f1aa-f14X-Xf22a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5iiam__f1-r+q-Xf18q-Yf33f5.375a-f0Z-Zf2.6am__f1-r+q-Xf18q-Yf33f6.375a-f2.6Z-Zf3am__f1aa-f14X-Xf22a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5iiam__f1aa-f-38X-Xf38a-f-30Y-Yf-4a-f1.85Z-Zf3am__f1aa-f-37X-Xf37a-f-29Y-Yf-5a-f-0.575Z-Zf5.425im-*f2f0X__am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+qXq-Yf33f9.625a-f0Z-Zf3mXY/Zf0.4-r++qXq-Yf-40.5q-Zf11.5f10am__f1aa-f-7.5X-Xf7.5a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5am__f1aa-f-10.5X-Xf10.5a-f3Y-Yf63a-f2Z-Zf8m-Xf0-Yf27-Zf0iiam__f1aa-f-38X-Xf38a-f-30Y-Yf-4a-f1.85Z-Zf3am__f1aa-f-37X-Xf37a-f-29Y-Yf-5a-f-0.575Z-Zf5.425im-*f2f0X__am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4am__f1-r+q-Xf-34q-Yf-17f9a-f0Z-Zf4iiiiiiiaam__f1-r+qXq-Yf33f9.625a-f0Z-Zf0.93nam__f1-r+qXq-Yf33f8.625a-f0Z-Zf0.93am__f1aa-f-0.2X-Xf0.2a-f-30.5Y-Yf22.5a-f0Z-Zf0.5im-*f2f0X__iiiam__f1aa-f19.25X-Xf23.75a-f32.8Y-Yf33.2a-f0Z-Zf0.5am__f1aa-f17.8X-Xf18.2a-f27.25Y-Yf31.75a-f0Z-Zf0.5aam__f1-r+q-Xf18q-Yf33f1.4a-f0Z-Zf0.5nam__f1-r+q-Xf18q-Yf33f1a-f0Z-Zf0.5am__f1aa-f6.5X-Xf17a-f32.8Y-Yf33.2a-f0Z-Zf0.5iiiam__f1aa-f19.25X-Xf23.75a-f32.8Y-Yf33.2a-f0Z-Zf0.5am__f1aa-f17.8X-Xf18.2a-f27.25Y-Yf31.75a-f0Z-Zf0.5aam__f1-r+q-Xf18q-Yf33f1.4a-f0Z-Zf0.5nam__f1-r+q-Xf18q-Yf33f1a-f0Z-Zf0.5am__f1aa-f6.5X-Xf17a-f32.8Y-Yf33.2a-f0Z-Zf0.5am__f1aa-f17.8X-Xf18.2a-f-30.5Y-Yf22.5a-f0Z-Zf0.5am__f1aa-f-18.2X-Xf-17.8a-f-30.5Y-Yf22.5a-f0Z-Zf0.5aam__f1-r+qXq-Yf33f6.775a-f0Z-Zf0.5nam__f1-r+qXq-Yf33f6.375a-f0Z-Zf0.5aam__f1aa-f-0.2X-Xf0.2a-f23.375Y-Yf42.625a-f0Z-Zf0.5nam__f1-r+qXq-Yf33f6.375a-f0Z-Zf1im_-*f2f-3.5Y_aiiiam__f1aa-f-38X-Xf-37a-f-23.5Y-Yf-10.5a-f0Z-Zf3am__f1aa-f-41.1X-Xf-39.1a-f-21Y-Yf-13a-f0Z-Zf3am__f1aa-f-39.5X-Xf-37.5a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3am__f1aa-f-44.7X-Xf-40.7a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3nam__f1aa-f-40.725X-Xf-39.475a-f-22.625Y-Yf-13.375a-f0Z-Zf3aiiiam__f1aa-f-38X-Xf-37a-f-23.5Y-Yf-10.5a-f0Z-Zf3am__f1aa-f-41.1X-Xf-39.1a-f-21Y-Yf-13a-f0Z-Zf3am__f1aa-f-39.5X-Xf-37.5a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3am__f1aa-f-44.7X-Xf-40.7a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3nam__f1aa-f-40.725X-Xf-39.475a-f-22.625Y-Yf-13.375a-f0Z-Zf3',float('-50.924999'),float('-50.924999'),float('0.000000'),float('50.924999'),float('50.924999'),float('4.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                2827.628389171616,
                24.26870884157114
            ],
            "name": "m2",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 18
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "-4",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "53",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0.5",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-0.2X-Xf0.2a-f-30.5Y-Yf22.5a-f0Z-Zf0.5',float('-0.200000'),float('-30.500000'),float('0.000000'),float('0.200000'),float('22.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2243.3028145753265,
                1018.0836906911927
            ],
            "name": "filar",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 19
        },
        {
            "datums": [
                {
                    "expr": "slip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slip.y-3.5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "4.5",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0.5",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f17.8X-Xf18.2a-f27.25Y-Yf31.75a-f0Z-Zf0.5',float('17.799999'),float('27.250000'),float('0.000000'),float('18.200001'),float('31.750000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2211.885267674488,
                2266.065977324839
            ],
            "name": "filar_slip",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 20
        },
        {
            "datums": [
                {
                    "expr": "slip.x-3.5-2.75",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "10.5",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__20.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f6.5X-Xf17a-f32.8Y-Yf33.2a-f0Z-Zf0.5',float('6.500000'),float('32.799999'),float('0.000000'),float('17.000000'),float('33.200001'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2216.2175418380075,
                2738.930253970764
            ],
            "name": "filar_slip0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 21
        },
        {
            "datums": [
                {
                    "expr": "disk.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+filar_slip.depth",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+filar_slip.width",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+q-Xf18q-Yf33f1.4a-f0Z-Zf0.5nam__f1-r+q-Xf18q-Yf33f1a-f0Z-Zf0.5',float('16.600000'),float('31.600000'),float('0.000000'),float('19.400000'),float('34.400002'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2231.658186595009,
                3189.3945193900345
            ],
            "name": "filar_slip_ring",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 22
        },
        {
            "datums": [
                {
                    "expr": "slip.x+3.5",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "4.5",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__21.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f19.25X-Xf23.75a-f32.8Y-Yf33.2a-f0Z-Zf0.5',float('19.250000'),float('32.799999'),float('0.000000'),float('23.750000'),float('33.200001'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1790.7472734017388,
                2943.5221743566026
            ],
            "name": "filar_slip1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 23
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__23.__6,__20.__6,__22.__6,__21.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__iiiam__f1aa-f19.25X-Xf23.75a-f32.8Y-Yf33.2a-f0Z-Zf0.5am__f1aa-f17.8X-Xf18.2a-f27.25Y-Yf31.75a-f0Z-Zf0.5aam__f1-r+q-Xf18q-Yf33f1.4a-f0Z-Zf0.5nam__f1-r+q-Xf18q-Yf33f1a-f0Z-Zf0.5am__f1aa-f6.5X-Xf17a-f32.8Y-Yf33.2a-f0Z-Zf0.5iiiam__f1aa-f19.25X-Xf23.75a-f32.8Y-Yf33.2a-f0Z-Zf0.5am__f1aa-f17.8X-Xf18.2a-f27.25Y-Yf31.75a-f0Z-Zf0.5aam__f1-r+q-Xf18q-Yf33f1.4a-f0Z-Zf0.5nam__f1-r+q-Xf18q-Yf33f1a-f0Z-Zf0.5am__f1aa-f6.5X-Xf17a-f32.8Y-Yf33.2a-f0Z-Zf0.5',float('-23.750000'),float('27.250000'),float('0.000000'),float('23.750000'),float('34.400002'),float('0.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2879.233606639227,
                2990.459235448165
            ],
            "name": "m3",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 24
        },
        {
            "datums": [
                {
                    "expr": "slide.x+slide.width/2+.5",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y+t0.dy/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmax+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height+t0.dy+1.5",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f37.5X-Xf39.5a-f-30.75Y-Yf23.75a-f3Z-Zf4',float('37.500000'),float('-30.750000'),float('3.000000'),float('39.500000'),float('23.750000'),float('4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                579.5848837255096,
                -365.0845904608343
            ],
            "name": "slide_lip",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 27
        },
        {
            "datums": [
                {
                    "expr": "scale.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slip.y+10",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slip.zmax",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "15",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "27",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "7",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-7.5X-Xf7.5a-f29.5Y-Yf56.5a-f-0.5Z-Zf6.5',float('-7.500000'),float('29.500000'),float('-0.500000'),float('7.500000'),float('56.500000'),float('6.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1166.4606784597127,
                1617.3598016226942
            ],
            "name": "scale_tweezer",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 28
        },
        {
            "datums": [
                {
                    "expr": "slip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__19.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__19.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__19.__3]",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__19.__4]",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__19.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f17.8X-Xf18.2a-f-30.5Y-Yf22.5a-f0Z-Zf0.5',float('17.799999'),float('-30.500000'),float('0.000000'),float('18.200001'),float('22.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2607.198536479002,
                1016.5391632961066
            ],
            "name": "filar0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 29
        },
        {
            "datums": [
                {
                    "expr": "-slip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__29.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__29.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__29.__3]",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__29.__4]",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__29.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-18.2X-Xf-17.8a-f-30.5Y-Yf22.5a-f0Z-Zf0.5',float('-18.200001'),float('-30.500000'),float('0.000000'),float('-17.799999'),float('22.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2964.2022291266953,
                1014.9170174223214
            ],
            "name": "filar1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 30
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.4",
                    "name": "s",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__17.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('mXY/Zf0.4-r++qXq-Yf-40.5q-Zf11.5f10',float('-10.000000'),float('-50.500000'),float('0.600000'),float('10.000000'),float('-30.500000'),float('8.600000'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                689.6961049711649,
                583.814078348217
            ],
            "name": "s1",
            "script": [
                "import fab",
                "",
                "title('Scale (Z)')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('z0', float)",
                "input('s', float)",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_z(shape, z0, s))",
                "",
                "# UI",
                "kwargs = {'color':sb.color.teal}",
                "sb.ui.wireframe([(_x + 0.2*s, _y, z0), (_x - 0.2*s, _y, z0)], **kwargs)",
                "sb.ui.wireframe([(_x, _y, z0), (_x, _y, z0 + s)], **kwargs)",
                "sb.ui.wireframe([(_x - 0.1*s, _y, z0 + 0.9*s), (_x, _y, z0 + s),",
                "                  (_x + 0.1*s, _y, z0 + 0.9*s)], **kwargs)",
                "",
                "sb.ui.point(_x, _y, z0, color=sb.color.teal)",
                "sb.ui.point(_x, _y, z0 + s, color=sb.color.teal, drag=(None,None,s))",
                ""
            ],
            "uid": 25
        },
        {
            "datums": [
                {
                    "expr": "slip.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+0.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slip.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+1",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+q-Xf18q-Yf33f7.375a-f3Z-Zf3.5nam__f1-r+q-Xf18q-Yf33f6.375a-f3Z-Zf3.5',float('10.625000'),float('25.625000'),float('3.000000'),float('25.375000'),float('40.375000'),float('3.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1367.4737647647357,
                -1153.7432501036915
            ],
            "name": "slip_lip",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 26
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__26.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__aam__f1-r+q-Xf18q-Yf33f7.375a-f3Z-Zf3.5nam__f1-r+q-Xf18q-Yf33f6.375a-f3Z-Zf3.5aam__f1-r+q-Xf18q-Yf33f7.375a-f3Z-Zf3.5nam__f1-r+q-Xf18q-Yf33f6.375a-f3Z-Zf3.5',float('-25.375000'),float('25.625000'),float('3.000000'),float('25.375000'),float('40.375000'),float('3.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1744.3930183634634,
                -962.6654741512152
            ],
            "name": "m4",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 31
        },
        {
            "datums": [
                {
                    "expr": "disk.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+filar_slip.depth",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "scale.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "scale.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slip.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+filar_slip.width",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf33f6.775a-f0Z-Zf0.5nam__f1-r+qXq-Yf33f6.375a-f0Z-Zf0.5',float('-6.775000'),float('26.225000'),float('0.000000'),float('6.775000'),float('39.775002'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2188.922169452413,
                1679.1897878760929
            ],
            "name": "filar_slip_center",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 32
        },
        {
            "datums": [
                {
                    "expr": "scale.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "scale.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "filar.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "scale.r*2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "filar.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-0.2X-Xf0.2a-f23.375Y-Yf42.625a-f0Z-Zf0.5',float('-0.200000'),float('23.375000'),float('0.000000'),float('0.200000'),float('42.625000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3094.5959104272833,
                1847.0228902467477
            ],
            "name": "filar_scale",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 33
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__33.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__35.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-0.2X-Xf0.2a-f23.375Y-Yf42.625a-f0Z-Zf0.5nam__f1-r+qXq-Yf33f6.375a-f0Z-Zf1',float('-0.200000'),float('23.375000'),float('0.000000'),float('0.200000'),float('42.625000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3502.483257487649,
                2145.9058149217767
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 34
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__33.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__33.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "filar_slip_center.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf33f6.375a-f0Z-Zf1',float('-6.375000'),float('26.625000'),float('0.000000'),float('6.375000'),float('39.375000'),float('1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3146.9842195563638,
                2293.9586830190674
            ],
            "name": "c1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 35
        },
        {
            "datums": [
                {
                    "expr": "slide.x-slide.width/2+self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "disk.zmin+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height/2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "disk.zmax",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-38X-Xf-37a-f-23.5Y-Yf-10.5a-f0Z-Zf3',float('-38.000000'),float('-23.500000'),float('0.000000'),float('-37.000000'),float('-10.500000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1985.8668351281349,
                -1864.9042357892404
            ],
            "name": "flex",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 36
        },
        {
            "datums": [
                {
                    "expr": "flex.x-self.width/2-1+.4-1",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "flex.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "flex.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "8",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__36.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-41.1X-Xf-39.1a-f-21Y-Yf-13a-f0Z-Zf3',float('-41.099998'),float('-21.000000'),float('0.000000'),float('-39.099998'),float('-13.000000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2367.595445073666,
                -1874.5341609858074
            ],
            "name": "c2",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 37
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__37.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "c2.y-1",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "flex.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "c2.width-0.75",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "c2.height-0.75+2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__36.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-40.725X-Xf-39.475a-f-22.625Y-Yf-13.375a-f0Z-Zf3',float('-40.724998'),float('-22.625000'),float('0.000000'),float('-39.474998'),float('-13.375000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2370.1880412552305,
                -1319.1640548534774
            ],
            "name": "c3",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 39
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__36.__6,__37.__6,__40.__6,__38.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__39.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiam__f1aa-f-38X-Xf-37a-f-23.5Y-Yf-10.5a-f0Z-Zf3am__f1aa-f-41.1X-Xf-39.1a-f-21Y-Yf-13a-f0Z-Zf3am__f1aa-f-39.5X-Xf-37.5a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3am__f1aa-f-44.7X-Xf-40.7a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3nam__f1aa-f-40.725X-Xf-39.475a-f-22.625Y-Yf-13.375a-f0Z-Zf3',float('-44.700001'),float('-23.500000'),float('0.000000'),float('-37.000000'),float('-10.500000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2956.707321013421,
                -1429.7991121834493
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 41
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y+slide.height/2+1/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__41.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f-3.5Y_aiiiam__f1aa-f-38X-Xf-37a-f-23.5Y-Yf-10.5a-f0Z-Zf3am__f1aa-f-41.1X-Xf-39.1a-f-21Y-Yf-13a-f0Z-Zf3am__f1aa-f-39.5X-Xf-37.5a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3am__f1aa-f-44.7X-Xf-40.7a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3nam__f1aa-f-40.725X-Xf-39.475a-f-22.625Y-Yf-13.375a-f0Z-Zf3aiiiam__f1aa-f-38X-Xf-37a-f-23.5Y-Yf-10.5a-f0Z-Zf3am__f1aa-f-41.1X-Xf-39.1a-f-21Y-Yf-13a-f0Z-Zf3am__f1aa-f-39.5X-Xf-37.5a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3am__f1aa-f-44.7X-Xf-40.7a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3nam__f1aa-f-40.725X-Xf-39.475a-f-22.625Y-Yf-13.375a-f0Z-Zf3',float('-44.700001'),float('-23.500000'),float('0.000000'),float('-37.000000'),float('16.500000'),float('3.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                3630.2573325601584,
                -1252.7149001868922
            ],
            "name": "m5",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 42
        },
        {
            "datums": [
                {
                    "expr": "c2.x-2.6",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "c2.y-c2.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__37.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.75/2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__37.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-44.7X-Xf-40.7a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3',float('-44.700001'),float('-21.187500'),float('0.000000'),float('-40.700001'),float('-20.812500'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2778.487465308564,
                -1906.2478912266465
            ],
            "name": "c4",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 38
        },
        {
            "datums": [
                {
                    "expr": "c2.x+1.6",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "c2.y-c2.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__37.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.75/2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__37.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-39.5X-Xf-37.5a-f-21.1875Y-Yf-20.8125a-f0Z-Zf3',float('-39.500000'),float('-21.187500'),float('0.000000'),float('-37.500000'),float('-20.812500'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2779.7336559705877,
                -2362.0001793325164
            ],
            "name": "c5",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 40
        }
    ],
    "protocol": 6,
    "type": "sb"
}
