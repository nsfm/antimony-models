{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "170",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "250",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "40",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-85X-Xf85a-f-125Y-Yf125a-f-20Z-Zf20',float('-85.000000'),float('-125.000000'),float('-20.000000'),float('85.000000'),float('125.000000'),float('20.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                385.6720609231718,
                2980.1077881372457
            ],
            "name": "foundation",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "foundation.x-foundation.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "foundation.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "foundation.z+foundation.depth/3",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "100",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "foundation.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "foundation.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-135X-Xf-35a-f-125Y-Yf125a-f-6.66667Z-Zf33.3333',float('-135.000000'),float('-125.000000'),float('-6.666667'),float('-35.000000'),float('125.000000'),float('33.333332'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -106.41528602337826,
                3438.8564161765116
            ],
            "name": "foundation_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__1.__1]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__1.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-85-Yf0-Zf0m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf85-Yf0-Zf-0am__f1aa-f-135X-Xf-35a-f-125Y-Yf125a-f-6.66667Z-Zf33.3333',float('-143.925583'),float('-125.000000'),float('-40.069397'),float('-44.930603'),float('125.000000'),float('58.925583'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                423.4178386769936,
                3438.8564161765116
            ],
            "name": "r0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__6,__19.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__4.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiam__f1aa-f-85X-Xf85a-f-125Y-Yf125a-f-20Z-Zf20aam__f1aa-f-85X-Xf85a-f-125Y-Yf-37a-f20Z-Zf25nm-Xf0-Yf-37-Zf22m_+*f0.5Y*f0.866025Z+*f-0.866025Y*f0.5Zm-Xf0-Yf37-Zf-22am__f1aa-f-85X-Xf85a-f-39.5Y-Yf-34.5a-f9.5Z-Zf34.5nim-*f2f0X__m-Xf-85-Yf0-Zf0m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf85-Yf0-Zf-0am__f1aa-f-135X-Xf-35a-f-125Y-Yf125a-f-6.66667Z-Zf33.3333m-Xf-85-Yf0-Zf0m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf85-Yf0-Zf-0am__f1aa-f-135X-Xf-35a-f-125Y-Yf125a-f-6.66667Z-Zf33.3333',float('-85.000000'),float('-125.000000'),float('-20.000000'),float('85.000000'),float('125.000000'),float('25.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1254.3903212707344,
                3251.7189783937656
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "foundation.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__2.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf-85-Yf0-Zf0m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf85-Yf0-Zf-0am__f1aa-f-135X-Xf-35a-f-125Y-Yf125a-f-6.66667Z-Zf33.3333m-Xf-85-Yf0-Zf0m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf85-Yf0-Zf-0am__f1aa-f-135X-Xf-35a-f-125Y-Yf125a-f-6.66667Z-Zf33.3333',float('-143.925583'),float('-125.000000'),float('-40.069397'),float('143.925583'),float('125.000000'),float('58.925583'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                779.6253466731503,
                3441.331704011627
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "foundation.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "foundation.y+foundation.height/2-self.height/2-5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "foundation.z+foundation.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "95",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "135",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "12",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-47.5X-Xf47.5a-f-15Y-Yf120a-f20Z-Zf32',float('-47.500000'),float('-15.000000'),float('20.000000'),float('47.500000'),float('120.000000'),float('32.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                954.8754873445844,
                198.17390792884953
            ],
            "name": "plinth",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "plinth.x-plinth.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plinth.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plinth.z+plinth.depth/1.5",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plinth.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "plinth.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "plinth.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-95X-Xf0a-f-15Y-Yf120a-f28Z-Zf40',float('-95.000000'),float('-15.000000'),float('28.000000'),float('0.000000'),float('120.000000'),float('40.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -338.195648073396,
                933.1820950700494
            ],
            "name": "plinth_y_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__6.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__6.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "30",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__6.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-47.5-Yf0-Zf34m+*f0.866025X*f0.5ZY+*f-0.5X*f0.866025Zm-Xf47.5-Yf0-Zf-34am__f1aa-f-95X-Xf0a-f-15Y-Yf120a-f28Z-Zf40',float('-91.636185'),float('-15.000000'),float('5.053850'),float('-3.363815'),float('120.000000'),float('62.946152'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                124.09600367957455,
                930.6066541132082
            ],
            "name": "r1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "plinth.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__7.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf-47.5-Yf0-Zf34m+*f0.866025X*f0.5ZY+*f-0.5X*f0.866025Zm-Xf47.5-Yf0-Zf-34am__f1aa-f-95X-Xf0a-f-15Y-Yf120a-f28Z-Zf40m-Xf-47.5-Yf0-Zf34m+*f0.866025X*f0.5ZY+*f-0.5X*f0.866025Zm-Xf47.5-Yf0-Zf-34am__f1aa-f-95X-Xf0a-f-15Y-Yf120a-f28Z-Zf40',float('-91.636185'),float('-15.000000'),float('5.053850'),float('91.636185'),float('120.000000'),float('62.946152'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                570.7588069364745,
                943.5175412526678
            ],
            "name": "m1",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "plinth.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plinth.y-plinth.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__6.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plinth.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "plinth.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "plinth.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-47.5X-Xf47.5a-f-82.5Y-Yf52.5a-f28Z-Zf40',float('-47.500000'),float('-82.500000'),float('28.000000'),float('47.500000'),float('52.500000'),float('40.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                123.29667735234352,
                1279.165665303243
            ],
            "name": "plinth_x_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__9.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__9.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__7.__3]",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__9.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-15-Zf34m_+*f0.866025Y*f0.5Z+*f-0.5Y*f0.866025Zm-Xf0-Yf15-Zf-34am__f1aa-f-47.5X-Xf47.5a-f-82.5Y-Yf52.5a-f28Z-Zf40',float('-47.500000'),float('-76.456680'),float('-4.946152'),float('47.500000'),float('46.456684'),float('72.946152'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                566.2725219290057,
                1280.4533857816643
            ],
            "name": "r2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plinth.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__10.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f52.5Y_m-Xf0-Yf-15-Zf34m_+*f0.866025Y*f0.5Z+*f-0.5Y*f0.866025Zm-Xf0-Yf15-Zf-34am__f1aa-f-47.5X-Xf47.5a-f-82.5Y-Yf52.5a-f28Z-Zf40m-Xf0-Yf-15-Zf34m_+*f0.866025Y*f0.5Z+*f-0.5Y*f0.866025Zm-Xf0-Yf15-Zf-34am__f1aa-f-47.5X-Xf47.5a-f-82.5Y-Yf52.5a-f28Z-Zf40',float('-47.500000'),float('-76.456680'),float('-4.946152'),float('47.500000'),float('181.456680'),float('72.946152'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                934.5605787572774,
                1286.8919881737668
            ],
            "name": "m2",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__5.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__4,__11.__4,__16.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-47.5X-Xf47.5a-f-15Y-Yf120a-f20Z-Zf32niiim-*f2f0X__m-Xf-47.5-Yf0-Zf34m+*f0.866025X*f0.5ZY+*f-0.5X*f0.866025Zm-Xf47.5-Yf0-Zf-34am__f1aa-f-95X-Xf0a-f-15Y-Yf120a-f28Z-Zf40m-Xf-47.5-Yf0-Zf34m+*f0.866025X*f0.5ZY+*f-0.5X*f0.866025Zm-Xf47.5-Yf0-Zf-34am__f1aa-f-95X-Xf0a-f-15Y-Yf120a-f28Z-Zf40im_-*f2f52.5Y_m-Xf0-Yf-15-Zf34m_+*f0.866025Y*f0.5Z+*f-0.5Y*f0.866025Zm-Xf0-Yf15-Zf-34am__f1aa-f-47.5X-Xf47.5a-f-82.5Y-Yf52.5a-f28Z-Zf40m-Xf0-Yf-15-Zf34m_+*f0.866025Y*f0.5Z+*f-0.5Y*f0.866025Zm-Xf0-Yf15-Zf-34am__f1aa-f-47.5X-Xf47.5a-f-82.5Y-Yf52.5a-f28Z-Zf40im_-*f2f52.5Y_im-*f2f0X__m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32im-*f2f0X__m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32',float('-47.500000'),float('-15.000000'),float('20.000000'),float('47.500000'),float('120.000000'),float('32.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1396.6410861798465,
                979.5905558260699
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "plinth.x+plinth.width/2+2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plinth.y+plinth.height/2+2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plinth.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plinth.depth",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "plinth.depth",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "plinth.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32',float('43.500000'),float('116.000000'),float('20.000000'),float('55.500000'),float('128.000000'),float('32.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -342.9551695832705,
                1713.5731281280207
            ],
            "name": "plinth_z_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__13.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__13.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__13.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32',float('41.014717'),float('113.514717'),float('20.000000'),float('57.985283'),float('130.485291'),float('32.000000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                120.74209089151134,
                1714.8608486064425
            ],
            "name": "r3",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "plinth.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__14.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32',float('-57.985283'),float('113.514717'),float('20.000000'),float('57.985283'),float('130.485291'),float('32.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                556.8336714790116,
                1725.2299771443152
            ],
            "name": "m3",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plinth.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__15.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f52.5Y_im-*f2f0X__m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32im-*f2f0X__m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32m-Xf49.5-Yf122-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-49.5-Yf-122-Zf0am__f1aa-f43.5X-Xf55.5a-f116Y-Yf128a-f20Z-Zf32',float('-57.985283'),float('-25.485291'),float('20.000000'),float('57.985283'),float('130.485291'),float('32.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                945.893667738284,
                1722.671377365101
            ],
            "name": "m4",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "plinth.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plinth.y-plinth.height/2+self.height/2+30",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plinth.z+plinth.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "55",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "65",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "120",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-27.5X-Xf27.5a-f15Y-Yf80a-f32Z-Zf152',float('-27.500000'),float('15.000000'),float('32.000000'),float('27.500000'),float('80.000000'),float('152.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                297.24507421430417,
                -1375.8131643464899
            ],
            "name": "east_tower",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 17
        },
        {
            "datums": [
                {
                    "expr": "foundation.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "foundation.y-foundation.height/2+self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "foundation.z+foundation.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "foundation.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "88",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "5",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-85X-Xf85a-f-125Y-Yf-37a-f20Z-Zf25',float('-85.000000'),float('-125.000000'),float('20.000000'),float('85.000000'),float('-37.000000'),float('25.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                4963.731980848894,
                2387.8780245422568
            ],
            "name": "hill",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 18
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__18.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__21.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-85X-Xf85a-f-125Y-Yf-37a-f20Z-Zf25nm-Xf0-Yf-37-Zf22m_+*f0.5Y*f0.866025Z+*f-0.866025Y*f0.5Zm-Xf0-Yf37-Zf-22am__f1aa-f-85X-Xf85a-f-39.5Y-Yf-34.5a-f9.5Z-Zf34.5',float('-85.000000'),float('-125.000000'),float('20.000000'),float('85.000000'),float('-37.000000'),float('25.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5838.34552352985,
                3023.7009826640497
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 19
        },
        {
            "datums": [
                {
                    "expr": "hill.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "hill.y+hill.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "hill.z+hill.depth/2-3",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "hill.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "hill.depth",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "hill.depth*5",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-85X-Xf85a-f-39.5Y-Yf-34.5a-f9.5Z-Zf34.5',float('-85.000000'),float('-39.500000'),float('9.500000'),float('85.000000'),float('-34.500000'),float('34.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                4963.731980848894,
                3186.6823684522496
            ],
            "name": "hill_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 20
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__20.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__20.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "60",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__20.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-37-Zf22m_+*f0.5Y*f0.866025Z+*f-0.866025Y*f0.5Zm-Xf0-Yf37-Zf-22am__f1aa-f-85X-Xf85a-f-39.5Y-Yf-34.5a-f9.5Z-Zf34.5',float('-85.000000'),float('-49.075310'),float('13.584938'),float('85.000000'),float('-24.924688'),float('30.415062'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5409.995254581929,
                3184.0780764483825
            ],
            "name": "r4",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 21
        },
        {
            "datums": [
                {
                    "expr": "east_tower.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "east_tower.y+east_tower.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "east_tower.z-east_tower.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+east_tower.depth",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "east_tower.width/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf80f27.5a-f32Z-Zf152',float('-27.500000'),float('52.500000'),float('32.000000'),float('27.500000'),float('107.500000'),float('152.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -26.000803390825695,
                -804.8651541721096
            ],
            "name": "east_round",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 22
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__22.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.5",
                    "name": "s",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__22.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('mX+f80/-Yf80f0.5_am__f1-r+qXq-Yf80f27.5a-f32Z-Zf152',float('-27.500000'),float('66.250000'),float('32.000000'),float('27.500000'),float('93.750000'),float('152.000000'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                365.57187879757157,
                -803.1401643827334
            ],
            "name": "s0",
            "script": [
                "import fab",
                "",
                "title('Scale (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('s', float)",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_y(shape, y0, s))",
                "",
                "# UI",
                "kwargs = {'color':sb.color.teal}",
                "sb.ui.wireframe([(_x + 0.2*s, y0, _z), (_x - 0.2*s, y0, _z)], **kwargs)",
                "sb.ui.wireframe([(_x, y0, _z), (_x, y0 + s, _z)], **kwargs)",
                "sb.ui.wireframe([(_x - 0.1*s, y0 + 0.9*s, _z), (_x, y0 + s, _z),",
                "                  (_x + 0.1*s, y0 + 0.9*s, _z)], **kwargs)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "sb.ui.point(_x, y0 + s, _z, color=sb.color.teal, drag=(None,s,None))",
                ""
            ],
            "uid": 23
        },
        {
            "datums": [
                {
                    "expr": "east_tower.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "east_tower.y+east_tower.height/3+15",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "east_tower.z+east_tower.depth/2-30",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+115+25",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "east_round.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f27.5a-f122Z-Zf262',float('-27.500000'),float('56.666668'),float('122.000000'),float('27.500000'),float('111.666664'),float('262.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1551.7935585573312,
                -3345.4357018526916
            ],
            "name": "phototube",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 24
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__24.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "east_tower.z+east_tower.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__24.__5,__206.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf152m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-84.1667-Zf-152iam__f1-r+qXq-Yf84.1667f27.5a-f122Z-Zf262aam__f1-r+qXq-Yf84.1667f27.5a-f262Z-Zf263.5m+f0/*-Xf0f60+*f0-Zf262*f1-f322Z+f84.1667/*-Yf84.1667f60+*f0-Zf262*f1-f322Z_am__f1-r+qXq-Yf84.1667f27.5a-f262Z-Zf322',float('-27.500000'),float('43.508026'),float('111.341370'),float('27.500000'),float('182.454544'),float('250.287903'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1108.193353979166,
                -3374.4943922572375
            ],
            "name": "phototube_angle",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 25
        },
        {
            "datums": [
                {
                    "expr": "east_round.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "east_round.y+15",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plinth.z+plinth.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "105",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-2X-Xf2a-f94Y-Yf96a-f32Z-Zf137',float('-2.000000'),float('94.000000'),float('32.000000'),float('2.000000'),float('96.000000'),float('137.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -2883.713036188271,
                -3305.352639180558
            ],
            "name": "phototube_measuring_tape",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 26
        },
        {
            "datums": [
                {
                    "expr": "hill.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "hill.y+8",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "hill.z+hill.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "east_tower.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "45",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "232",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-27.5X-Xf27.5a-f-95.5Y-Yf-50.5a-f25Z-Zf257',float('-27.500000'),float('-95.500000'),float('25.000000'),float('27.500000'),float('-50.500000'),float('257.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5001.575051653556,
                -447.52473662484385
            ],
            "name": "west_tower",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 27
        },
        {
            "datums": [
                {
                    "expr": "foundation.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "foundation.y-foundation.height/2+self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "west_tower.z+west_tower.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "210",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "270",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "12",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-105X-Xf105a-f-125Y-Yf145a-f257Z-Zf269',float('-105.000000'),float('-125.000000'),float('257.000000'),float('105.000000'),float('145.000000'),float('269.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1978.5214908574117,
                -4250.965552711049
            ],
            "name": "table",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 28
        },
        {
            "datums": [
                {
                    "expr": "foundation.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "foundation.y-foundation.height/2+self.r+15",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "hill.z+hill.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+440",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "35/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf-92.5f17.5a-f25Z-Zf465',float('-17.500000'),float('-110.000000'),float('25.000000'),float('17.500000'),float('-75.000000'),float('465.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6236.557367590723,
                -2066.301808993559
            ],
            "name": "lamp_post",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 29
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__29.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__29.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-20",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__307.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "11",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf-92.5f11a-f447Z-Zf467',float('-11.000000'),float('-103.500000'),float('447.000000'),float('11.000000'),float('-81.500000'),float('467.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6599.416650053162,
                -1615.9474346813727
            ],
            "name": "post_hole",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 30
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__29.__5,__308.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__30.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiam__f1-r+qXq-Yf-92.5f17.5a-f25Z-Zf465aam__f1-r+qXq-Yf-92.5f17.5a-f465Z-Zf467m+f0/*-Xf0f60+*f0-Zf465*f1-f525Z+f-92.5/*-Yf-92.5f60+*f0-Zf465*f1-f525Z_am__f1-r+qXq-Yf-92.5f17.5a-f465Z-Zf525nam__f1-r+qXq-Yf-92.5f11a-f447Z-Zf467',float('-17.500000'),float('-110.000000'),float('25.000000'),float('17.500000'),float('-75.000000'),float('467.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                6960.65163886621,
                -1710.936811017938
            ],
            "name": "d3",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 31
        },
        {
            "datums": [
                {
                    "expr": "west_tower.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "west_tower.y-west_tower.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "west_tower.z-west_tower.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "west_tower.z+west_tower.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "west_tower.width/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf-95.5f27.5a-f25Z-Zf257',float('-27.500000'),float('-123.000000'),float('25.000000'),float('27.500000'),float('-68.000000'),float('257.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4583.920259237432,
                -201.02127414150414
            ],
            "name": "west_round",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 32
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__32.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1.5",
                    "name": "s",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__32.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('mX+f-95.5/-Yf-95.5f1.5_am__f1-r+qXq-Yf-95.5f27.5a-f25Z-Zf257',float('-27.500000'),float('-136.750000'),float('25.000000'),float('27.500000'),float('-54.250000'),float('257.000000'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4988.139115661998,
                60.88384289098144
            ],
            "name": "s1",
            "script": [
                "import fab",
                "",
                "title('Scale (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('s', float)",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_y(shape, y0, s))",
                "",
                "# UI",
                "kwargs = {'color':sb.color.teal}",
                "sb.ui.wireframe([(_x + 0.2*s, y0, _z), (_x - 0.2*s, y0, _z)], **kwargs)",
                "sb.ui.wireframe([(_x, y0, _z), (_x, y0 + s, _z)], **kwargs)",
                "sb.ui.wireframe([(_x - 0.1*s, y0 + 0.9*s, _z), (_x, y0 + s, _z),",
                "                  (_x + 0.1*s, y0 + 0.9*s, _z)], **kwargs)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "sb.ui.point(_x, y0 + s, _z, color=sb.color.teal, drag=(None,s,None))",
                ""
            ],
            "uid": 33
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__33.__5,__27.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__35.__6,__57.__6,__58.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aimX+f-95.5/-Yf-95.5f1.5_am__f1-r+qXq-Yf-95.5f27.5a-f25Z-Zf257am__f1aa-f-27.5X-Xf27.5a-f-95.5Y-Yf-50.5a-f25Z-Zf257niiam__f1aa-f-85X-Xf85a-f-145Y-Yf-125a-f25Z-Zf257am__f1aa-f-12.5X-Xf12.5a-f-63Y-Yf-38a-f100Z-Zf282am__f1aa-f-6.25X-Xf6.25a-f-65Y-Yf-61a-f100Z-Zf282',float('-27.500000'),float('-136.750000'),float('25.000000'),float('27.500000'),float('-50.500000'),float('257.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5703.663582723316,
                195.98408965916065
            ],
            "name": "d4",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 34
        },
        {
            "datums": [
                {
                    "expr": "west_round.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "foundation.y-foundation.height/2-self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "west_tower.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "foundation.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "20",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "west_tower.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-85X-Xf85a-f-145Y-Yf-125a-f25Z-Zf257',float('-85.000000'),float('-145.000000'),float('25.000000'),float('85.000000'),float('-125.000000'),float('257.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5215.786624830283,
                358.59935163444857
            ],
            "name": "west_round_flat",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 35
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-46",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_post.zmax-40",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_post.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_post.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_post.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+6",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf-92.5f23.5a-f379Z-Zf425nam__f1-r+qXq-Yf-92.5f17.5a-f379Z-Zf425',float('-23.500000'),float('-116.000000'),float('379.000000'),float('23.500000'),float('-69.000000'),float('425.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5036.067701351295,
                -7464.503817525191
            ],
            "name": "lamp_ring",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 36
        },
        {
            "datums": [
                {
                    "expr": "lamp_ring.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_ring.y",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.ymin+lamp_ring.R+65",
                    "name": "ymax",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "(lamp_ring.zmin+lamp_ring.zmax)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "14/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf0q-Zf402f7a-f-92.5Y-Yf-4',float('-7.000000'),float('-92.500000'),float('395.000000'),float('7.000000'),float('-4.000000'),float('409.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5028.156935126631,
                -7004.354224667032
            ],
            "name": "lamp_arm",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Y)')",
                "",
                "input('x', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_y(x, ymin, ymax, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, ymin, z), (x, ymax, z)])",
                "sb.ui.wireframe([(x, ymin, z), (x+r, ymin, z)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymin,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymax,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, ymin, z)",
                "sb.ui.point(x, ymax, z)",
                "sb.ui.point(x+r, ymin, z, drag=(r, None, None))",
                ""
            ],
            "uid": 37
        },
        {
            "datums": [
                {
                    "expr": "lamp_ring.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_ring.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_ring_chamfer_mask.zmax",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "3",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_ring.R*2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "8",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-1.5X-Xf1.5a-f-116Y-Yf-69a-f424Z-Zf432',float('-1.500000'),float('-116.000000'),float('424.000000'),float('1.500000'),float('-69.000000'),float('432.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5008.046469051639,
                -6532.023013410529
            ],
            "name": "lamp_slot",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 38
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__37.__3]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__38.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im__-*f2f402Zam__f1aa-f-1.5X-Xf1.5a-f-116Y-Yf-69a-f424Z-Zf432am__f1aa-f-1.5X-Xf1.5a-f-116Y-Yf-69a-f424Z-Zf432',float('-1.500000'),float('-116.000000'),float('372.000000'),float('1.500000'),float('-69.000000'),float('432.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                5406.829064916205,
                -6527.744981661303
            ],
            "name": "m5",
            "script": [
                "import fab",
                "",
                "title('Mirror (Z)')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('z0', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_z(shape, z0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + 1, _y - 1, z0),",
                "    (_x + 1, _y + 1, z0),",
                "    (_x - 1, _y + 1, z0),",
                "    (_x - 1, _y - 1, z0)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, _y, z0, color=sb.color.teal)",
                ""
            ],
            "uid": 39
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__36.__6,__318.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__39.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiaam__f1-r+qXq-Yf-92.5f23.5a-f379Z-Zf425nam__f1-r+qXq-Yf-92.5f17.5a-f379Z-Zf425im__-*f2f402Zaam__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf428m+f0/*-Xf0f60+*f0-Zf425*f1-f485Z+f-92.5/*-Yf-92.5f60+*f0-Zf425*f1-f485Z_am__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf485aam__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf428m+f0/*-Xf0f60+*f0-Zf425*f1-f485Z+f-92.5/*-Yf-92.5f60+*f0-Zf425*f1-f485Z_am__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf485nim__-*f2f402Zam__f1aa-f-1.5X-Xf1.5a-f-116Y-Yf-69a-f424Z-Zf432am__f1aa-f-1.5X-Xf1.5a-f-116Y-Yf-69a-f424Z-Zf432',float('-23.500000'),float('-116.000000'),float('376.000000'),float('23.500000'),float('-69.000000'),float('428.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5829.2121612926585,
                -7164.032725419575
            ],
            "name": "d5",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 40
        },
        {
            "datums": [
                {
                    "expr": "foundation.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "west_tower.y+west_tower.height/2+self.height/2+10",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "foundation.z+foundation.depth/2+self.depth/2+34",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "65",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "120",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "130",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-32.5X-Xf32.5a-f-40.5Y-Yf79.5a-f54Z-Zf184',float('-32.500000'),float('-40.500000'),float('54.000000'),float('32.500000'),float('79.500000'),float('184.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2804.405134481703,
                904.4232691604102
            ],
            "name": "elevator",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 41
        },
        {
            "datums": [
                {
                    "expr": "elevator.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "elevator.y+elevator.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "elevator.z-elevator.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "elevator.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "elevator.depth",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "elevator.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-32.5X-Xf32.5a-f14.5Y-Yf144.5a-f-11Z-Zf119',float('-32.500000'),float('14.500000'),float('-11.000000'),float('32.500000'),float('144.500000'),float('119.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2302.1878806231157,
                1606.1767720967819
            ],
            "name": "elevator_wedge",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 42
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__42.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__42.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__42.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf79.5-Zf54m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-79.5-Zf-54am__f1aa-f-32.5X-Xf32.5a-f14.5Y-Yf144.5a-f-11Z-Zf119',float('-32.500000'),float('-12.423912'),float('-37.923912'),float('32.500000'),float('171.423920'),float('145.923920'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2815.6161214508934,
                1633.404027292193
            ],
            "name": "r6",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 43
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__41.__6,__45.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__43.__5,__59.__6,__60.__6,__125.__5,__287.__4,__294.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiam__f1aa-f-32.5X-Xf32.5a-f-40.5Y-Yf79.5a-f54Z-Zf184am__f1aa-f-27.5X-Xf27.5a-f-50.5Y-Yf-40.5a-f54Z-Zf184niiiiim-Xf0-Yf79.5-Zf54m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-79.5-Zf-54am__f1aa-f-32.5X-Xf32.5a-f14.5Y-Yf144.5a-f-11Z-Zf119am__f1aa-f-27.5X-Xf27.5a-f-30.5Y-Yf69.5a-f54Z-Zf104am__f1aa-f-20X-Xf20a-f-45.5Y-Yf54.5a-f54Z-Zf104m-Xf0-Yf84.1667-Zf152m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-84.1667-Zf-152m+f0/-Xf0f1+f84.1667/-Yf84.1667f1.05+f192/-Zf192f0.7am__f1-r+qXq-Yf84.1667f27.5a-f122Z-Zf262im_-*f2f19.5Y_im-*f2f0X__m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184im-*f2f0X__m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184iaam__f1aa-f-33.5X-Xf-31.5a-f36.5Y-Yf52.5a-f143Z-Zf159nam__f1aa-f-33.5X-Xf-31.5a-f37.5Y-Yf51.5a-f144Z-Zf158aam__f1aa-f-33.5X-Xf-31.5a-f-6Y-Yf34a-f143Z-Zf159nam__f1aa-f-33.5X-Xf-31.5a-f-5Y-Yf33a-f144Z-Zf158',float('-32.500000'),float('-50.500000'),float('54.000000'),float('32.500000'),float('79.500000'),float('184.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3768.3544454627367,
                1437.5310411232704
            ],
            "name": "d6",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 44
        },
        {
            "datums": [
                {
                    "expr": "west_tower.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "west_tower.y+west_tower.height/2+self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "elevator.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "west_tower.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "10",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "elevator.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-27.5X-Xf27.5a-f-50.5Y-Yf-40.5a-f54Z-Zf184',float('-27.500000'),float('-50.500000'),float('54.000000'),float('27.500000'),float('-40.500000'),float('184.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3165.414020969472,
                912.2413641228686
            ],
            "name": "elevator_rail",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 45
        },
        {
            "datums": [
                {
                    "expr": "elevator.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "elevator.y+elevator.height/2-self.r-5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "elevator.z+elevator.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "elevator.width/2-2",
                    "name": "r",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r++qXq-Yf44q-Zf184f30.5',float('-30.500000'),float('13.500000'),float('153.500000'),float('30.500000'),float('74.500000'),float('214.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1994.140078378446,
                -1442.2232865088454
            ],
            "name": "orb",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Sphere (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.sphere(x, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z-r), (x,y,z+r)])",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y, z + r, drag=(None, None, r))",
                "sb.ui.point(x, y, z - r, drag=(None, None, r))",
                ""
            ],
            "uid": 46
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y -7",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "orb.z+orb.r/2+2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+8",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "65/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf37f32.5a-f201.25Z-Zf209.25',float('-32.500000'),float('4.500000'),float('201.250000'),float('32.500000'),float('69.500000'),float('209.250000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2972.434131877751,
                -883.55033889671
            ],
            "name": "turret_base",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 47
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "orb.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "20",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__77.__5,__51.__2,__52.__5,__47.__5,__84.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf44-Zf184m_+*f0.939693Y*f0.34202Z+*f-0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiiam__f1-r+qXq-Yf37f3.5a-f215.25Z-Zf219.25amXY+f165.75/-Zf165.75f0.85-r++qXq-Yf37q-Zf165.75f61am__f1-r+qXq-Yf37f32.5a-f201.25Z-Zf241.25am__f1-r+qXq-Yf37f33.5a-f202.25Z-Zf208.25am__f1-r+qXq-Yf37f32.5a-f201.25Z-Zf209.25iiim-Xf0-Yf37-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241m-Xf0-Yf37-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241m-Xf0-Yf37-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241m-Xf0-Yf37-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241',float('-37.602173'),float('-19.008545'),float('184.954865'),float('37.602173'),float('66.856804'),float('252.427917'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3452.158425900835,
                -143.48417702695508
            ],
            "name": "turret_rotate",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 48
        },
        {
            "datums": [
                {
                    "expr": "turret_base.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "turret_base.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "turret_base.zmax-turret_base.r-11",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "orb.r*2",
                    "name": "r",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r++qXq-Yf37q-Zf165.75f61',float('-61.000000'),float('-24.000000'),float('104.750000'),float('61.000000'),float('98.000000'),float('226.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2056.8120931035933,
                -747.0762238475036
            ],
            "name": "turret_round",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Sphere (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.sphere(x, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z-r), (x,y,z+r)])",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y, z + r, drag=(None, None, r))",
                "sb.ui.point(x, y, z - r, drag=(None, None, r))",
                ""
            ],
            "uid": 49
        },
        {
            "datums": [
                {
                    "expr": "turret_base.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "turret_base.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "turret_base.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+40",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "turret_base.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf37f32.5a-f201.25Z-Zf241.25',float('-32.500000'),float('4.500000'),float('201.250000'),float('32.500000'),float('69.500000'),float('241.250000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2510.97762140863,
                -393.1993230793064
            ],
            "name": "turet_round_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 50
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__85.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__50.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('amXY+f165.75/-Zf165.75f0.85-r++qXq-Yf37q-Zf165.75f61am__f1-r+qXq-Yf37f32.5a-f201.25Z-Zf241.25',float('-32.500000'),float('4.500000'),float('201.250000'),float('32.500000'),float('69.500000'),float('217.600006'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3016.3478072537614,
                -478.71165635493116
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 51
        },
        {
            "datums": [
                {
                    "expr": "turret_base.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "turret_base.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "turret_base.zmin+1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+6",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "turret_base.r+1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf37f33.5a-f202.25Z-Zf208.25',float('-33.500000'),float('3.500000'),float('202.250000'),float('33.500000'),float('70.500000'),float('208.250000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2578.6792402997085,
                -28.836512719246684
            ],
            "name": "turret_knurl",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 52
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__26.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                }
            ],
            "inspector": [
                -2299.1530399152243,
                -3005.8250085199898
            ],
            "name": "h0",
            "script": [
                "import fab",
                "",
                "title('Hide')",
                "",
                "input('shape',fab.types.Shape)",
                ""
            ],
            "uid": 53
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-18",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_ring.zmin-3",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_post.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_post.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_ring.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "lamp_ring.R",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf-92.5f23.5a-f358Z-Zf376nam__f1-r+qXq-Yf-92.5f17.5a-f358Z-Zf376',float('-23.500000'),float('-116.000000'),float('358.000000'),float('23.500000'),float('-69.000000'),float('376.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                6702.8728127708655,
                -3639.2707125217767
            ],
            "name": "lamp_index_ring",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 54
        },
        {
            "datums": [
                {
                    "expr": "lamp_index_ring.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_index_ring.y-lamp_index_ring.r-self.r*2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_index_ring.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_slot.width/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf-113f1.5a-f376Z-Zf378',float('-1.500000'),float('-114.500000'),float('376.000000'),float('1.500000'),float('-111.500000'),float('378.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6599.8444283684275,
                -3196.9851220764303
            ],
            "name": "lamp_index_ring_peg",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 55
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-54",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "west_tower.x-west_tower.width/2",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "west_tower.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "west_tower.z-west_tower.depth/2+self.r+32",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "55/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-73q-Zf84.5f27.5a-f-81.5X-Xf-27.5',float('-81.500000'),float('-100.500000'),float('57.000000'),float('-27.500000'),float('-45.500000'),float('112.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6459.074697211438,
                1200.0494071255298
            ],
            "name": "focus_knob_base",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 56
        },
        {
            "datums": [
                {
                    "expr": "west_tower.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "west_tower.y+west_tower.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "west_tower.z+50",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "west_tower.width-15*2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "25",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "west_tower.depth-50",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.5X-Xf12.5a-f-63Y-Yf-38a-f100Z-Zf282',float('-12.500000'),float('-63.000000'),float('100.000000'),float('12.500000'),float('-38.000000'),float('282.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5217.397413703134,
                832.7203317004246
            ],
            "name": "west_tower_rail",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 57
        },
        {
            "datums": [
                {
                    "expr": "west_tower.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "west_tower_rail.y-west_tower_rail.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "west_tower_rail.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "west_tower_rail.width/2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "west_tower_rail.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-6.25X-Xf6.25a-f-65Y-Yf-61a-f100Z-Zf282',float('-6.250000'),float('-65.000000'),float('100.000000'),float('6.250000'),float('-61.000000'),float('282.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5138.403969984735,
                1312.557072513685
            ],
            "name": "west_tower_rail_detail",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 58
        },
        {
            "datums": [
                {
                    "expr": "elevator.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "elevator.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "elevator.z-elevator.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "east_tower.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "elevator.height-20",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "50",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-27.5X-Xf27.5a-f-30.5Y-Yf69.5a-f54Z-Zf104',float('-27.500000'),float('-30.500000'),float('54.000000'),float('27.500000'),float('69.500000'),float('104.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2814.527837928222,
                1971.740338959593
            ],
            "name": "elevator_hollow",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 59
        },
        {
            "datums": [
                {
                    "expr": "elevator.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "elevator.y-15",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__59.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "elevator_rail.width-15",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__59.__4]",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__59.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-20X-Xf20a-f-45.5Y-Yf54.5a-f54Z-Zf104',float('-20.000000'),float('-45.500000'),float('54.000000'),float('20.000000'),float('54.500000'),float('104.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2789.027270507607,
                2487.885347873571
            ],
            "name": "elevator_rail_hollow",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 60
        },
        {
            "datums": [
                {
                    "expr": "lamp_ring.x+lamp_ring.R-6",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.xmin+7.5",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_ring.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "(lamp_ring.zmin+lamp_ring.zmax)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "6/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-92.5q-Zf402f3a-f17.5X-Xf25',float('17.500000'),float('-95.500000'),float('399.000000'),float('25.000000'),float('-89.500000'),float('405.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4793.093354756322,
                -4686.635240462072
            ],
            "name": "lampknob_screw",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 61
        },
        {
            "datums": [
                {
                    "expr": "lampknob_screw.xmax",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lampknob_screw.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lampknob_screw.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "15.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "16*10",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f25/*-Xf25f160+*f0-Zf402*f1-f562Z+f-92.5/*-Yf-92.5f160+*f0-Zf402*f1-f562Z_am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf562',float('17.250000'),float('-100.250000'),float('402.000000'),float('32.750000'),float('-84.750000'),float('562.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3338.8305179730414,
                -4280.841369914851
            ],
            "name": "lampknob_knob",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Cone (height)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('r', float)",
                "input('height', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z0 + height, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z0), (x+r, y, z0)])",
                "sb.ui.wireframe([(x, y, z0), (x, y, z0 + height)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z0 + height, drag=(None, None, height))",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 62
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__62.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__62.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__65.__2,__66.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf25-Yf0-Zf402m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-25-Yf0-Zf-402iam+f25/*-Xf25f160+*f0-Zf402*f1-f562Z+f-92.5/*-Yf-92.5f160+*f0-Zf402*f1-f562Z_am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf562am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf418am__f1-r+q-Xf25q-Yf-92.5f5.875a-f418Z-Zf419',float('25.000000'),float('-100.250000'),float('394.250000'),float('42.000000'),float('-84.750000'),float('409.750000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4873.740260003058,
                -4267.85586502041
            ],
            "name": "r8",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 63
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__62.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__62.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__62.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+16",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__62.__3]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf418',float('17.250000'),float('-100.250000'),float('402.000000'),float('32.750000'),float('-84.750000'),float('418.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3835.3880019039007,
                -3833.0872594508996
            ],
            "name": "lampknob_knob_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 64
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__62.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__64.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('am+f25/*-Xf25f160+*f0-Zf402*f1-f562Z+f-92.5/*-Yf-92.5f160+*f0-Zf402*f1-f562Z_am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf562am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf418',float('17.250000'),float('-100.250000'),float('402.000000'),float('32.750000'),float('-84.750000'),float('418.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4353.595286096897,
                -4021.729829802342
            ],
            "name": "i1",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 65
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__64.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__64.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__64.__3]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "11.75/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf25q-Yf-92.5f5.875a-f418Z-Zf419',float('19.125000'),float('-98.375000'),float('418.000000'),float('30.875000'),float('-86.625000'),float('419.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4348.504753059196,
                -3772.9526291416946
            ],
            "name": "lampknob_knob_cover",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 66
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__61.__5,__63.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('ia-r+q-Yf-92.5q-Zf402f3a-f17.5X-Xf25m-Xf25-Yf0-Zf402m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-25-Yf0-Zf-402iam+f25/*-Xf25f160+*f0-Zf402*f1-f562Z+f-92.5/*-Yf-92.5f160+*f0-Zf402*f1-f562Z_am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf562am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf418am__f1-r+q-Xf25q-Yf-92.5f5.875a-f418Z-Zf419',float('17.500000'),float('-100.250000'),float('394.250000'),float('42.000000'),float('-84.750000'),float('409.750000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                5289.985285581464,
                -4268.348727308579
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 67
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "-(lampknob_screw.z-(lamp_index_ring.zmin+lamp_index_ring.zmax)/2)",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__67.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf-35ia-r+q-Yf-92.5q-Zf402f3a-f17.5X-Xf25m-Xf25-Yf0-Zf402m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-25-Yf0-Zf-402iam+f25/*-Xf25f160+*f0-Zf402*f1-f562Z+f-92.5/*-Yf-92.5f160+*f0-Zf402*f1-f562Z_am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf562am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf418am__f1-r+q-Xf25q-Yf-92.5f5.875a-f418Z-Zf419',float('17.500000'),float('-100.250000'),float('359.250000'),float('42.000000'),float('-84.750000'),float('374.750000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                5813.181069521357,
                -4280.792914769628
            ],
            "name": "t0",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 68
        },
        {
            "datums": [
                {
                    "expr": "lamp_ring.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_ring.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "180",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__67.__0]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-92.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf92.5-Zf0ia-r+q-Yf-92.5q-Zf402f3a-f17.5X-Xf25m-Xf25-Yf0-Zf402m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-25-Yf0-Zf-402iam+f25/*-Xf25f160+*f0-Zf402*f1-f562Z+f-92.5/*-Yf-92.5f160+*f0-Zf402*f1-f562Z_am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf562am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf418am__f1-r+q-Xf25q-Yf-92.5f5.875a-f418Z-Zf419',float('-42.000000'),float('-100.250000'),float('394.250000'),float('-17.500000'),float('-84.750000'),float('409.750000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6138.914338242447,
                -4576.806573499528
            ],
            "name": "r9",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 69
        },
        {
            "datums": [
                {
                    "expr": "table.z-table.depth",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table.z+table.depth",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "table.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "orb.y-self.r-((self.R-self.r)/2)",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "40",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+20",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf-6f60a-f251Z-Zf275nam__f1-r+qXq-Yf-6f40a-f251Z-Zf275',float('-60.000000'),float('-66.000000'),float('251.000000'),float('60.000000'),float('54.000000'),float('275.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1029.2589448774086,
                -3494.7262980990067
            ],
            "name": "table_smile",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 70
        },
        {
            "datums": [
                {
                    "expr": "table_smile.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table_smile.y-table_smile.R",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "table.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "table_smile.R*2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "table_smile.R*2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "table.depth*2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-60X-Xf60a-f-126Y-Yf-6a-f251Z-Zf275',float('-60.000000'),float('-126.000000'),float('251.000000'),float('60.000000'),float('-6.000000'),float('275.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1455.1275802353607,
                -2995.6821916163494
            ],
            "name": "table_smile_mask",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 71
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__70.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__71.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaam__f1-r+qXq-Yf-6f60a-f251Z-Zf275nam__f1-r+qXq-Yf-6f40a-f251Z-Zf275nam__f1aa-f-60X-Xf60a-f-126Y-Yf-6a-f251Z-Zf275',float('-60.000000'),float('-66.000000'),float('251.000000'),float('60.000000'),float('54.000000'),float('275.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1981.3482296850293,
                -3104.8772883351826
            ],
            "name": "d7",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 72
        },
        {
            "datums": [
                {
                    "expr": "table_smile.x-table_smile.r-self.r",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table_smile_mask.y+table_smile_mask.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__70.__0]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__70.__1]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "20/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-50q-Yf-6f10a-f251Z-Zf275',float('-60.000000'),float('-16.000000'),float('251.000000'),float('-40.000000'),float('4.000000'),float('275.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1444.5961781641095,
                -3460.443220198829
            ],
            "name": "table_smile_corners",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 73
        },
        {
            "datums": [
                {
                    "expr": "table.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__73.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__am__f1-r+q-Xf-50q-Yf-6f10a-f251Z-Zf275am__f1-r+q-Xf-50q-Yf-6f10a-f251Z-Zf275',float('-60.000000'),float('-16.000000'),float('251.000000'),float('60.000000'),float('4.000000'),float('275.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1959.8183550801714,
                -3419.7100216597037
            ],
            "name": "m6",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 74
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__28.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__72.__2,__74.__4,__277.__4,__296.__4,__297.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-105X-Xf105a-f-125Y-Yf145a-f257Z-Zf269niiiiaaam__f1-r+qXq-Yf-6f60a-f251Z-Zf275nam__f1-r+qXq-Yf-6f40a-f251Z-Zf275nam__f1aa-f-60X-Xf60a-f-126Y-Yf-6a-f251Z-Zf275im-*f2f0X__am__f1-r+q-Xf-50q-Yf-6f10a-f251Z-Zf275am__f1-r+q-Xf-50q-Yf-6f10a-f251Z-Zf275im_-*f2f10Y_iim-*f2f0X__im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im__-*f2f263Zm-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5m-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5iim-*f2f0X__im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im__-*f2f263Zm-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5m-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5im-*f2f0X__am__f1-r+q-Xf-20q-Yf-56.25f3.75a-f268Z-Zf272am__f1-r+q-Xf-20q-Yf-56.25f3.75a-f268Z-Zf272am__f1-r+qXq-Yf-117.25f3.75a-f268Z-Zf272',float('-105.000000'),float('-125.000000'),float('257.000000'),float('105.000000'),float('145.000000'),float('269.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2413.659760065321,
                -3646.2797907157014
            ],
            "name": "d8",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 75
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "orb.z+orb.r+1.5",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+25",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "8",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f8a-f216Z-Zf241',float('-8.000000'),float('36.000000'),float('216.000000'),float('8.000000'),float('52.000000'),float('241.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1972.2085278475656,
                -2124.754963927555
            ],
            "name": "objective",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 76
        },
        {
            "datums": [
                {
                    "expr": "turret_round.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "turret_round.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "turret_round.z+turret_round.r-11.5",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+4",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3.5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf37f3.5a-f215.25Z-Zf219.25',float('-3.500000'),float('33.500000'),float('215.250000'),float('3.500000'),float('40.500000'),float('219.250000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2574.4444606627703,
                357.5324110127024
            ],
            "name": "turret_screw",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 77
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__76.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__76.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__76.__3]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__76.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f8a-f241Z-Zf246',float('-8.000000'),float('36.000000'),float('241.000000'),float('8.000000'),float('52.000000'),float('246.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2346.6190386703233,
                -2132.268510010903
            ],
            "name": "objective_lens_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 78
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__76.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__76.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__76.__3]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+10",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__76.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251',float('-8.000000'),float('36.000000'),float('241.000000'),float('8.000000'),float('52.000000'),float('251.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2375.974331906447,
                -1672.6728506934942
            ],
            "name": "objective_lens",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 79
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__78.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__79.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251',float('-8.000000'),float('36.000000'),float('241.000000'),float('8.000000'),float('52.000000'),float('246.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2869.852287041905,
                -1995.530314776057
            ],
            "name": "i2",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 80
        },
        {
            "datums": [
                {
                    "expr": "objective.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "objective.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "objective.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "10",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f10a-f216Z-Zf221',float('-10.000000'),float('34.000000'),float('216.000000'),float('10.000000'),float('54.000000'),float('221.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2439.801729106162,
                -1281.8795437899807
            ],
            "name": "objective_base",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 81
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__81.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__81.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__81.__3]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+10",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__81.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231',float('-10.000000'),float('34.000000'),float('221.000000'),float('10.000000'),float('54.000000'),float('231.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2975.872264106161,
                -1247.8115097899808
            ],
            "name": "objective_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 82
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "orb.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-turret_rotate.a",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__80.__2,__82.__5,__81.__5,__76.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241',float('-10.000000'),float('45.547710'),float('210.649979'),float('10.000000'),float('74.602173'),float('245.681168'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3419.150152904763,
                -1725.0403334655803
            ],
            "name": "r10",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 83
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__83.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "turret_round.x",
                    "name": "x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "turret_round.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "4",
                    "name": "n",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiim-Xf0-Yf37-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241m-Xf0-Yf37-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241m-Xf0-Yf37-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241m-Xf0-Yf37-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241',float('-37.602173'),float('-0.602173'),float('210.649979'),float('37.602173'),float('74.602173'),float('245.681168'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                3817.9359687380525,
                -1750.1700110824113
            ],
            "name": "a0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Array (polar)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('x', float)",
                "input('y', float)",
                "input('n', int)",
                "",
                "output('array', fab.shapes.iterate_polar(shape, x, y, n))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * 0.3 + x,",
                "     math.sin(i/36. * 2*math.pi) * 0.3 + y, 0)",
                "    for i in range(36)], close=True, color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, 0, color=sb.color.teal)",
                ""
            ],
            "uid": 84
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "turret_round.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.85",
                    "name": "s",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__49.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('mXY+f165.75/-Zf165.75f0.85-r++qXq-Yf37q-Zf165.75f61',float('-61.000000'),float('-24.000000'),float('113.899994'),float('61.000000'),float('98.000000'),float('217.600006'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2581.1229390747208,
                -741.7926950719193
            ],
            "name": "s2",
            "script": [
                "import fab",
                "",
                "title('Scale (Z)')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('z0', float)",
                "input('s', float)",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_z(shape, z0, s))",
                "",
                "# UI",
                "kwargs = {'color':sb.color.teal}",
                "sb.ui.wireframe([(_x + 0.2*s, _y, z0), (_x - 0.2*s, _y, z0)], **kwargs)",
                "sb.ui.wireframe([(_x, _y, z0), (_x, _y, z0 + s)], **kwargs)",
                "sb.ui.wireframe([(_x - 0.1*s, _y, z0 + 0.9*s), (_x, _y, z0 + s),",
                "                  (_x + 0.1*s, _y, z0 + 0.9*s)], **kwargs)",
                "",
                "sb.ui.point(_x, _y, z0, color=sb.color.teal)",
                "sb.ui.point(_x, _y, z0 + s, color=sb.color.teal, drag=(None,None,s))",
                ""
            ],
            "uid": 85
        },
        {
            "datums": [
                {
                    "expr": "focus_knob_base.xmin",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_knob_base.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "focus_knob_base.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "focus_knob_base.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f-81.5/*-Xf-81.5f60+*f0-Zf84.5*f1-f144.5Z+f-73/*-Yf-73f60+*f0-Zf84.5*f1-f144.5Z_am__f1-r+q-Xf-81.5q-Yf-73f27.5a-f84.5Z-Zf144.5',float('-109.000000'),float('-100.500000'),float('84.500000'),float('-54.000000'),float('-45.500000'),float('144.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6023.352308085839,
                1669.4913784748433
            ],
            "name": "focus_base_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 86
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__86.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__86.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__86.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-81.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf81.5-Yf0-Zf-84.5m+f-81.5/*-Xf-81.5f60+*f0-Zf84.5*f1-f144.5Z+f-73/*-Yf-73f60+*f0-Zf84.5*f1-f144.5Z_am__f1-r+q-Xf-81.5q-Yf-73f27.5a-f84.5Z-Zf144.5',float('-141.500000'),float('-100.500000'),float('57.000000'),float('-81.500000'),float('-45.500000'),float('112.000000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6525.671406454104,
                1690.5315696526623
            ],
            "name": "r7",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 87
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-10",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__56.__0]",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__56.__2]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__56.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "53/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-73q-Zf84.5f26.5a-f-91.5X-Xf-81.5',float('-91.500000'),float('-99.500000'),float('58.000000'),float('-81.500000'),float('-46.500000'),float('111.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                7007.579310478729,
                1215.441431657896
            ],
            "name": "focus_knob_mid",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 88
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-20",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__88.__0]",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__88.__2]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__88.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "55/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-73q-Zf84.5f27.5a-f-111.5X-Xf-91.5',float('-111.500000'),float('-100.500000'),float('57.000000'),float('-91.500000'),float('-45.500000'),float('112.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                7528.693202760075,
                1181.3884772007923
            ],
            "name": "focus_knob_grip",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 89
        },
        {
            "datums": [
                {
                    "expr": "east_round.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "east_round.y+east_round.r*s0.s-2",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.ymin+10",
                    "name": "ymax",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "east_round.zmax-32",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf0q-Zf120f2a-f91.75Y-Yf101.75',float('-2.000000'),float('91.750000'),float('118.000000'),float('2.000000'),float('101.750000'),float('122.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                446.1551617939732,
                -481.4092992468335
            ],
            "name": "phototube_screw",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Y)')",
                "",
                "input('x', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_y(x, ymin, ymax, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, ymin, z), (x, ymax, z)])",
                "sb.ui.wireframe([(x, ymin, z), (x+r, ymin, z)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymin,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymax,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, ymin, z)",
                "sb.ui.point(x, ymax, z)",
                "sb.ui.point(x+r, ymin, z, drag=(r, None, None))",
                ""
            ],
            "uid": 90
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__23.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__92.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('amX+f80/-Yf80f0.5_am__f1-r+qXq-Yf80f27.5a-f32Z-Zf152nm-Xf0-Yf91.75-Zf120m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-91.75-Zf-120a-r+q-Xf0q-Zf120f2a-f91.75Y-Yf101.75',float('-27.500000'),float('66.250000'),float('32.000000'),float('27.500000'),float('93.750000'),float('152.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                932.1470732498666,
                -644.8888786468755
            ],
            "name": "d9",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 91
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__90.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__90.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__90.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf91.75-Zf120m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-91.75-Zf-120a-r+q-Xf0q-Zf120f2a-f91.75Y-Yf101.75',float('-2.000000'),float('90.335785'),float('111.514717'),float('2.000000'),float('100.235283'),float('121.414215'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                964.4491995506045,
                -341.47962089351546
            ],
            "name": "r11",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 92
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-1",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_knob_mid.xmax-2.5",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__88.__2]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__88.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.R-10",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "focus_knob_mid.r+3+5",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-73q-Zf84.5f34.5a-f-85X-Xf-84na-r+q-Yf-73q-Zf84.5f24.5a-f-85X-Xf-84',float('-85.000000'),float('-107.500000'),float('50.000000'),float('-84.000000'),float('-38.500000'),float('119.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                7453.154670547106,
                1692.7733590196744
            ],
            "name": "r12",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, R) & ~fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmax, y, z), (xmax, y, z + r)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + R)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * R + y,",
                "     math.sin(i/36. * 2*math.pi) * R + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + R, drag=(None, None, R))",
                "sb.ui.point(xmax, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 93
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__88.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__93.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-73q-Zf84.5f26.5a-f-91.5X-Xf-81.5naa-r+q-Yf-73q-Zf84.5f34.5a-f-85X-Xf-84na-r+q-Yf-73q-Zf84.5f24.5a-f-85X-Xf-84',float('-91.500000'),float('-99.500000'),float('58.000000'),float('-81.500000'),float('-46.500000'),float('111.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7829.345187910355,
                1630.5208282146314
            ],
            "name": "d10",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 94
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__96.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__96.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__96.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-111.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf111.5-Yf0-Zf-84.5m+f-111.5/*-Xf-111.5f60+*f0-Zf84.5*f1-f144.5Z+f-73/*-Yf-73f60+*f0-Zf84.5*f1-f144.5Z_am__f1-r+q-Xf-111.5q-Yf-73f27.5a-f84.5Z-Zf144.5',float('-171.500000'),float('-100.500000'),float('57.000000'),float('-111.500000'),float('-45.500000'),float('112.000000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                8067.017579944802,
                811.6156684681982
            ],
            "name": "r13",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 95
        },
        {
            "datums": [
                {
                    "expr": "focus_knob_grip.xmin",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_knob_grip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "focus_knob_grip.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "focus_knob_grip.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f-111.5/*-Xf-111.5f60+*f0-Zf84.5*f1-f144.5Z+f-73/*-Yf-73f60+*f0-Zf84.5*f1-f144.5Z_am__f1-r+q-Xf-111.5q-Yf-73f27.5a-f84.5Z-Zf144.5',float('-139.000000'),float('-100.500000'),float('84.500000'),float('-84.000000'),float('-45.500000'),float('144.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                7564.698481576536,
                790.5754772903792
            ],
            "name": "focus_grip_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 96
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-3",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_grip_bevel.x",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__96.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__96.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__96.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-73q-Zf84.5f27.5a-f-114.5X-Xf-111.5',float('-114.500000'),float('-100.500000'),float('57.000000'),float('-111.500000'),float('-45.500000'),float('112.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                8082.127656659187,
                386.3704705472255
            ],
            "name": "c1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 97
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__97.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__95.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-73q-Zf84.5f27.5a-f-114.5X-Xf-111.5m-Xf-111.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf111.5-Yf0-Zf-84.5m+f-111.5/*-Xf-111.5f60+*f0-Zf84.5*f1-f144.5Z+f-73/*-Yf-73f60+*f0-Zf84.5*f1-f144.5Z_am__f1-r+q-Xf-111.5q-Yf-73f27.5a-f84.5Z-Zf144.5',float('-114.500000'),float('-100.500000'),float('57.000000'),float('-111.500000'),float('-45.500000'),float('112.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                8432.426877980834,
                749.6038169638223
            ],
            "name": "i3",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 98
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-6",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__86.__0]",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__86.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__86.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__86.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-73q-Zf84.5f27.5a-f-87.5X-Xf-81.5',float('-87.500000'),float('-100.500000'),float('57.000000'),float('-81.500000'),float('-45.500000'),float('112.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6525.4725584096295,
                2019.7812238686156
            ],
            "name": "c2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 99
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__87.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__99.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('am-Xf-81.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf81.5-Yf0-Zf-84.5m+f-81.5/*-Xf-81.5f60+*f0-Zf84.5*f1-f144.5Z+f-73/*-Yf-73f60+*f0-Zf84.5*f1-f144.5Z_am__f1-r+q-Xf-81.5q-Yf-73f27.5a-f84.5Z-Zf144.5a-r+q-Yf-73q-Zf84.5f27.5a-f-87.5X-Xf-81.5',float('-87.500000'),float('-100.500000'),float('57.000000'),float('-81.500000'),float('-45.500000'),float('112.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                6884.697012771686,
                1937.73292588385
            ],
            "name": "i4",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 100
        },
        {
            "datums": [
                {
                    "expr": "focus_knob_grip.xmin-3",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_knob_grip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "focus_knob_grip.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+5",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "focus_knob_grip.r-2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f-114.5/*-Xf-114.5f5+*f0-Zf84.5*f1-f89.5Z+f-73/*-Yf-73f5+*f0-Zf84.5*f1-f89.5Z_am__f1-r+q-Xf-114.5q-Yf-73f25.5a-f84.5Z-Zf89.5',float('-140.000000'),float('-98.500000'),float('84.500000'),float('-89.000000'),float('-47.500000'),float('89.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                7946.123732248819,
                2338.365258195631
            ],
            "name": "focus_indicator",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 101
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-4",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_indicator.x",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__101.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__101.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__101.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-73q-Zf84.5f25.5a-f-118.5X-Xf-114.5',float('-118.500000'),float('-98.500000'),float('59.000000'),float('-114.500000'),float('-47.500000'),float('110.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                8451.242055178183,
                1934.1602514524775
            ],
            "name": "c3",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 102
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__101.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__101.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__101.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-114.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf114.5-Yf0-Zf-84.5m+f-114.5/*-Xf-114.5f5+*f0-Zf84.5*f1-f89.5Z+f-73/*-Yf-73f5+*f0-Zf84.5*f1-f89.5Z_am__f1-r+q-Xf-114.5q-Yf-73f25.5a-f84.5Z-Zf89.5',float('-119.500000'),float('-98.500000'),float('59.000000'),float('-114.500000'),float('-47.500000'),float('110.000000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                8448.442830617085,
                2359.40544937345
            ],
            "name": "r14",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 103
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__102.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__103.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-73q-Zf84.5f25.5a-f-118.5X-Xf-114.5m-Xf-114.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf114.5-Yf0-Zf-84.5m+f-114.5/*-Xf-114.5f5+*f0-Zf84.5*f1-f89.5Z+f-73/*-Yf-73f5+*f0-Zf84.5*f1-f89.5Z_am__f1-r+q-Xf-114.5q-Yf-73f25.5a-f84.5Z-Zf89.5',float('-118.500000'),float('-98.500000'),float('59.000000'),float('-114.500000'),float('-47.500000'),float('110.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                8813.852128653114,
                2297.3935978690743
            ],
            "name": "i5",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 104
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-6",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_knob_grip.xmin",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__89.__2]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__89.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "30/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-73q-Zf84.5f15a-f-117.5X-Xf-111.5',float('-117.500000'),float('-88.000000'),float('69.500000'),float('-111.500000'),float('-58.000000'),float('99.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                9330.378714949953,
                421.31261444773236
            ],
            "name": "fine_focus_base",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 105
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__109.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__109.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__109.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-117.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf117.5-Yf0-Zf-84.5m+f-117.5/*-Xf-117.5f150+*f0-Zf84.5*f1-f234.5Z+f-73/*-Yf-73f150+*f0-Zf84.5*f1-f234.5Z_am__f1-r+q-Xf-117.5q-Yf-73f12.4a-f84.5Z-Zf234.5',float('-267.500000'),float('-85.400002'),float('72.100006'),float('-117.500000'),float('-60.599998'),float('96.900002'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                9395.134175350322,
                1178.47959643159
            ],
            "name": "r15",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 106
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-16.7",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "fine_focus.x",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__109.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__109.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__109.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-73q-Zf84.5f12.4a-f-134.2X-Xf-117.5',float('-134.199997'),float('-85.400002'),float('72.099998'),float('-117.500000'),float('-60.599998'),float('96.900002'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                9316.175645132036,
                809.4428549214435
            ],
            "name": "fine_focus_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 107
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__107.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__106.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-73q-Zf84.5f12.4a-f-134.2X-Xf-117.5m-Xf-117.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf117.5-Yf0-Zf-84.5m+f-117.5/*-Xf-117.5f150+*f0-Zf84.5*f1-f234.5Z+f-73/*-Yf-73f150+*f0-Zf84.5*f1-f234.5Z_am__f1-r+q-Xf-117.5q-Yf-73f12.4a-f84.5Z-Zf234.5',float('-134.199997'),float('-85.400002'),float('72.100006'),float('-117.500000'),float('-60.599998'),float('96.900002'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                9760.543473386351,
                1116.4677449272176
            ],
            "name": "i6",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 108
        },
        {
            "datums": [
                {
                    "expr": "fine_focus_base.xmin",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_knob_grip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "focus_knob_grip.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+150",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "24.8/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f-117.5/*-Xf-117.5f150+*f0-Zf84.5*f1-f234.5Z+f-73/*-Yf-73f150+*f0-Zf84.5*f1-f234.5Z_am__f1-r+q-Xf-117.5q-Yf-73f12.4a-f84.5Z-Zf234.5',float('-129.899994'),float('-85.400002'),float('84.500000'),float('-105.099998'),float('-60.599998'),float('234.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                8892.815076982057,
                1157.4394052537727
            ],
            "name": "fine_focus",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 109
        },
        {
            "datums": [
                {
                    "expr": "fine_focus_mask.xmin",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_knob_grip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "focus_knob_grip.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+20",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "21.8/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f-134.2/*-Xf-134.2f20+*f0-Zf84.5*f1-f104.5Z+f-73/*-Yf-73f20+*f0-Zf84.5*f1-f104.5Z_am__f1-r+q-Xf-134.2q-Yf-73f10.9a-f84.5Z-Zf104.5',float('-145.100006'),float('-83.900002'),float('84.500000'),float('-123.300003'),float('-62.099998'),float('104.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                9464.366236768772,
                1834.6757552250683
            ],
            "name": "fine_focus_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 110
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__112.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__113.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-73q-Zf84.5f10.9a-f-135.2X-Xf-134.2m-Xf-134.2-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf134.2-Yf0-Zf-84.5m+f-134.2/*-Xf-134.2f20+*f0-Zf84.5*f1-f104.5Z+f-73/*-Yf-73f20+*f0-Zf84.5*f1-f104.5Z_am__f1-r+q-Xf-134.2q-Yf-73f10.9a-f84.5Z-Zf104.5',float('-135.199997'),float('-83.900002'),float('73.599998'),float('-134.199997'),float('-62.099998'),float('95.399994'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                10332.094633173067,
                1793.7040948985132
            ],
            "name": "i7",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 111
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-1",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "fine_focus_bevel.x",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__110.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__110.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__110.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-73q-Zf84.5f10.9a-f-135.2X-Xf-134.2',float('-135.199997'),float('-83.900002'),float('73.599998'),float('-134.199997'),float('-62.099998'),float('95.400002'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                9969.484559698132,
                1430.4707484819128
            ],
            "name": "c5",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 112
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__110.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__110.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__110.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-134.2-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf134.2-Yf0-Zf-84.5m+f-134.2/*-Xf-134.2f20+*f0-Zf84.5*f1-f104.5Z+f-73/*-Yf-73f20+*f0-Zf84.5*f1-f104.5Z_am__f1-r+q-Xf-134.2q-Yf-73f10.9a-f84.5Z-Zf104.5',float('-154.199997'),float('-83.900002'),float('73.599991'),float('-134.199997'),float('-62.099998'),float('95.399994'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                9966.685335137037,
                1855.7159464028855
            ],
            "name": "r16",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 113
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-1.5",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "hill.x-hill.width/2+19",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "hill.y+25",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "9",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "36.2/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-56q-Zf9f18.1a-f-67.5X-Xf-66',float('-67.500000'),float('-74.099998'),float('-9.100000'),float('-66.000000'),float('-37.900002'),float('27.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5383.539786229604,
                4723.146392493218
            ],
            "name": "light_indicator",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 114
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__114.__1]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__114.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__114.__5,__115.__5,__120.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-66-Yf0-Zf9m+*f0.707107X*f-0.707107ZY+*f0.707107X*f0.707107Zm-Xf66-Yf0-Zf-9iia-r+q-Yf-56q-Zf9f18.1a-f-67.5X-Xf-66a-r+q-Yf-56q-Zf9f12.5a-f-84.5X-Xf-67.5aa-r+q-Yf-56q-Zf9f12.5a-f-85.5X-Xf-84.5m-Xf-84.5-Yf0-Zf9m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf84.5-Yf0-Zf-9m+f-84.5/*-Xf-84.5f20+*f0-Zf9*f1-f29Z+f-56/*-Yf-56f20+*f0-Zf9*f1-f29Z_am__f1-r+q-Xf-84.5q-Yf-56f12.5a-f9Z-Zf29',float('-92.587219'),float('-74.099998'),float('-3.798637'),float('-53.201363'),float('-37.900002'),float('35.587223'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5955.648077720657,
                4739.877032857716
            ],
            "name": "r18",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 116
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-17",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "light_indicator.xmin",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__114.__2]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__114.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "25/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-56q-Zf9f12.5a-f-84.5X-Xf-67.5',float('-84.500000'),float('-68.500000'),float('-3.500000'),float('-67.500000'),float('-43.500000'),float('21.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5381.702261496611,
                5160.185345694828
            ],
            "name": "light_dial",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 115
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__116.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__119.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('am-Xf-66-Yf0-Zf9m+*f0.707107X*f-0.707107ZY+*f0.707107X*f0.707107Zm-Xf66-Yf0-Zf-9iia-r+q-Yf-56q-Zf9f18.1a-f-67.5X-Xf-66a-r+q-Yf-56q-Zf9f12.5a-f-84.5X-Xf-67.5aa-r+q-Yf-56q-Zf9f12.5a-f-85.5X-Xf-84.5m-Xf-84.5-Yf0-Zf9m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf84.5-Yf0-Zf-9m+f-84.5/*-Xf-84.5f20+*f0-Zf9*f1-f29Z+f-56/*-Yf-56f20+*f0-Zf9*f1-f29Z_am__f1-r+q-Xf-84.5q-Yf-56f12.5a-f9Z-Zf29nm-Xf-66-Yf0-Zf9m+*f0.707107X*f-0.707107ZY+*f0.707107X*f0.707107Zm-Xf66-Yf0-Zf-9aa-r+q-Yf-56q-Zf9f14.5a-f-69X-Xf-67.5na-r+q-Yf-56q-Zf9f6.25a-f-69X-Xf-67.5',float('-92.587219'),float('-74.099998'),float('-3.798637'),float('-53.201363'),float('-37.900002'),float('35.587223'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                6721.220486127685,
                4950.313324146186
            ],
            "name": "d11",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 117
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-1.5",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__115.__1]",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__115.__2]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__115.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "light_dial.r/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "light_dial.r+2",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-56q-Zf9f14.5a-f-69X-Xf-67.5na-r+q-Yf-56q-Zf9f6.25a-f-69X-Xf-67.5',float('-69.000000'),float('-70.500000'),float('-5.500000'),float('-67.500000'),float('-41.500000'),float('23.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                5929.310219997183,
                5167.867220864173
            ],
            "name": "light_dial_gap",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, R) & ~fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmax, y, z), (xmax, y, z + r)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + R)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * R + y,",
                "     math.sin(i/36. * 2*math.pi) * R + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + R, drag=(None, None, R))",
                "sb.ui.point(xmax, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 118
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__116.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__118.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__116.__3]",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__118.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-66-Yf0-Zf9m+*f0.707107X*f-0.707107ZY+*f0.707107X*f0.707107Zm-Xf66-Yf0-Zf-9aa-r+q-Yf-56q-Zf9f14.5a-f-69X-Xf-67.5na-r+q-Yf-56q-Zf9f6.25a-f-69X-Xf-67.5',float('-78.374374'),float('-70.500000'),float('-0.192391'),float('-56.807610'),float('-41.500000'),float('21.374372'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6354.131479141905,
                5223.958471880254
            ],
            "name": "r17",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 119
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__122.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__121.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-56q-Zf9f12.5a-f-85.5X-Xf-84.5m-Xf-84.5-Yf0-Zf9m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf84.5-Yf0-Zf-9m+f-84.5/*-Xf-84.5f20+*f0-Zf9*f1-f29Z+f-56/*-Yf-56f20+*f0-Zf9*f1-f29Z_am__f1-r+q-Xf-84.5q-Yf-56f12.5a-f9Z-Zf29',float('-85.500000'),float('-68.500000'),float('-3.500000'),float('-84.500000'),float('-43.500000'),float('21.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5382.91746228054,
                4361.340555494576
            ],
            "name": "i8",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 120
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__123.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__123.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__123.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-84.5-Yf0-Zf9m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf84.5-Yf0-Zf-9m+f-84.5/*-Xf-84.5f20+*f0-Zf9*f1-f29Z+f-56/*-Yf-56f20+*f0-Zf9*f1-f29Z_am__f1-r+q-Xf-84.5q-Yf-56f12.5a-f9Z-Zf29',float('-104.500000'),float('-68.500000'),float('-3.500000'),float('-84.500000'),float('-43.500000'),float('21.500000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5017.508164244511,
                4423.352406998948
            ],
            "name": "r19",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 121
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-1",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "light_dial.xmin",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__123.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__123.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__123.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-56q-Zf9f12.5a-f-85.5X-Xf-84.5',float('-85.500000'),float('-68.500000'),float('-3.500000'),float('-84.500000'),float('-43.500000'),float('21.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5020.307388805606,
                3998.1072090779753
            ],
            "name": "c4",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 122
        },
        {
            "datums": [
                {
                    "expr": "light_dial.xmin",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "light_dial.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "light_dial.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+20",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "light_dial.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f-84.5/*-Xf-84.5f20+*f0-Zf9*f1-f29Z+f-56/*-Yf-56f20+*f0-Zf9*f1-f29Z_am__f1-r+q-Xf-84.5q-Yf-56f12.5a-f9Z-Zf29',float('-97.000000'),float('-68.500000'),float('9.000000'),float('-72.000000'),float('-43.500000'),float('29.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4515.189065876246,
                4402.312215821131
            ],
            "name": "light_dial_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 123
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "foundation.y+foundation.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "foundation.z+10",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "44.5",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "12",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-21.25X-Xf21.25a-f125Y-Yf125a-f4Z-Zf16am__f1iaa-f-22.25X-Xf22.25a-f125Y-Yf125aa-f-21.25X-Xf21.25a-f124Y-Yf126a-f5Z-Zf15-r++q-Xf21.25q-Yf125q-Zf15f1-r++q-Xf-21.25q-Yf125q-Zf15f1-r++q-Xf21.25q-Yf125q-Zf15f1-r++q-Xf-21.25q-Yf125q-Zf15f1-r++q-Xf21.25q-Yf125q-Zf5f1-r++q-Xf-21.25q-Yf125q-Zf5f1-r++q-Xf21.25q-Yf125q-Zf5f1-r++q-Xf-21.25q-Yf125q-Zf5f1am__f1-r+q-Xf21.25q-Yf125f1a-f5Z-Zf15a-r+q-Yf125q-Zf15f1a-f-21.25X-Xf21.25a-r+q-Xf21.25q-Zf15f1a-f125Y-Yf125am__f1-r+q-Xf-21.25q-Yf125f1a-f5Z-Zf15a-r+q-Yf125q-Zf15f1a-f-21.25X-Xf21.25a-r+q-Xf-21.25q-Zf15f1a-f125Y-Yf125am__f1-r+q-Xf21.25q-Yf125f1a-f5Z-Zf15a-r+q-Yf125q-Zf5f1a-f-21.25X-Xf21.25a-r+q-Xf21.25q-Zf5f1a-f125Y-Yf125am__f1-r+q-Xf-21.25q-Yf125f1a-f5Z-Zf15a-r+q-Yf125q-Zf5f1a-f-21.25X-Xf21.25a-r+q-Xf-21.25q-Zf5f1a-f125Y-Yf125',float('-22.250000'),float('124.000000'),float('4.000000'),float('22.250000'),float('126.000000'),float('16.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -628.7859291086079,
                3901.4771983598944
            ],
            "name": "label",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 124
        },
        {
            "datums": [
                {
                    "expr": "phototube.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "phototube.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(phototube.zmax+phototube.zmin)/2",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "sx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1.05",
                    "name": "sy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0.7",
                    "name": "sz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__24.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/-Xf0f1+f84.1667/-Yf84.1667f1.05+f192/-Zf192f0.7am__f1-r+qXq-Yf84.1667f27.5a-f122Z-Zf262',float('-27.500000'),float('55.291668'),float('143.000000'),float('27.500000'),float('113.041656'),float('241.000000'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -84.1841844845859,
                -2951.326699539323
            ],
            "name": "s3",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/13/15",
                "",
                "import fab",
                "",
                "title('Scale (3D)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('z0', float)",
                "input('sx', float)",
                "input('sy', float)",
                "input('sz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_xyz(",
                "    shape, x0, y0, z0, sx, sy, sz))",
                "",
                "# UI",
                "sb.ui.wireframe([(x0 + sx, y0, z0), (x0, y0, z0), (x0, y0 + sy, z0)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0, y0, z0), (x0, y0, z0 + sz)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sx, y0 + sx/10, z0), (x0 + sx, y0 - sx/10, z0)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sy/10, y0 + sy, z0), (x0 - sy/10, y0 + sy, z0)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sz/10, y0, z0 + sz), (x0 - sz/10, y0, z0 + sz)],",
                "                 color=sb.color.teal)",
                "",
                "sb.ui.point(x0, y0, z0, color=sb.color.teal)",
                "sb.ui.point(x0 + sx, y0, z0, color=sb.color.teal, drag=(sx, None, None))",
                "sb.ui.point(x0, y0 + sy, z0, color=sb.color.teal, drag=(None, sy, None))",
                "sb.ui.point(x0, y0, z0 + sz, color=sb.color.teal, drag=(None, None, sz))",
                ""
            ],
            "uid": 126
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__24.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__25.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__25.__3]",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__126.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf152m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-84.1667-Zf-152m+f0/-Xf0f1+f84.1667/-Yf84.1667f1.05+f192/-Zf192f0.7am__f1-r+qXq-Yf84.1667f27.5a-f122Z-Zf262',float('-27.500000'),float('57.384998'),float('125.218353'),float('27.500000'),float('167.516907'),float('235.350266'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                240.99676725347922,
                -2787.9815545622355
            ],
            "name": "r20",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 125
        },
        {
            "datums": [
                {
                    "expr": "focus_knob_base.xmax-12",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "focus_knob_base.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "focus_knob_base.z-self.depth/2+3",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "focus_knob_base.r*2+10",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "40",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-40.5X-Xf-38.5a-f-105.5Y-Yf-40.5a-f47.5Z-Zf87.5',float('-40.500000'),float('-105.500000'),float('47.500000'),float('-38.500000'),float('-40.500000'),float('87.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                6559.228701022525,
                568.3422299736411
            ],
            "name": "focus_knob_notch",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 127
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__56.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__127.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-73q-Zf84.5f27.5a-f-81.5X-Xf-27.5nam__f1aa-f-40.5X-Xf-38.5a-f-105.5Y-Yf-40.5a-f47.5Z-Zf87.5',float('-81.500000'),float('-100.500000'),float('57.000000'),float('-27.500000'),float('-45.500000'),float('112.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7130.894711698698,
                837.3732974182649
            ],
            "name": "d12",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 128
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-16",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_housing_base.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "66/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f33a-f366.75Z-Zf382.75',float('-33.000000'),float('11.000000'),float('366.750000'),float('33.000000'),float('77.000000'),float('382.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1672.2562061585568,
                -7008.119832474993
            ],
            "name": "lamp_focus_base",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 129
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_arm.ymax",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.ymin+20",
                    "name": "ymax",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_arm.z",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "31/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf0q-Zf402f15.5a-f-4Y-Yf16',float('-15.500000'),float('-4.000000'),float('386.500000'),float('15.500000'),float('16.000000'),float('417.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3129.094323068666,
                -7447.280065152412
            ],
            "name": "lamp_stand_connector",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Y)')",
                "",
                "input('x', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_y(x, ymin, ymax, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, ymin, z), (x, ymax, z)])",
                "sb.ui.wireframe([(x, ymin, z), (x+r, ymin, z)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymin,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymax,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, ymin, z)",
                "sb.ui.point(x, ymax, z)",
                "sb.ui.point(x+r, ymin, z, drag=(r, None, None))",
                ""
            ],
            "uid": 130
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_arm.z-lamp_arm.r/2",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+160",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "42/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f160+*f0-Zf398.5*f1-f558.5Z+f44/*-Yf44f160+*f0-Zf398.5*f1-f558.5Z_am__f1-r+qXq-Yf44f21a-f398.5Z-Zf558.5',float('-21.000000'),float('23.000000'),float('398.500000'),float('21.000000'),float('65.000000'),float('558.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                905.068174695275,
                -8581.255336065788
            ],
            "name": "lamp_housing",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 131
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-15.75",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_housing.z0",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_housing.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f21a-f382.75Z-Zf398.5',float('-21.000000'),float('23.000000'),float('382.750000'),float('21.000000'),float('65.000000'),float('398.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1725.1262400093,
                -8114.655613530363
            ],
            "name": "lamp_housing_base",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 132
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__131.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__131.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__131.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+25.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__131.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f21a-f398.5Z-Zf424',float('-21.000000'),float('23.000000'),float('398.500000'),float('21.000000'),float('65.000000'),float('424.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1354.167345818637,
                -8704.997383097303
            ],
            "name": "lamp_housing_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 133
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__133.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__131.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf44f21a-f398.5Z-Zf424m+f0/*-Xf0f160+*f0-Zf398.5*f1-f558.5Z+f44/*-Yf44f160+*f0-Zf398.5*f1-f558.5Z_am__f1-r+qXq-Yf44f21a-f398.5Z-Zf558.5',float('-21.000000'),float('23.000000'),float('398.500000'),float('21.000000'),float('65.000000'),float('424.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1842.0730755929335,
                -8374.490280651211
            ],
            "name": "i9",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 134
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_stand_connector.ymax",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.ymin+20",
                    "name": "ymax",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_arm.z",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "25.2/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf0q-Zf402f12.6a-f16Y-Yf36',float('-12.600000'),float('16.000000'),float('389.399994'),float('12.600000'),float('36.000000'),float('414.600006'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2420.9033732888797,
                -8433.320747329337
            ],
            "name": "lamp_stand_housing_connector",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Y)')",
                "",
                "input('x', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_y(x, ymin, ymax, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, ymin, z), (x, ymax, z)])",
                "sb.ui.wireframe([(x, ymin, z), (x+r, ymin, z)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymin,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymax,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, ymin, z)",
                "sb.ui.point(x, ymax, z)",
                "sb.ui.point(x+r, ymin, z, drag=(r, None, None))",
                ""
            ],
            "uid": 135
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_housing_mask.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+23",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "35.4/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f23+*f0-Zf424*f1-f447Z+f44/*-Yf44f23+*f0-Zf424*f1-f447Z_am__f1-r+qXq-Yf44f17.7a-f424Z-Zf447',float('-17.700001'),float('26.299999'),float('424.000000'),float('17.700001'),float('61.700001'),float('447.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                834.0413767457003,
                -9063.729900226834
            ],
            "name": "lamp_housing_upper",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 136
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__138.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__136.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf44f17.7a-f424Z-Zf431m+f0/*-Xf0f23+*f0-Zf424*f1-f447Z+f44/*-Yf44f23+*f0-Zf424*f1-f447Z_am__f1-r+qXq-Yf44f17.7a-f424Z-Zf447',float('-17.700001'),float('26.299999'),float('424.000000'),float('17.700001'),float('61.700001'),float('431.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1918.3677284607666,
                -8884.324542821207
            ],
            "name": "i10",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 137
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__136.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__136.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__136.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+7",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__136.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f17.7a-f424Z-Zf431',float('-17.700001'),float('26.299999'),float('424.000000'),float('17.700001'),float('61.700001'),float('431.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1354.6966811232314,
                -9187.471947258353
            ],
            "name": "lamp_housing_upper_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 138
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_housing_upper_mask.zmax-10",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin++10+17",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "23/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f11.5a-f421Z-Zf448',float('-11.500000'),float('32.500000'),float('421.000000'),float('11.500000'),float('55.500000'),float('448.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1917.181279729346,
                -9395.769630608618
            ],
            "name": "bulb_case",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 139
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__142.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__142.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__142.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__142.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f11.5a-f448Z-Zf450',float('-11.500000'),float('32.500000'),float('448.000000'),float('11.500000'),float('55.500000'),float('450.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1384.2400204894298,
                -9902.771262254499
            ],
            "name": "bulb_case_bevel_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 140
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__140.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__142.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf44f11.5a-f448Z-Zf450m+f0/*-Xf0f23+*f0-Zf448*f1-f471Z+f44/*-Yf44f23+*f0-Zf448*f1-f471Z_am__f1-r+qXq-Yf44f11.5a-f448Z-Zf471',float('-11.500000'),float('32.500000'),float('448.000000'),float('11.500000'),float('55.500000'),float('450.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1926.6013109132018,
                -9656.510515986974
            ],
            "name": "i11",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 141
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bulb_case.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+23",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bulb_case.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f23+*f0-Zf448*f1-f471Z+f44/*-Yf44f23+*f0-Zf448*f1-f471Z_am__f1-r+qXq-Yf44f11.5a-f448Z-Zf471',float('-11.500000'),float('32.500000'),float('448.000000'),float('11.500000'),float('55.500000'),float('471.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                841.0778597985268,
                -9836.903988600227
            ],
            "name": "bulb_case_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 142
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bulb_case_bevel_mask.zmax-1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+6.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "18.6/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f9.3a-f449Z-Zf455.5',float('-9.300000'),float('34.700001'),float('449.000000'),float('9.300000'),float('53.299999'),float('455.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3118.179811359438,
                -10052.66813058886
            ],
            "name": "bulb_core",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 143
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bulb_core.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+16",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "21.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f10.75a-f455.5Z-Zf471.5',float('-10.750000'),float('33.250000'),float('455.500000'),float('10.750000'),float('54.750000'),float('471.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1188.15825722113,
                -10578.046444600106
            ],
            "name": "bulb_handle",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 144
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__147.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__146.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf44f10.75a-f471.5Z-Zf472.5m+f0/*-Xf0f23+*f0-Zf471.5*f1-f494.5Z+f44/*-Yf44f23+*f0-Zf471.5*f1-f494.5Z_am__f1-r+qXq-Yf44f10.75a-f471.5Z-Zf494.5',float('-10.750000'),float('33.250000'),float('471.500000'),float('10.750000'),float('54.750000'),float('472.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2719.9105818775743,
                -10523.317286421985
            ],
            "name": "i12",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 145
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bulb_handle.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+23",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bulb_handle.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f23+*f0-Zf471.5*f1-f494.5Z+f44/*-Yf44f23+*f0-Zf471.5*f1-f494.5Z_am__f1-r+qXq-Yf44f10.75a-f471.5Z-Zf494.5',float('-10.750000'),float('33.250000'),float('471.500000'),float('10.750000'),float('54.750000'),float('494.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1592.8983256068332,
                -10701.81582641386
            ],
            "name": "bulb_handle_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 146
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__146.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__146.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__146.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__146.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f10.75a-f471.5Z-Zf472.5',float('-10.750000'),float('33.250000'),float('471.500000'),float('10.750000'),float('54.750000'),float('472.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2136.060486297737,
                -10767.683100068132
            ],
            "name": "bulb_handle_bevel_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 147
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-5",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bulb_handle_bevel_mask.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "6",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f6a-f467.5Z-Zf472.5',float('-6.000000'),float('38.000000'),float('467.500000'),float('6.000000'),float('50.000000'),float('472.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2621.435571110712,
                -10244.758842346966
            ],
            "name": "bulb_handle_core",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 148
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__145.__2,__144.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__148.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiaam__f1-r+qXq-Yf44f10.75a-f471.5Z-Zf472.5m+f0/*-Xf0f23+*f0-Zf471.5*f1-f494.5Z+f44/*-Yf44f23+*f0-Zf471.5*f1-f494.5Z_am__f1-r+qXq-Yf44f10.75a-f471.5Z-Zf494.5am__f1-r+qXq-Yf44f10.75a-f455.5Z-Zf471.5nam__f1-r+qXq-Yf44f6a-f467.5Z-Zf472.5',float('-10.750000'),float('33.250000'),float('455.500000'),float('10.750000'),float('54.750000'),float('472.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3111.385973410218,
                -10348.855953317117
            ],
            "name": "d13",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 149
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(bulb_handle_core.zmax+bulb_handle_core.zmin)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bulb_handle_core.r",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "(bulb_handle_core.zmax-bulb_handle_core.zmin)/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf44-Zf470-r+q-f6r+qXqYqZf2.5',float('-8.500000'),float('35.500000'),float('467.500000'),float('8.500000'),float('52.500000'),float('472.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3055.8675142261372,
                -10831.866548218612
            ],
            "name": "bulb_handle_core_bevel",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 150
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-0.5",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_focus_base.zmax-6.6",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.R-0.2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "lamp_focus_base.r",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf44f33a-f375.65Z-Zf376.15nam__f1-r+qXq-Yf44f32.8a-f375.65Z-Zf376.15',float('-33.000000'),float('11.000000'),float('375.649994'),float('33.000000'),float('77.000000'),float('376.149994'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1648.0913151775703,
                -6625.145177808672
            ],
            "name": "lamp_focus_base_score",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 151
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__129.__5,__185.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__151.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiam__f1-r+qXq-Yf44f33a-f366.75Z-Zf382.75aam__f1-r+qXq-Yf44f33a-f365.75Z-Zf383.75im+f0/*-Xf0f100+*f0-Zf382.75*f1-f482.75Z+f44/*-Yf44f100+*f0-Zf382.75*f1-f482.75Z_am__f1-r+qXq-Yf44f33a-f382.75Z-Zf482.75m__-*f2f366.75Zm+f0/*-Xf0f100+*f0-Zf366.75*f1-f466.75Z+f44/*-Yf44f100+*f0-Zf366.75*f1-f466.75Z_am__f1-r+qXq-Yf44f33a-f366.75Z-Zf466.75naam__f1-r+qXq-Yf44f33a-f375.65Z-Zf376.15nam__f1-r+qXq-Yf44f32.8a-f375.65Z-Zf376.15',float('-33.000000'),float('11.000000'),float('365.750000'),float('33.000000'),float('77.000000'),float('383.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2320.7040266661597,
                -6647.861153244406
            ],
            "name": "d14",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 152
        },
        {
            "datums": [
                {
                    "expr": "orb.x+lamp_focus_base.r-1",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.xmin+4",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_focus_base.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_focus_base.zmax-12.25",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf44q-Zf370.5f1.5a-f32X-Xf36',float('32.000000'),float('42.500000'),float('369.000000'),float('36.000000'),float('45.500000'),float('372.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2288.756667811507,
                -9421.747328500438
            ],
            "name": "lamp_focus_knob_screw",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 153
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__161.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf44-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-44-Zf0iia-r+q-Yf44q-Zf370.5f1.5a-f32X-Xf36a-r+q-Yf44q-Zf370.5f3a-f36X-Xf45iaa-r+q-Yf44q-Zf370.5f3a-f45X-Xf46m-Xf45-Yf0-Zf370.5m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-45-Yf0-Zf-370.5m+f45/*-Xf45f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf45q-Yf44f3a-f370.5Z-Zf375.5aa-r+q-Yf44q-Zf370.5f3a-f35.5X-Xf36m-Xf36-Yf0-Zf370.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf-36-Yf0-Zf-370.5m+f36/*-Xf36f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf36q-Yf44f3a-f370.5Z-Zf375.5',float('-3.000000'),float('76.000000'),float('367.500000'),float('3.000000'),float('90.000000'),float('373.500000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -923.6549558128654,
                -8334.434734573679
            ],
            "name": "r21",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 154
        },
        {
            "datums": [
                {
                    "expr": "lamp_focus_knob_screw.xmax",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.xmin+9",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_focus_base.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_focus_knob_screw.z",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "6/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf44q-Zf370.5f3a-f36X-Xf45',float('36.000000'),float('41.000000'),float('367.500000'),float('45.000000'),float('47.000000'),float('373.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2228.880967545123,
                -9064.326527718662
            ],
            "name": "lamp_focus_knob",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 155
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__159.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__159.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__159.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf45-Yf0-Zf370.5m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-45-Yf0-Zf-370.5m+f45/*-Xf45f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf45q-Yf44f3a-f370.5Z-Zf375.5',float('45.000000'),float('41.000000'),float('367.500000'),float('50.000000'),float('47.000000'),float('373.500000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2187.8560233723465,
                -8188.999242013334
            ],
            "name": "r22",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 156
        },
        {
            "datums": [
                {
                    "expr": "lamp_focus_knob.xmax",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.xmin+1",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__159.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__159.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__159.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf44q-Zf370.5f3a-f45X-Xf46',float('45.000000'),float('41.000000'),float('367.500000'),float('46.000000'),float('47.000000'),float('373.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2185.056798811248,
                -8614.244439934304
            ],
            "name": "c6",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 157
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__157.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__156.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf44q-Zf370.5f3a-f45X-Xf46m-Xf45-Yf0-Zf370.5m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-45-Yf0-Zf-370.5m+f45/*-Xf45f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf45q-Yf44f3a-f370.5Z-Zf375.5',float('45.000000'),float('41.000000'),float('367.500000'),float('46.000000'),float('47.000000'),float('373.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1822.446725336317,
                -8251.01109351771
            ],
            "name": "i13",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 158
        },
        {
            "datums": [
                {
                    "expr": "lamp_focus_knob.xmax",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_focus_knob.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_focus_knob.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+5",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_focus_knob.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f45/*-Xf45f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf45q-Yf44f3a-f370.5Z-Zf375.5',float('42.000000'),float('41.000000'),float('370.500000'),float('48.000000'),float('47.000000'),float('375.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2805.8373540689836,
                -8210.039433191152
            ],
            "name": "lamp_focus_knob_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 159
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "130",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__154.__4,__154.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf44-Zf0m+*f-0.642788X*f0.766044Y+*f-0.766044X*f-0.642788Y_m-Xf-0-Yf-44-Zf0iiia-r+q-Yf44q-Zf370.5f1.5a-f32X-Xf36a-r+q-Yf44q-Zf370.5f3a-f36X-Xf45iaa-r+q-Yf44q-Zf370.5f3a-f45X-Xf46m-Xf45-Yf0-Zf370.5m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-45-Yf0-Zf-370.5m+f45/*-Xf45f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf45q-Yf44f3a-f370.5Z-Zf375.5aa-r+q-Yf44q-Zf370.5f3a-f35.5X-Xf36m-Xf36-Yf0-Zf370.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf-36-Yf0-Zf-370.5m+f36/*-Xf36f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf36q-Yf44f3a-f370.5Z-Zf375.5m-Xf0-Yf44-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-44-Zf0iia-r+q-Yf44q-Zf370.5f1.5a-f32X-Xf36a-r+q-Yf44q-Zf370.5f3a-f36X-Xf45iaa-r+q-Yf44q-Zf370.5f3a-f45X-Xf46m-Xf45-Yf0-Zf370.5m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-45-Yf0-Zf-370.5m+f45/*-Xf45f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf45q-Yf44f3a-f370.5Z-Zf375.5aa-r+q-Yf44q-Zf370.5f3a-f35.5X-Xf36m-Xf36-Yf0-Zf370.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf-36-Yf0-Zf-370.5m+f36/*-Xf36f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf36q-Yf44f3a-f370.5Z-Zf375.5',float('-64.806274'),float('12.133621'),float('367.500000'),float('4.226496'),float('81.166389'),float('373.500000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -506.1054402249345,
                -8352.59882037793
            ],
            "name": "r23",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 160
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__153.__5,__155.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__158.__2,__165.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iia-r+q-Yf44q-Zf370.5f1.5a-f32X-Xf36a-r+q-Yf44q-Zf370.5f3a-f36X-Xf45iaa-r+q-Yf44q-Zf370.5f3a-f45X-Xf46m-Xf45-Yf0-Zf370.5m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-45-Yf0-Zf-370.5m+f45/*-Xf45f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf45q-Yf44f3a-f370.5Z-Zf375.5aa-r+q-Yf44q-Zf370.5f3a-f35.5X-Xf36m-Xf36-Yf0-Zf370.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf-36-Yf0-Zf-370.5m+f36/*-Xf36f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf36q-Yf44f3a-f370.5Z-Zf375.5',float('32.000000'),float('41.000000'),float('367.500000'),float('46.000000'),float('47.000000'),float('373.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1292.7571667925813,
                -8332.884440119193
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 161
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__164.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__164.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__164.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf36-Yf0-Zf370.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf-36-Yf0-Zf-370.5m+f36/*-Xf36f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf36q-Yf44f3a-f370.5Z-Zf375.5',float('31.000000'),float('41.000000'),float('367.500000'),float('36.000000'),float('47.000000'),float('373.500000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2184.1710412725697,
                -7424.065934584895
            ],
            "name": "r24",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 162
        },
        {
            "datums": [
                {
                    "expr": "self.xmax-0.5",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_focus_knob.xmin",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__164.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__164.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__164.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf44q-Zf370.5f3a-f35.5X-Xf36',float('35.500000'),float('41.000000'),float('367.500000'),float('36.000000'),float('47.000000'),float('373.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2181.371816711471,
                -7849.311132505868
            ],
            "name": "c7",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 163
        },
        {
            "datums": [
                {
                    "expr": "lamp_focus_knob.xmin",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_focus_knob.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_focus_knob.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+5",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_focus_knob.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f36/*-Xf36f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf36q-Yf44f3a-f370.5Z-Zf375.5',float('33.000000'),float('41.000000'),float('370.500000'),float('39.000000'),float('47.000000'),float('375.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2802.1523719692077,
                -7445.106125762716
            ],
            "name": "lamp_focus_knob_bevel_inner",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 164
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__163.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__162.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf44q-Zf370.5f3a-f35.5X-Xf36m-Xf36-Yf0-Zf370.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf-36-Yf0-Zf-370.5m+f36/*-Xf36f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf36q-Yf44f3a-f370.5Z-Zf375.5',float('35.500000'),float('41.000000'),float('367.500000'),float('36.000000'),float('47.000000'),float('373.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1818.7617432365407,
                -7486.077786089271
            ],
            "name": "i14",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 165
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-15.3",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_focus_base.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "52.4/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f26.2a-f351.45Z-Zf366.75',float('-26.200001'),float('17.799999'),float('351.450012'),float('26.200001'),float('70.199997'),float('366.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -512.6631047901074,
                -6926.094278146554
            ],
            "name": "lamp_filter_holder",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 166
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_filter_holder.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+8",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "36/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f18a-f351.45Z-Zf359.45',float('-18.000000'),float('26.000000'),float('351.450012'),float('18.000000'),float('62.000000'),float('359.450012'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -587.0965588037884,
                -6059.789000792186
            ],
            "name": "lamp_opening",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 167
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__166.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__167.__5,__169.__5,__170.__5,__172.__5,__183.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf44f26.2a-f351.45Z-Zf366.75niiiiam__f1-r+qXq-Yf44f18a-f351.45Z-Zf359.45am__f1-r+qXq-Yf44f16a-f359.45Z-Zf369.45am__f1-r+qXq-Yf44f1a-f352.95Z-Zf359.75m-Xf0-Yf44-Zf0m+*f0.906308X*f0.422618Y+*f-0.422618X*f0.906308Y_m-Xf-0-Yf-44-Zf0iiam__f1aa-f-36X-Xf0a-f26Y-Yf62a-f351.45Z-Zf359.45am__f1aa-f-59X-Xf23a-f23.5Y-Yf64.5a-f352.95Z-Zf359.75aam__f1aa-f-26X-Xf-12a-f21Y-Yf67a-f351.45Z-Zf353.45naam__f1aa-f-26X-Xf-12a-f21Y-Yf67a-f351.45Z-Zf353.45im_-*f2f44Y_am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45m-Xf0-Yf44-Zf0m+*f0.906308X*f0.422618Y+*f-0.422618X*f0.906308Y_m-Xf-0-Yf-44-Zf0am__f1aa-f-20X-Xf20a-f14.3Y-Yf21.3a-f362Z-Zf364',float('-26.200001'),float('17.799999'),float('351.450012'),float('26.200001'),float('70.199997'),float('366.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -47.95017054296625,
                -6199.805777638921
            ],
            "name": "d15",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 168
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_opening.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+10",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "32/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f16a-f359.45Z-Zf369.45',float('-16.000000'),float('28.000000'),float('359.450012'),float('16.000000'),float('60.000000'),float('369.450012'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -658.0321037039776,
                -5680.73396022139
            ],
            "name": "lamp_deep_opening",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 169
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_filter_holder.zmin+1.5",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_filter_holder.zmax-7",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f1a-f352.95Z-Zf359.75',float('-1.000000'),float('43.000000'),float('352.950012'),float('1.000000'),float('45.000000'),float('359.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1048.9041448492426,
                -6463.1376322752485
            ],
            "name": "lamp_filter_hollow",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 170
        },
        {
            "datums": [
                {
                    "expr": "orb.x-lamp_opening.r",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(lamp_filter_hollow.zmax+lamp_filter_hollow.zmin)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_opening.r*2+46",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "41",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "lamp_filter_hollow.zmax-lamp_filter_hollow.zmin",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-59X-Xf23a-f23.5Y-Yf64.5a-f352.95Z-Zf359.75',float('-59.000000'),float('23.500000'),float('352.950012'),float('23.000000'),float('64.500000'),float('359.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -1126.9363814883238,
                -5764.966448112381
            ],
            "name": "lamp_filter_slot",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 171
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "25",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__173.__6,__171.__6,__178.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf44-Zf0m+*f0.906308X*f0.422618Y+*f-0.422618X*f0.906308Y_m-Xf-0-Yf-44-Zf0iiam__f1aa-f-36X-Xf0a-f26Y-Yf62a-f351.45Z-Zf359.45am__f1aa-f-59X-Xf23a-f23.5Y-Yf64.5a-f352.95Z-Zf359.75aam__f1aa-f-26X-Xf-12a-f21Y-Yf67a-f351.45Z-Zf353.45naam__f1aa-f-26X-Xf-12a-f21Y-Yf67a-f351.45Z-Zf353.45im_-*f2f44Y_am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45',float('-63.192387'),float('-1.779545'),float('351.450012'),float('30.565296'),float('74.565292'),float('359.750000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -623.0938422717843,
                -5234.804437376643
            ],
            "name": "r25",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 172
        },
        {
            "datums": [
                {
                    "expr": "orb.x-lamp_opening.r",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(lamp_opening.zmax+lamp_opening.zmin)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_opening.r*2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_opening.r*2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "lamp_opening.zmax-lamp_opening.zmin",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-36X-Xf0a-f26Y-Yf62a-f351.45Z-Zf359.45',float('-36.000000'),float('26.000000'),float('351.450012'),float('0.000000'),float('62.000000'),float('359.450012'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -1208.6747645787334,
                -5218.667336579784
            ],
            "name": "lamp_filter_slot_lower",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 173
        },
        {
            "datums": [
                {
                    "expr": "orb.x-lamp_opening.r-1",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(lamp_opening.zmax+lamp_opening.zmin)/2-3",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_opening.r-4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_opening.r*2+10",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-26X-Xf-12a-f21Y-Yf67a-f351.45Z-Zf353.45',float('-26.000000'),float('21.000000'),float('351.450012'),float('-12.000000'),float('67.000000'),float('353.450012'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -1991.4869578695032,
                -5057.5457099614205
            ],
            "name": "lamp_filter_slot_rounds",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 174
        },
        {
            "datums": [
                {
                    "expr": "orb.x-lamp_filter_holder.r+14",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y-lamp_filter_slot_rounds.height/2-5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_filter_holder.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "10",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45',float('-22.200001'),float('6.000000'),float('351.450012'),float('-2.200000'),float('26.000000'),float('353.450012'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2320.907371150412,
                -4948.531811293716
            ],
            "name": "c8",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 175
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__175.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f44Y_am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45',float('-22.200001'),float('6.000000'),float('351.450012'),float('-2.200000'),float('82.000000'),float('353.450012'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1908.8996393224745,
                -4626.6875722939685
            ],
            "name": "m7",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 176
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__174.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__176.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-26X-Xf-12a-f21Y-Yf67a-f351.45Z-Zf353.45im_-*f2f44Y_am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45',float('-22.200001'),float('21.000000'),float('351.450012'),float('-12.000000'),float('67.000000'),float('353.450012'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1372.839323416668,
                -4659.123547674358
            ],
            "name": "i15",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 177
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__174.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__177.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-26X-Xf-12a-f21Y-Yf67a-f351.45Z-Zf353.45naam__f1aa-f-26X-Xf-12a-f21Y-Yf67a-f351.45Z-Zf353.45im_-*f2f44Y_am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45am__f1-r+q-Xf-12.2q-Yf16f10a-f351.45Z-Zf353.45',float('-26.000000'),float('21.000000'),float('351.450012'),float('-12.000000'),float('67.000000'),float('353.450012'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1021.6459394521764,
                -4754.191820403598
            ],
            "name": "d16",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 178
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-3",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_filter_holder.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_filter_holder.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+.5",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf44f26.7a-f363.75Z-Zf366.75nam__f1-r+qXq-Yf44f26.2a-f363.75Z-Zf366.75',float('-26.700001'),float('17.299999'),float('363.750000'),float('26.700001'),float('70.699997'),float('366.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                552.0894532874221,
                -6910.431718746354
            ],
            "name": "lamp_filter_holder_aperture_ring",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 179
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_filter_holder.y-lamp_filter_holder.r",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_filter_holder_aperture_ring.zmin-1",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "3.75",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "7.7*2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-1.875X-Xf1.875a-f10.1Y-Yf25.5a-f362.25Z-Zf363.25',float('-1.875000'),float('10.100000'),float('362.250000'),float('1.875000'),float('25.500000'),float('363.250000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                695.4079121740431,
                -7802.552347643637
            ],
            "name": "aperture_lever",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 180
        },
        {
            "datums": [
                {
                    "expr": "aperture_lever.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "aperture_lever.y-aperture_lever.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "aperture_lever.z-aperture_lever.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+aperture_lever.depth",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "aperture_lever.width/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf10.1f1.875a-f362.25Z-Zf363.25',float('-1.875000'),float('8.225000'),float('362.250000'),float('1.875000'),float('11.975000'),float('363.250000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                642.6619400757316,
                -7351.9579017251
            ],
            "name": "aperture_lever_round",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 181
        },
        {
            "datums": [
                {
                    "expr": "aperture_lever.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "aperture_lever.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "aperture_lever.z+0.25",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "40",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "7",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "aperture_lever.depth+1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-20X-Xf20a-f14.3Y-Yf21.3a-f362Z-Zf364',float('-20.000000'),float('14.300000'),float('362.000000'),float('20.000000'),float('21.299999'),float('364.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -1065.8574834884703,
                -6850.553624348661
            ],
            "name": "aperture_lever_slot",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 182
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "25",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__182.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf44-Zf0m+*f0.906308X*f0.422618Y+*f-0.422618X*f0.906308Y_m-Xf-0-Yf-44-Zf0am__f1aa-f-20X-Xf20a-f14.3Y-Yf21.3a-f362Z-Zf364',float('-8.532731'),float('8.630291'),float('362.000000'),float('30.677914'),float('31.879168'),float('364.000000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -585.5995118125095,
                -6453.477691171042
            ],
            "name": "r26",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 183
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__184.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__186.__5,__187.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf44f33a-f365.75Z-Zf383.75im+f0/*-Xf0f100+*f0-Zf382.75*f1-f482.75Z+f44/*-Yf44f100+*f0-Zf382.75*f1-f482.75Z_am__f1-r+qXq-Yf44f33a-f382.75Z-Zf482.75m__-*f2f366.75Zm+f0/*-Xf0f100+*f0-Zf366.75*f1-f466.75Z+f44/*-Yf44f100+*f0-Zf366.75*f1-f466.75Z_am__f1-r+qXq-Yf44f33a-f366.75Z-Zf466.75',float('-33.000000'),float('11.000000'),float('365.750000'),float('33.000000'),float('77.000000'),float('383.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2035.3796360516762,
                -5626.257597478919
            ],
            "name": "i16",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 185
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_focus_base.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+100",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_focus_base.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f100+*f0-Zf382.75*f1-f482.75Z+f44/*-Yf44f100+*f0-Zf382.75*f1-f482.75Z_am__f1-r+qXq-Yf44f33a-f382.75Z-Zf482.75',float('-33.000000'),float('11.000000'),float('382.750000'),float('33.000000'),float('77.000000'),float('482.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1076.2081072867013,
                -5965.923821013105
            ],
            "name": "lamp_focus_base_bevel_upper",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 186
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_focus_base.zmin-1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_focus_base.zmax+1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_focus_base.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf44f33a-f365.75Z-Zf383.75',float('-33.000000'),float('11.000000'),float('365.750000'),float('33.000000'),float('77.000000'),float('383.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1687.4328409376312,
                -6197.012928957466
            ],
            "name": "c9",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 184
        },
        {
            "datums": [
                {
                    "expr": "orb.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "orb.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lamp_focus_base.zmin",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0-100",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lamp_focus_base.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m__-*f2f366.75Zm+f0/*-Xf0f100+*f0-Zf366.75*f1-f466.75Z+f44/*-Yf44f100+*f0-Zf366.75*f1-f466.75Z_am__f1-r+qXq-Yf44f33a-f366.75Z-Zf466.75',float('-33.000000'),float('11.000000'),float('266.750000'),float('33.000000'),float('77.000000'),float('366.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1050.0942935871817,
                -5618.485374258221
            ],
            "name": "lamp_focus_base_bevel_lower",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 187
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__150.__5,__149.__2,__143.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "color.black",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "color.black",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "color.black",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iim-Xf0-Yf44-Zf470-r+q-f6r+qXqYqZf2.5aiaam__f1-r+qXq-Yf44f10.75a-f471.5Z-Zf472.5m+f0/*-Xf0f23+*f0-Zf471.5*f1-f494.5Z+f44/*-Yf44f23+*f0-Zf471.5*f1-f494.5Z_am__f1-r+qXq-Yf44f10.75a-f471.5Z-Zf494.5am__f1-r+qXq-Yf44f10.75a-f455.5Z-Zf471.5nam__f1-r+qXq-Yf44f6a-f467.5Z-Zf472.5am__f1-r+qXq-Yf44f9.3a-f449Z-Zf455.5',float('-10.750000'),float('33.250000'),float('449.000000'),float('10.750000'),float('54.750000'),float('472.500000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                3695.7920896261935,
                -10136.750510267439
            ],
            "name": "black",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 188
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__141.__2,__139.__5,__137.__2,__132.__5,__134.__2,__135.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "color.orange_r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "color.orange_g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "color.orange_b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaam__f1-r+qXq-Yf44f11.5a-f448Z-Zf450m+f0/*-Xf0f23+*f0-Zf448*f1-f471Z+f44/*-Yf44f23+*f0-Zf448*f1-f471Z_am__f1-r+qXq-Yf44f11.5a-f448Z-Zf471am__f1-r+qXq-Yf44f11.5a-f421Z-Zf448aam__f1-r+qXq-Yf44f17.7a-f424Z-Zf431m+f0/*-Xf0f23+*f0-Zf424*f1-f447Z+f44/*-Yf44f23+*f0-Zf424*f1-f447Z_am__f1-r+qXq-Yf44f17.7a-f424Z-Zf447am__f1-r+qXq-Yf44f21a-f382.75Z-Zf398.5aam__f1-r+qXq-Yf44f21a-f398.5Z-Zf424m+f0/*-Xf0f160+*f0-Zf398.5*f1-f558.5Z+f44/*-Yf44f160+*f0-Zf398.5*f1-f558.5Z_am__f1-r+qXq-Yf44f21a-f398.5Z-Zf558.5a-r+q-Xf0q-Zf402f12.6a-f16Y-Yf36',float('-21.000000'),float('16.000000'),float('382.750000'),float('21.000000'),float('65.000000'),float('450.000000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2709.5302465590457,
                -9322.2846186538
            ],
            "name": "orange",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 189
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__152.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "color.black",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "color.black",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "color.black",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aiam__f1-r+qXq-Yf44f33a-f366.75Z-Zf382.75aam__f1-r+qXq-Yf44f33a-f365.75Z-Zf383.75im+f0/*-Xf0f100+*f0-Zf382.75*f1-f482.75Z+f44/*-Yf44f100+*f0-Zf382.75*f1-f482.75Z_am__f1-r+qXq-Yf44f33a-f382.75Z-Zf482.75m__-*f2f366.75Zm+f0/*-Xf0f100+*f0-Zf366.75*f1-f466.75Z+f44/*-Yf44f100+*f0-Zf366.75*f1-f466.75Z_am__f1-r+qXq-Yf44f33a-f366.75Z-Zf466.75naam__f1-r+qXq-Yf44f33a-f375.65Z-Zf376.15nam__f1-r+qXq-Yf44f32.8a-f375.65Z-Zf376.15',float('-33.000000'),float('11.000000'),float('365.750000'),float('33.000000'),float('77.000000'),float('383.750000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2759.2897570775403,
                -6553.519830470564
            ],
            "name": "s4",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 190
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__180.__6,__181.__5,__179.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "color.black",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "color.black",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "color.black",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiam__f1aa-f-1.875X-Xf1.875a-f10.1Y-Yf25.5a-f362.25Z-Zf363.25am__f1-r+qXq-Yf10.1f1.875a-f362.25Z-Zf363.25aam__f1-r+qXq-Yf44f26.7a-f363.75Z-Zf366.75nam__f1-r+qXq-Yf44f26.2a-f363.75Z-Zf366.75',float('-26.700001'),float('8.225000'),float('362.250000'),float('26.700001'),float('70.699997'),float('366.750000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1315.5733351528957,
                -7366.134156412593
            ],
            "name": "s5",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 191
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__160.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "color.silver",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "color.silver",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "color.silver",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf44-Zf0m+*f-0.642788X*f0.766044Y+*f-0.766044X*f-0.642788Y_m-Xf-0-Yf-44-Zf0iiia-r+q-Yf44q-Zf370.5f1.5a-f32X-Xf36a-r+q-Yf44q-Zf370.5f3a-f36X-Xf45iaa-r+q-Yf44q-Zf370.5f3a-f45X-Xf46m-Xf45-Yf0-Zf370.5m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-45-Yf0-Zf-370.5m+f45/*-Xf45f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf45q-Yf44f3a-f370.5Z-Zf375.5aa-r+q-Yf44q-Zf370.5f3a-f35.5X-Xf36m-Xf36-Yf0-Zf370.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf-36-Yf0-Zf-370.5m+f36/*-Xf36f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf36q-Yf44f3a-f370.5Z-Zf375.5m-Xf0-Yf44-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-44-Zf0iia-r+q-Yf44q-Zf370.5f1.5a-f32X-Xf36a-r+q-Yf44q-Zf370.5f3a-f36X-Xf45iaa-r+q-Yf44q-Zf370.5f3a-f45X-Xf46m-Xf45-Yf0-Zf370.5m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-45-Yf0-Zf-370.5m+f45/*-Xf45f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf45q-Yf44f3a-f370.5Z-Zf375.5aa-r+q-Yf44q-Zf370.5f3a-f35.5X-Xf36m-Xf36-Yf0-Zf370.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf-36-Yf0-Zf-370.5m+f36/*-Xf36f5+*f0-Zf370.5*f1-f375.5Z+f44/*-Yf44f5+*f0-Zf370.5*f1-f375.5Z_am__f1-r+q-Xf36q-Yf44f3a-f370.5Z-Zf375.5',float('-64.806274'),float('12.133621'),float('367.500000'),float('4.226496'),float('81.166389'),float('373.500000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -76.73365689995586,
                -8354.028273018812
            ],
            "name": "silver",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 192
        },
        {
            "datums": [
                {
                    "expr": "lamp_ring.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_ring.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "140",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__68.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-92.5-Zf0m+*f-0.766044X*f0.642788Y+*f-0.642788X*f-0.766044Y_m-Xf-0-Yf92.5-Zf0m-Xf0-Yf0-Zf-35ia-r+q-Yf-92.5q-Zf402f3a-f17.5X-Xf25m-Xf25-Yf0-Zf402m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-25-Yf0-Zf-402iam+f25/*-Xf25f160+*f0-Zf402*f1-f562Z+f-92.5/*-Yf-92.5f160+*f0-Zf402*f1-f562Z_am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf562am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf418am__f1-r+q-Xf25q-Yf-92.5f5.875a-f418Z-Zf419',float('-37.155453'),float('-87.188049'),float('359.250000'),float('-8.424164'),float('-59.566063'),float('374.750000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6159.389670456898,
                -4162.746867218029
            ],
            "name": "r27",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 193
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__69.__5,__193.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "black.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "black.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "black.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf-92.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf92.5-Zf0ia-r+q-Yf-92.5q-Zf402f3a-f17.5X-Xf25m-Xf25-Yf0-Zf402m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-25-Yf0-Zf-402iam+f25/*-Xf25f160+*f0-Zf402*f1-f562Z+f-92.5/*-Yf-92.5f160+*f0-Zf402*f1-f562Z_am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf562am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf418am__f1-r+q-Xf25q-Yf-92.5f5.875a-f418Z-Zf419m-Xf0-Yf-92.5-Zf0m+*f-0.766044X*f0.642788Y+*f-0.642788X*f-0.766044Y_m-Xf-0-Yf92.5-Zf0m-Xf0-Yf0-Zf-35ia-r+q-Yf-92.5q-Zf402f3a-f17.5X-Xf25m-Xf25-Yf0-Zf402m+*f6.12323e-17X*f-1ZY+*f1X*f6.12323e-17Zm-Xf-25-Yf0-Zf-402iam+f25/*-Xf25f160+*f0-Zf402*f1-f562Z+f-92.5/*-Yf-92.5f160+*f0-Zf402*f1-f562Z_am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf562am__f1-r+q-Xf25q-Yf-92.5f7.75a-f402Z-Zf418am__f1-r+q-Xf25q-Yf-92.5f5.875a-f418Z-Zf419',float('-42.000000'),float('-100.250000'),float('359.250000'),float('-8.424164'),float('-59.566063'),float('409.750000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                6569.810717010481,
                -4296.668333100061
            ],
            "name": "s6",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 194
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__124.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "silver.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "silver.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "silver.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-21.25X-Xf21.25a-f125Y-Yf125a-f4Z-Zf16am__f1iaa-f-22.25X-Xf22.25a-f125Y-Yf125aa-f-21.25X-Xf21.25a-f124Y-Yf126a-f5Z-Zf15-r++q-Xf21.25q-Yf125q-Zf15f1-r++q-Xf-21.25q-Yf125q-Zf15f1-r++q-Xf21.25q-Yf125q-Zf15f1-r++q-Xf-21.25q-Yf125q-Zf15f1-r++q-Xf21.25q-Yf125q-Zf5f1-r++q-Xf-21.25q-Yf125q-Zf5f1-r++q-Xf21.25q-Yf125q-Zf5f1-r++q-Xf-21.25q-Yf125q-Zf5f1am__f1-r+q-Xf21.25q-Yf125f1a-f5Z-Zf15a-r+q-Yf125q-Zf15f1a-f-21.25X-Xf21.25a-r+q-Xf21.25q-Zf15f1a-f125Y-Yf125am__f1-r+q-Xf-21.25q-Yf125f1a-f5Z-Zf15a-r+q-Yf125q-Zf15f1a-f-21.25X-Xf21.25a-r+q-Xf-21.25q-Zf15f1a-f125Y-Yf125am__f1-r+q-Xf21.25q-Yf125f1a-f5Z-Zf15a-r+q-Yf125q-Zf5f1a-f-21.25X-Xf21.25a-r+q-Xf21.25q-Zf5f1a-f125Y-Yf125am__f1-r+q-Xf-21.25q-Yf125f1a-f5Z-Zf15a-r+q-Yf125q-Zf5f1a-f-21.25X-Xf21.25a-r+q-Xf-21.25q-Zf5f1a-f125Y-Yf125',float('-22.250000'),float('124.000000'),float('4.000000'),float('22.250000'),float('126.000000'),float('16.000000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -168.96757393727415,
                3961.3555291665984
            ],
            "name": "s7",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 195
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__117.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "silver.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "silver.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "silver.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('am-Xf-66-Yf0-Zf9m+*f0.707107X*f-0.707107ZY+*f0.707107X*f0.707107Zm-Xf66-Yf0-Zf-9iia-r+q-Yf-56q-Zf9f18.1a-f-67.5X-Xf-66a-r+q-Yf-56q-Zf9f12.5a-f-84.5X-Xf-67.5aa-r+q-Yf-56q-Zf9f12.5a-f-85.5X-Xf-84.5m-Xf-84.5-Yf0-Zf9m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf84.5-Yf0-Zf-9m+f-84.5/*-Xf-84.5f20+*f0-Zf9*f1-f29Z+f-56/*-Yf-56f20+*f0-Zf9*f1-f29Z_am__f1-r+q-Xf-84.5q-Yf-56f12.5a-f9Z-Zf29nm-Xf-66-Yf0-Zf9m+*f0.707107X*f-0.707107ZY+*f0.707107X*f0.707107Zm-Xf66-Yf0-Zf-9aa-r+q-Yf-56q-Zf9f14.5a-f-69X-Xf-67.5na-r+q-Yf-56q-Zf9f6.25a-f-69X-Xf-67.5',float('-92.587219'),float('-74.099998'),float('-3.798637'),float('-53.201363'),float('-37.900002'),float('35.587223'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                7126.651073256069,
                4887.5839028388855
            ],
            "name": "s8",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 196
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__98.__2,__89.__5,__94.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "black.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "black.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "black.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaa-r+q-Yf-73q-Zf84.5f27.5a-f-114.5X-Xf-111.5m-Xf-111.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf111.5-Yf0-Zf-84.5m+f-111.5/*-Xf-111.5f60+*f0-Zf84.5*f1-f144.5Z+f-73/*-Yf-73f60+*f0-Zf84.5*f1-f144.5Z_am__f1-r+q-Xf-111.5q-Yf-73f27.5a-f84.5Z-Zf144.5a-r+q-Yf-73q-Zf84.5f27.5a-f-111.5X-Xf-91.5aa-r+q-Yf-73q-Zf84.5f26.5a-f-91.5X-Xf-81.5naa-r+q-Yf-73q-Zf84.5f34.5a-f-85X-Xf-84na-r+q-Yf-73q-Zf84.5f24.5a-f-85X-Xf-84',float('-114.500000'),float('-100.500000'),float('57.000000'),float('-81.500000'),float('-45.500000'),float('112.000000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                8812.958543643557,
                410.02443867298757
            ],
            "name": "s9",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 197
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__108.__2,__111.__2,__105.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "black.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "black.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "black.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaa-r+q-Yf-73q-Zf84.5f12.4a-f-134.2X-Xf-117.5m-Xf-117.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf117.5-Yf0-Zf-84.5m+f-117.5/*-Xf-117.5f150+*f0-Zf84.5*f1-f234.5Z+f-73/*-Yf-73f150+*f0-Zf84.5*f1-f234.5Z_am__f1-r+q-Xf-117.5q-Yf-73f12.4a-f84.5Z-Zf234.5aa-r+q-Yf-73q-Zf84.5f10.9a-f-135.2X-Xf-134.2m-Xf-134.2-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf134.2-Yf0-Zf-84.5m+f-134.2/*-Xf-134.2f20+*f0-Zf84.5*f1-f104.5Z+f-73/*-Yf-73f20+*f0-Zf84.5*f1-f104.5Z_am__f1-r+q-Xf-134.2q-Yf-73f10.9a-f84.5Z-Zf104.5a-r+q-Yf-73q-Zf84.5f15a-f-117.5X-Xf-111.5',float('-135.199997'),float('-88.000000'),float('69.500000'),float('-111.500000'),float('-58.000000'),float('99.500000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                10114.68350205635,
                637.0985340515258
            ],
            "name": "s10",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 198
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__75.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "black.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "black.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "black.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-105X-Xf105a-f-125Y-Yf145a-f257Z-Zf269niiiiaaam__f1-r+qXq-Yf-6f60a-f251Z-Zf275nam__f1-r+qXq-Yf-6f40a-f251Z-Zf275nam__f1aa-f-60X-Xf60a-f-126Y-Yf-6a-f251Z-Zf275im-*f2f0X__am__f1-r+q-Xf-50q-Yf-6f10a-f251Z-Zf275am__f1-r+q-Xf-50q-Yf-6f10a-f251Z-Zf275im_-*f2f10Y_iim-*f2f0X__im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im__-*f2f263Zm-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5m-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5iim-*f2f0X__im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im__-*f2f263Zm-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5m-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5im-*f2f0X__am__f1-r+q-Xf-20q-Yf-56.25f3.75a-f268Z-Zf272am__f1-r+q-Xf-20q-Yf-56.25f3.75a-f268Z-Zf272am__f1-r+qXq-Yf-117.25f3.75a-f268Z-Zf272',float('-105.000000'),float('-125.000000'),float('257.000000'),float('105.000000'),float('145.000000'),float('269.000000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2826.575762180836,
                -3706.8268954025275
            ],
            "name": "s11",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 199
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__48.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "silver.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "silver.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "silver.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf44-Zf184m_+*f0.939693Y*f0.34202Z+*f-0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiiam__f1-r+qXq-Yf37f3.5a-f215.25Z-Zf219.25amXY+f165.75/-Zf165.75f0.85-r++qXq-Yf37q-Zf165.75f61am__f1-r+qXq-Yf37f32.5a-f201.25Z-Zf241.25am__f1-r+qXq-Yf37f33.5a-f202.25Z-Zf208.25am__f1-r+qXq-Yf37f32.5a-f201.25Z-Zf209.25iiim-Xf0-Yf37-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241m-Xf0-Yf37-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241m-Xf0-Yf37-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241m-Xf0-Yf37-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-37-Zf0m-Xf0-Yf44-Zf184m_+*f0.939693Y*f-0.34202Z+*f0.34202Y*f0.939693Zm-Xf0-Yf-44-Zf-184iiiaam__f1-r+qXq-Yf44f8a-f241Z-Zf246m+f0/*-Xf0f10+*f0-Zf241*f1-f251Z+f44/*-Yf44f10+*f0-Zf241*f1-f251Z_am__f1-r+qXq-Yf44f8a-f241Z-Zf251m+f0/*-Xf0f10+*f0-Zf221*f1-f231Z+f44/*-Yf44f10+*f0-Zf221*f1-f231Z_am__f1-r+qXq-Yf44f10a-f221Z-Zf231am__f1-r+qXq-Yf44f10a-f216Z-Zf221am__f1-r+qXq-Yf44f8a-f216Z-Zf241',float('-37.602173'),float('-19.008545'),float('184.954865'),float('37.602173'),float('66.856804'),float('252.427917'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                3920.701376986004,
                -188.36455352533056
            ],
            "name": "s12",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 200
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__104.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "silver.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "silver.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "silver.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf-73q-Zf84.5f25.5a-f-118.5X-Xf-114.5m-Xf-114.5-Yf0-Zf84.5m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf114.5-Yf0-Zf-84.5m+f-114.5/*-Xf-114.5f5+*f0-Zf84.5*f1-f89.5Z+f-73/*-Yf-73f5+*f0-Zf84.5*f1-f89.5Z_am__f1-r+q-Xf-114.5q-Yf-73f25.5a-f84.5Z-Zf89.5',float('-118.500000'),float('-98.500000'),float('59.000000'),float('-114.500000'),float('-47.500000'),float('110.000000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                9183.29430581931,
                2260.631238226783
            ],
            "name": "s13",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 201
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__31.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "silver.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "silver.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "silver.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aiam__f1-r+qXq-Yf-92.5f17.5a-f25Z-Zf465aam__f1-r+qXq-Yf-92.5f17.5a-f465Z-Zf467m+f0/*-Xf0f60+*f0-Zf465*f1-f525Z+f-92.5/*-Yf-92.5f60+*f0-Zf465*f1-f525Z_am__f1-r+qXq-Yf-92.5f17.5a-f465Z-Zf525nam__f1-r+qXq-Yf-92.5f11a-f447Z-Zf467',float('-17.500000'),float('-110.000000'),float('25.000000'),float('17.500000'),float('-75.000000'),float('467.000000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                7330.686567280139,
                -1769.4995190843777
            ],
            "name": "s14",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 202
        },
        {
            "datums": [
                {
                    "expr": "phototube.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "phototube.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "phototube_bevel_mask.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "phototube.r-3",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f24.5a-f263.5Z-Zf264.5',float('-24.500000'),float('59.666668'),float('263.500000'),float('24.500000'),float('108.666664'),float('264.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3350.331047267875,
                -2276.872281544561
            ],
            "name": "bino_base",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 203
        },
        {
            "datums": [
                {
                    "expr": "phototube.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "phototube.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "phototube.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "phototube.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f60+*f0-Zf262*f1-f322Z+f84.1667/*-Yf84.1667f60+*f0-Zf262*f1-f322Z_am__f1-r+qXq-Yf84.1667f27.5a-f262Z-Zf322',float('-27.500002'),float('56.666664'),float('262.000000'),float('27.500002'),float('111.666664'),float('322.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1681.6147648206897,
                -2547.4007805163915
            ],
            "name": "phototube_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 204
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__204.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__204.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__204.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__204.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f27.5a-f262Z-Zf263.5',float('-27.500000'),float('56.666668'),float('262.000000'),float('27.500000'),float('111.666664'),float('263.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1196.436683345559,
                -2738.1068489181657
            ],
            "name": "phototube_bevel_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 205
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__205.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__204.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf84.1667f27.5a-f262Z-Zf263.5m+f0/*-Xf0f60+*f0-Zf262*f1-f322Z+f84.1667/*-Yf84.1667f60+*f0-Zf262*f1-f322Z_am__f1-r+qXq-Yf84.1667f27.5a-f262Z-Zf322',float('-27.500000'),float('56.666668'),float('262.000000'),float('27.500000'),float('111.666664'),float('263.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -672.2967811789881,
                -2371.907770604454
            ],
            "name": "i17",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 206
        },
        {
            "datums": [
                {
                    "expr": "bino_base.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_base.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_base.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+25",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "42/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f21a-f264.5Z-Zf289.5',float('-21.000000'),float('63.166668'),float('264.500000'),float('21.000000'),float('105.166664'),float('289.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3424.609040511624,
                -1823.1489787500848
            ],
            "name": "bino_joint_lower",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 207
        },
        {
            "datums": [
                {
                    "expr": "bino_joint_lower.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_joint_lower.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_joint_lower.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_joint_lower.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f60+*f0-Zf289.5*f1-f349.5Z+f84.1667/*-Yf84.1667f60+*f0-Zf289.5*f1-f349.5Z_am__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf349.5',float('-21.000002'),float('63.166664'),float('289.500000'),float('21.000002'),float('105.166664'),float('349.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -4033.8868187826793,
                -1403.6461994153876
            ],
            "name": "bino_joint_lower_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 208
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__208.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__208.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__208.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__208.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf291',float('-21.000000'),float('63.166668'),float('289.500000'),float('21.000000'),float('105.166664'),float('291.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3480.1200531420727,
                -1464.5356695043554
            ],
            "name": "bino_joint_bevel_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 209
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__209.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__208.__5,__212.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf291im+f0/*-Xf0f60+*f0-Zf289.5*f1-f349.5Z+f84.1667/*-Yf84.1667f60+*f0-Zf289.5*f1-f349.5Z_am__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf349.5m__-*f2f291Zm+f0/*-Xf0f60+*f0-Zf291*f1-f351Z+f84.1667/*-Yf84.1667f60+*f0-Zf291*f1-f351Z_am__f1-r+qXq-Yf84.1667f21a-f291Z-Zf351',float('-21.000000'),float('63.166668'),float('289.500000'),float('21.000000'),float('105.166664'),float('291.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -2943.978415889216,
                -1224.404797910345
            ],
            "name": "i18",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 210
        },
        {
            "datums": [
                {
                    "expr": "bino_base.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_base.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_joint_bevel_mask.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+32",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_joint_lower.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f21a-f291Z-Zf323',float('-21.000000'),float('63.166668'),float('291.000000'),float('21.000000'),float('105.166664'),float('323.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3982.095199919334,
                -1813.7908973000679
            ],
            "name": "bino_joint_upper",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 211
        },
        {
            "datums": [
                {
                    "expr": "bino_joint_upper.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_joint_upper.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_joint_upper.zmin",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0-60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_joint_upper.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m__-*f2f291Zm+f0/*-Xf0f60+*f0-Zf291*f1-f351Z+f84.1667/*-Yf84.1667f60+*f0-Zf291*f1-f351Z_am__f1-r+qXq-Yf84.1667f21a-f291Z-Zf351',float('-21.000002'),float('63.166664'),float('231.000000'),float('21.000002'),float('105.166664'),float('291.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3577.9333793893784,
                -1041.114208368004
            ],
            "name": "bino_joint_upper_lower_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 212
        },
        {
            "datums": [
                {
                    "expr": "bino_joint_upper.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_joint_upper.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_joint_bevel_mask_upper.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+7",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "44/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f22a-f324.5Z-Zf331.5',float('-22.000000'),float('62.166668'),float('324.500000'),float('22.000000'),float('106.166664'),float('331.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2913.3380380731505,
                -2362.74837480958
            ],
            "name": "bino_cap",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 213
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__215.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__216.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf84.1667f21a-f323Z-Zf324.5m+f0/*-Xf0f60+*f0-Zf323*f1-f383Z+f84.1667/*-Yf84.1667f60+*f0-Zf323*f1-f383Z_am__f1-r+qXq-Yf84.1667f21a-f323Z-Zf383',float('-21.000000'),float('63.166668'),float('323.000000'),float('21.000000'),float('105.166664'),float('324.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -2934.741390239268,
                -434.5112849379914
            ],
            "name": "i19",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 214
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__216.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__216.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__216.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__216.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f21a-f323Z-Zf324.5',float('-21.000000'),float('63.166668'),float('323.000000'),float('21.000000'),float('105.166664'),float('324.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3551.17350709524,
                -673.782411482907
            ],
            "name": "bino_joint_bevel_mask_upper",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 215
        },
        {
            "datums": [
                {
                    "expr": "bino_joint_upper.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_joint_upper.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_joint_upper.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_joint_upper.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f60+*f0-Zf323*f1-f383Z+f84.1667/*-Yf84.1667f60+*f0-Zf323*f1-f383Z_am__f1-r+qXq-Yf84.1667f21a-f323Z-Zf383',float('-21.000002'),float('63.166664'),float('323.000000'),float('21.000002'),float('105.166664'),float('383.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -4211.791369927443,
                -609.2461530271601
            ],
            "name": "bino_joint_upper_upper_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 216
        },
        {
            "datums": [
                {
                    "expr": "bino_cap.x-bino_cap.r-self.r+2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_cap.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_cap.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+29.8",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "34/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3',float('-54.000000'),float('67.166664'),float('324.500000'),float('-20.000000'),float('101.166664'),float('354.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6803.58873059839,
                -136.72944733353143
            ],
            "name": "bino_eyepiece_tube",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 217
        },
        {
            "datums": [
                {
                    "expr": "bino_cap.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_cap.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_cap.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+40",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_cap.r+.25",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5',float('-22.250000'),float('61.916668'),float('324.500000'),float('22.250000'),float('106.416664'),float('364.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6322.546159121376,
                1580.630031694929
            ],
            "name": "bino_cap_cutout",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 218
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__217.__5,__222.__2,__224.__5,__226.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__223.__5,__218.__5,__228.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiam__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8niiam__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3',float('-54.000000'),float('67.166664'),float('324.500000'),float('-20.000000'),float('101.166664'),float('359.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -5778.717310137146,
                -218.89544031495905
            ],
            "name": "d17",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 219
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__221.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__221.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__221.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__221.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8',float('-54.000000'),float('67.166664'),float('354.299988'),float('-20.000000'),float('101.166664'),float('355.799988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6951.262921150662,
                240.16271336811252
            ],
            "name": "bino_eyepiece_tube_bevel_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 220
        },
        {
            "datums": [
                {
                    "expr": "bino_eyepiece_tube.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_eyepiece_tube.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_eyepiece_tube.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_eyepiece_tube.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3',float('-54.000000'),float('67.166664'),float('354.299988'),float('-20.000000'),float('101.166664'),float('414.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -7569.213433798029,
                304.69897182385904
            ],
            "name": "bino_eyepiece_tube_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 221
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__220.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__221.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3',float('-54.000000'),float('67.166664'),float('354.299988'),float('-20.000000'),float('101.166664'),float('355.799988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -6292.163454109851,
                479.43383991302784
            ],
            "name": "i20",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 222
        },
        {
            "datums": [
                {
                    "expr": "bino_eyepiece_tube.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_eyepiece_tube.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_eyepiece_tube.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "eyepiece_sheath.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "23.3/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3',float('-48.650002'),float('72.516670'),float('324.500000'),float('-25.350000'),float('95.816666'),float('359.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6305.592808561561,
                1946.655268554407
            ],
            "name": "eyepiece_hole",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 223
        },
        {
            "datums": [
                {
                    "expr": "bino_eyepiece_tube.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_eyepiece_tube.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_eyepiece_tube.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_eyepiece_tube.zmax+5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "25/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3',float('-49.500000'),float('71.666664'),float('324.500000'),float('-24.500000'),float('96.666664'),float('359.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6764.754222304359,
                -617.4751803478323
            ],
            "name": "eyepiece_sheath",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 224
        },
        {
            "datums": [
                {
                    "expr": "bino_eyepiece_tube.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_eyepiece_tube.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_eyepiece_tube_bevel_mask.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "eyepiece_sheath.r+2.5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8',float('-52.000000'),float('69.166664'),float('355.799988'),float('-22.000000'),float('99.166664'),float('415.799988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -7552.600184162574,
                724.4157117512436
            ],
            "name": "eyepiece_sheath_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 225
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__227.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__225.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8',float('-52.000000'),float('69.166664'),float('355.799988'),float('-22.000000'),float('99.166664'),float('357.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -6275.5502044744,
                899.1505798404128
            ],
            "name": "i21",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 226
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__225.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__225.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__225.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__225.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3',float('-52.000000'),float('69.166664'),float('355.799988'),float('-22.000000'),float('99.166664'),float('357.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6934.649671515207,
                659.8794532954976
            ],
            "name": "eyepiece_sheath_bevel_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 227
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "eyepiece_sheath_bevel_mask.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "eyepiece_sheath.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "eyepiece_sheath.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "eyepiece_sheath.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+1",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3',float('-50.500000'),float('70.666664'),float('356.299988'),float('-23.500000'),float('97.666664'),float('357.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -6349.292777196862,
                1149.5608300512395
            ],
            "name": "eyepiece_sheath_inlay",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 228
        },
        {
            "datums": [
                {
                    "expr": "bino_eyepiece_tube.x-bino_eyepiece_tube.r+self.r-3.75",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_eyepiece_tube.y-bino_eyepiece_tube.r+self.r-3.75",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_eyepiece_tube.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "11",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5',float('-57.750000'),float('63.416668'),float('322.500000'),float('-35.750000'),float('85.416664'),float('324.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -4613.573051923235,
                88.84732604355975
            ],
            "name": "bino_block_cap_round",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 229
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_eyepiece_tube.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__229.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5',float('-57.750000'),float('63.416668'),float('322.500000'),float('-35.750000'),float('104.916733'),float('324.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -4053.7924263572586,
                443.9313230700591
            ],
            "name": "bino_round_mirror",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 230
        },
        {
            "datums": [
                {
                    "expr": "bino_block_cap_round.x-bino_block_cap_round.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_block_cap_round.y",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_block_cap_round.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_eyepiece_tube.x",
                    "name": "xmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_round_mirror.y0-(bino_block_cap_round.y-bino_round_mirror.y0)",
                    "name": "ymax",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "bino_block_cap_round.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5',float('-57.750000'),float('74.416664'),float('322.500000'),float('-37.000000'),float('93.916664'),float('324.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -4767.361419588757,
                620.5711917285439
            ],
            "name": "bino_block_cap_round_connector",
            "script": [
                "import fab",
                "",
                "title('Cube (corner)')",
                "",
                "input('xmin', float)",
                "input('ymin', float)",
                "input('zmin', float)",
                "input('xmax', float)",
                "input('ymax', float)",
                "input('zmax', float)",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(xmin, ymin, zmin)",
                "sb.ui.point(xmax, ymax, zmax)",
                ""
            ],
            "uid": 231
        },
        {
            "datums": [
                {
                    "expr": "bino_block_cap_round.x",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_block_cap_round.y-bino_block_cap_round.r",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__231.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_joint_upper.x",
                    "name": "xmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_round_mirror.y0-(bino_block_cap_round.y-bino_round_mirror.y0)+bino_block_cap_round.r",
                    "name": "ymax",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__231.__5]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5',float('-46.750000'),float('63.416668'),float('322.500000'),float('0.000000'),float('104.916664'),float('324.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -4036.531546104531,
                1085.768890035604
            ],
            "name": "bino_block_cap_face",
            "script": [
                "import fab",
                "",
                "title('Cube (corner)')",
                "",
                "input('xmin', float)",
                "input('ymin', float)",
                "input('zmin', float)",
                "input('xmax', float)",
                "input('ymax', float)",
                "input('zmax', float)",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(xmin, ymin, zmin)",
                "sb.ui.point(xmax, ymax, zmax)",
                ""
            ],
            "uid": 232
        },
        {
            "datums": [
                {
                    "expr": "bino_block_cap_face.xmin",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_block_cap_face.ymin-0.25",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_base.zmax+2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_block_cap_face.xmax",
                    "name": "xmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_block_cap_face.ymax+0.25",
                    "name": "ymax",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "bino_block_cap_face.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5',float('-46.750000'),float('63.166668'),float('266.500000'),float('0.000000'),float('105.166664'),float('322.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -3500.1802210732185,
                930.3692049234696
            ],
            "name": "bino_block",
            "script": [
                "import fab",
                "",
                "title('Cube (corner)')",
                "",
                "input('xmin', float)",
                "input('ymin', float)",
                "input('zmin', float)",
                "input('xmax', float)",
                "input('ymax', float)",
                "input('zmax', float)",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(xmin, ymin, zmin)",
                "sb.ui.point(xmax, ymax, zmax)",
                ""
            ],
            "uid": 233
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(bino_block.zmax+bino_block.zmin)/2",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__230.__4,__231.__6,__232.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5',float('-57.750000'),float('63.416668'),float('264.500000'),float('0.000000'),float('104.916733'),float('324.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -3503.561829248936,
                525.6653396785487
            ],
            "name": "m8",
            "script": [
                "import fab",
                "",
                "title('Mirror (Z)')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('z0', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_z(shape, z0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + 1, _y - 1, z0),",
                "    (_x + 1, _y + 1, z0),",
                "    (_x - 1, _y + 1, z0),",
                "    (_x - 1, _y - 1, z0)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, _y, z0, color=sb.color.teal)",
                ""
            ],
            "uid": 234
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_round_mirror.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__252.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f84.1667Y_aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5',float('-58.250000'),float('62.916668'),float('266.500000'),float('-46.000000'),float('105.416733'),float('322.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -3695.7882315057786,
                2933.809633505415
            ],
            "name": "bino_cover_mirror",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 235
        },
        {
            "datums": [
                {
                    "expr": "bino_block_cap_round.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_block_cap_round.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_block.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_block.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "11.5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5',float('-58.250000'),float('62.916668'),float('266.500000'),float('-35.250000'),float('85.916664'),float('322.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -5549.871771282732,
                2634.8872386441185
            ],
            "name": "bino_cover_round",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 236
        },
        {
            "datums": [
                {
                    "expr": "bino_cover_round.x-bino_cover_round.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_cover_round.y",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__236.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_cover_round.x",
                    "name": "xmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_eyepiece_tube.y",
                    "name": "ymax",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__236.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5',float('-58.250000'),float('74.416664'),float('266.500000'),float('-46.750000'),float('84.166664'),float('322.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -5043.757963019874,
                3023.5359605235803
            ],
            "name": "bino_cover_flat",
            "script": [
                "import fab",
                "",
                "title('Cube (corner)')",
                "",
                "input('xmin', float)",
                "input('ymin', float)",
                "input('zmin', float)",
                "input('xmax', float)",
                "input('ymax', float)",
                "input('zmax', float)",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(xmin, ymin, zmin)",
                "sb.ui.point(xmax, ymax, zmax)",
                ""
            ],
            "uid": 237
        },
        {
            "datums": [
                {
                    "expr": "phototube.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "phototube.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-20",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__242.__2,__219.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0iaiim__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5nim-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5aiiiam__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8niiam__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3',float('-61.449699'),float('64.433121'),float('264.500000'),float('7.182407'),float('123.651871'),float('359.299988'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2521.42771713346,
                -215.29743357793188
            ],
            "name": "bino_ipd",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 238
        },
        {
            "datums": [
                {
                    "expr": "bino_ipd.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_ipd.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_ipd.a",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__235.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0im_-*f2f84.1667Y_aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5',float('-62.005051'),float('79.931114'),float('266.500000'),float('-35.957939'),float('124.057869'),float('322.500000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3238.3316856088895,
                2922.9887222777625
            ],
            "name": "r5",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 239
        },
        {
            "datums": [
                {
                    "expr": "phototube.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_eyepiece_tube.y+bino_eyepiece_tube.r",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(bino_block.zmax+bino_block.zmin)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "25",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "40",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "(bino_block.zmax-bino_block.zmin)+6",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5',float('-12.500000'),float('81.166664'),float('263.500000'),float('12.500000'),float('121.166664'),float('325.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -3952.778520027625,
                1727.210506464208
            ],
            "name": "bino_block_under_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 240
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__240.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__240.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__240.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5',float('-22.980740'),float('78.185783'),float('263.500000'),float('22.981216'),float('124.147736'),float('325.500000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3319.5346174838987,
                1778.2785631209604
            ],
            "name": "r28",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 241
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__234.__4,__233.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__241.__5,__244.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiim__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5nim-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5',float('-57.750000'),float('63.166668'),float('264.500000'),float('0.000000'),float('105.166664'),float('324.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -2742.468160695167,
                754.1544441866786
            ],
            "name": "d18",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 242
        },
        {
            "datums": [
                {
                    "expr": "bino_block.xmax",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_block.ymin",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(bino_block.zmax+bino_block.zmin)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "18",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "25",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "(bino_block.zmax-bino_block.zmin)+6",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5',float('-9.000000'),float('50.666668'),float('263.500000'),float('9.000000'),float('75.666664'),float('325.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -3965.8506959576016,
                2275.5021806831796
            ],
            "name": "bino_block_over_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 243
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__243.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__243.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__243.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5',float('-15.202823'),float('47.963875'),float('263.500000'),float('15.202777'),float('78.369476'),float('325.500000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3332.6067934138755,
                2326.570237339932
            ],
            "name": "r29",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 244
        },
        {
            "datums": [
                {
                    "expr": "phototube.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__238.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0iaiim__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5nim-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5aiiiam__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8niiam__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3',float('-7.182407'),float('64.433121'),float('264.500000'),float('61.449699'),float('123.651871'),float('359.299988'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1892.1643063656265,
                -49.657771397381396
            ],
            "name": "r30",
            "script": [
                "import fab",
                "",
                "title('Reflect (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 245
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__245.__3]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__248.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('am-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0iaiim__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5nim-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5aiiiam__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8niiam__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3nam__f1-r+qXq-Yf84.1667f22a-f289.5Z-Zf324.5',float('-61.449699'),float('64.433121'),float('264.500000'),float('7.182407'),float('123.651871'),float('359.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1441.0262852310984,
                -147.16220894998014
            ],
            "name": "d19",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 246
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__245.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__249.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('am-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0iaiim__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5nim-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5aiiiam__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8niiam__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3nam__f1-r+qXq-Yf84.1667f22a-f264.5Z-Zf289.5',float('-7.182407'),float('64.433121'),float('264.500000'),float('61.449699'),float('123.651871'),float('359.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1445.603770646981,
                143.98632760586818
            ],
            "name": "d20",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 247
        },
        {
            "datums": [
                {
                    "expr": "bino_joint_upper.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_joint_upper.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_joint_bevel_mask.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_joint_bevel_mask_upper.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_joint_upper.r+1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f22a-f289.5Z-Zf324.5',float('-22.000000'),float('62.166668'),float('289.500000'),float('22.000000'),float('106.166664'),float('324.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2035.4964251287838,
                -435.7299234613954
            ],
            "name": "bino_upper_joint_relief",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 248
        },
        {
            "datums": [
                {
                    "expr": "bino_joint_lower.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_joint_lower.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "bino_joint_lower.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_joint_bevel_mask.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "bino_upper_joint_relief.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf84.1667f22a-f264.5Z-Zf289.5',float('-22.000000'),float('62.166668'),float('264.500000'),float('22.000000'),float('106.166664'),float('289.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2044.4281299051122,
                203.30237106580495
            ],
            "name": "bino_lower_joint_relief",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 249
        },
        {
            "datums": [
                {
                    "expr": "phototube.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__239.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0im_-*f2f84.1667Y_aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0im_-*f2f84.1667Y_aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5',float('-62.005051'),float('79.931114'),float('266.500000'),float('62.005051'),float('124.057869'),float('322.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -2871.198349609992,
                2920.9356250242936
            ],
            "name": "m9",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 250
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "phototube_angle.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "phototube_angle.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "phototube_angle.a",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__246.__2,__247.__2,__256.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf152m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-84.1667-Zf-152iiam-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0iaiim__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5nim-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5aiiiam__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8niiam__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3nam__f1-r+qXq-Yf84.1667f22a-f289.5Z-Zf324.5am-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0iaiim__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5nim-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5aiiiam__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8niiam__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3nam__f1-r+qXq-Yf84.1667f22a-f264.5Z-Zf289.5iiiiam__f1-r+qXq-Yf84.1667f22a-f324.5Z-Zf331.5am__f1-r+qXq-Yf84.1667f24.5a-f263.5Z-Zf264.5am__f1-r+qXq-Yf84.1667f21a-f264.5Z-Zf289.5am__f1-r+qXq-Yf84.1667f21a-f291Z-Zf323iaam__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf291im+f0/*-Xf0f60+*f0-Zf289.5*f1-f349.5Z+f84.1667/*-Yf84.1667f60+*f0-Zf289.5*f1-f349.5Z_am__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf349.5m__-*f2f291Zm+f0/*-Xf0f60+*f0-Zf291*f1-f351Z+f84.1667/*-Yf84.1667f60+*f0-Zf291*f1-f351Z_am__f1-r+qXq-Yf84.1667f21a-f291Z-Zf351aam__f1-r+qXq-Yf84.1667f21a-f323Z-Zf324.5m+f0/*-Xf0f60+*f0-Zf323*f1-f383Z+f84.1667/*-Yf84.1667f60+*f0-Zf323*f1-f383Z_am__f1-r+qXq-Yf84.1667f21a-f323Z-Zf383',float('-61.449699'),float('145.684982'),float('202.922195'),float('61.449699'),float('258.670227'),float('315.907410'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -974.0013357347289,
                -148.74123991531025
            ],
            "name": "r31",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 251
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "phototube_angle.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "phototube_angle.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "phototube_angle.a",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__250.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf152m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-84.1667-Zf-152im-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0im_-*f2f84.1667Y_aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0im_-*f2f84.1667Y_aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5',float('-62.005051'),float('162.135437'),float('204.756439'),float('62.005051'),float('232.935776'),float('275.556763'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2508.5721620746463,
                2921.3714222963467
            ],
            "name": "r33",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 253
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__253.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "orange.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "orange.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "orange.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf152m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-84.1667-Zf-152im-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0im_-*f2f84.1667Y_aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0im_-*f2f84.1667Y_aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5',float('-62.005051'),float('162.135437'),float('204.756439'),float('62.005051'),float('232.935776'),float('275.556763'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -2140.226620453147,
                2926.3647098642764
            ],
            "name": "s15",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 254
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__251.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "black.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "black.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "black.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf152m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-84.1667-Zf-152iiam-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0iaiim__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5nim-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5aiiiam__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8niiam__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3nam__f1-r+qXq-Yf84.1667f22a-f289.5Z-Zf324.5am-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0iaiim__-*f2f294.5Ziiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5iiim_-*f2f84.1667Y_am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1-r+q-Xf-46.75q-Yf74.4167f11a-f322.5Z-Zf324.5am__f1aa-f-57.75X-Xf-37a-f74.4167Y-Yf93.9167a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.4167Y-Yf104.917a-f322.5Z-Zf324.5am__f1aa-f-46.75X-Xf0a-f63.1667Y-Yf105.167a-f266.5Z-Zf322.5nim-Xf0-Yf101.167-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-101.167-Zf0am__f1aa-f-12.5X-Xf12.5a-f81.1667Y-Yf121.167a-f263.5Z-Zf325.5m-Xf0-Yf63.1667-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-63.1667-Zf0am__f1aa-f-9X-Xf9a-f50.6667Y-Yf75.6667a-f263.5Z-Zf325.5aiiiam__f1-r+q-Xf-37q-Yf84.1667f17a-f324.5Z-Zf354.3aam__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf355.8m+f-37/*-Xf-37f60+*f0-Zf354.3*f1-f414.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf354.3*f1-f414.3Z_am__f1-r+q-Xf-37q-Yf84.1667f17a-f354.3Z-Zf414.3am__f1-r+q-Xf-37q-Yf84.1667f12.5a-f324.5Z-Zf359.3aam__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf357.3m+f-37/*-Xf-37f60+*f0-Zf355.8*f1-f415.8Z+f84.1667/*-Yf84.1667f60+*f0-Zf355.8*f1-f415.8Z_am__f1-r+q-Xf-37q-Yf84.1667f15a-f355.8Z-Zf415.8niiam__f1-r+q-Xf-37q-Yf84.1667f11.65a-f324.5Z-Zf359.3am__f1-r+qXq-Yf84.1667f22.25a-f324.5Z-Zf364.5aam__f1-r+q-Xf-37q-Yf84.1667f13.5a-f356.3Z-Zf357.3nam__f1-r+q-Xf-37q-Yf84.1667f12.5a-f356.3Z-Zf357.3nam__f1-r+qXq-Yf84.1667f22a-f264.5Z-Zf289.5iiiiam__f1-r+qXq-Yf84.1667f22a-f324.5Z-Zf331.5am__f1-r+qXq-Yf84.1667f24.5a-f263.5Z-Zf264.5am__f1-r+qXq-Yf84.1667f21a-f264.5Z-Zf289.5am__f1-r+qXq-Yf84.1667f21a-f291Z-Zf323iaam__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf291im+f0/*-Xf0f60+*f0-Zf289.5*f1-f349.5Z+f84.1667/*-Yf84.1667f60+*f0-Zf289.5*f1-f349.5Z_am__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf349.5m__-*f2f291Zm+f0/*-Xf0f60+*f0-Zf291*f1-f351Z+f84.1667/*-Yf84.1667f60+*f0-Zf291*f1-f351Z_am__f1-r+qXq-Yf84.1667f21a-f291Z-Zf351aam__f1-r+qXq-Yf84.1667f21a-f323Z-Zf324.5m+f0/*-Xf0f60+*f0-Zf323*f1-f383Z+f84.1667/*-Yf84.1667f60+*f0-Zf323*f1-f383Z_am__f1-r+qXq-Yf84.1667f21a-f323Z-Zf383',float('-61.449699'),float('145.684982'),float('202.922195'),float('61.449699'),float('258.670227'),float('315.907410'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -517.437269037951,
                -90.06587276769795
            ],
            "name": "s16",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 255
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__213.__5,__203.__5,__207.__5,__211.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__210.__2,__214.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiam__f1-r+qXq-Yf84.1667f22a-f324.5Z-Zf331.5am__f1-r+qXq-Yf84.1667f24.5a-f263.5Z-Zf264.5am__f1-r+qXq-Yf84.1667f21a-f264.5Z-Zf289.5am__f1-r+qXq-Yf84.1667f21a-f291Z-Zf323iaam__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf291im+f0/*-Xf0f60+*f0-Zf289.5*f1-f349.5Z+f84.1667/*-Yf84.1667f60+*f0-Zf289.5*f1-f349.5Z_am__f1-r+qXq-Yf84.1667f21a-f289.5Z-Zf349.5m__-*f2f291Zm+f0/*-Xf0f60+*f0-Zf291*f1-f351Z+f84.1667/*-Yf84.1667f60+*f0-Zf291*f1-f351Z_am__f1-r+qXq-Yf84.1667f21a-f291Z-Zf351aam__f1-r+qXq-Yf84.1667f21a-f323Z-Zf324.5m+f0/*-Xf0f60+*f0-Zf323*f1-f383Z+f84.1667/*-Yf84.1667f60+*f0-Zf323*f1-f383Z_am__f1-r+qXq-Yf84.1667f21a-f323Z-Zf383',float('-24.500000'),float('59.666668'),float('263.500000'),float('24.500000'),float('108.666664'),float('331.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1944.5693460662762,
                -1464.110347409047
            ],
            "name": "u1",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 256
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__237.__6,__236.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__258.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiam__f1aa-f-58.25X-Xf-46.75a-f74.4167Y-Yf84.1667a-f266.5Z-Zf322.5am__f1-r+q-Xf-46.75q-Yf74.4167f11.5a-f266.5Z-Zf322.5am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5',float('-58.250000'),float('62.916668'),float('266.500000'),float('-46.000000'),float('84.166664'),float('322.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -4036.129647592018,
                2942.137490795552
            ],
            "name": "i22",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 252
        },
        {
            "datums": [
                {
                    "expr": "bino_cover_round.x-bino_cover_round.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_cover_round.y-bino_cover_round.r",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__237.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_cover_round.x+bino_cover_round.r/2-5",
                    "name": "xmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__237.__4]",
                    "name": "ymax",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__237.__5]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-58.25X-Xf-46a-f62.9167Y-Yf84.1667a-f266.5Z-Zf322.5',float('-58.250000'),float('62.916668'),float('266.500000'),float('-46.000000'),float('84.166664'),float('322.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -4547.670221305159,
                3386.6855471431018
            ],
            "name": "bino_cover_mask",
            "script": [
                "import fab",
                "",
                "title('Cube (corner)')",
                "",
                "input('xmin', float)",
                "input('ymin', float)",
                "input('zmin', float)",
                "input('xmax', float)",
                "input('ymax', float)",
                "input('zmax', float)",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(xmin, ymin, zmin)",
                "sb.ui.point(xmax, ymax, zmax)",
                ""
            ],
            "uid": 258
        },
        {
            "datums": [
                {
                    "expr": "eyepiece_sheath.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "eyepiece_sheath.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-30",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "eyepiece_sheath.zmax+3",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "eyepiece_hole.r-0.1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f11.55a-f332.3Z-Zf362.3',float('-48.549999'),float('72.616669'),float('332.299988'),float('-25.450001'),float('95.716667'),float('362.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -7557.066924665412,
                -5034.498633656258
            ],
            "name": "eyepiece_stem",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 257
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__257.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__257.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__257.__3]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+36",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "28/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf398.3',float('-51.000000'),float('70.166664'),float('362.299988'),float('-23.000000'),float('98.166664'),float('398.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -7083.319005451356,
                -4639.924425453548
            ],
            "name": "eyepiece_main",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 259
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__259.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__259.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-2.5",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__264.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "eyepiece_main.r-6.75+2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8',float('-46.250000'),float('74.916664'),float('397.299988'),float('-27.750000'),float('93.416664'),float('399.799988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6676.032744102418,
                -4152.212575073925
            ],
            "name": "lens_recess",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 260
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__259.__5,__262.__2,__267.__2,__257.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__266.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiam__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf398.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3am__f1-r+q-Xf-37q-Yf84.1667f11.55a-f332.3Z-Zf362.3naam__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8',float('-51.000000'),float('70.166664'),float('332.299988'),float('-23.000000'),float('98.166664'),float('399.799988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -5323.864233576689,
                -4396.647224664328
            ],
            "name": "d21",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 261
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__264.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__263.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3',float('-51.000000'),float('70.166664'),float('398.299988'),float('-23.000000'),float('98.166664'),float('399.799988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -6106.396666020662,
                -5300.513502917274
            ],
            "name": "i23",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 262
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__257.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__257.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__259.__3]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__259.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3',float('-51.000000'),float('70.166664'),float('398.299988'),float('-23.000000'),float('98.166664'),float('458.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -7383.4466457088365,
                -5475.2483710064425
            ],
            "name": "eyepiece_upper_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 263
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__263.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__263.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__263.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+1.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__263.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8',float('-51.000000'),float('70.166664'),float('398.299988'),float('-23.000000'),float('98.166664'),float('399.799988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6722.828782876635,
                -5539.78462946219
            ],
            "name": "eyepiece_upper_bevel_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 264
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__260.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__260.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__260.__3]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0-10",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lens_recess.r-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8',float('-45.250000'),float('75.916664'),float('389.799988'),float('-28.750000'),float('92.416664'),float('399.799988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6280.0146981143425,
                -3792.397965771104
            ],
            "name": "eyepiece_inner_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 265
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__260.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__265.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8',float('-45.250000'),float('75.916664'),float('397.299988'),float('-28.750000'),float('92.416664'),float('399.799988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -5706.074443081614,
                -4036.2766855275418
            ],
            "name": "i24",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 266
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__268.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__269.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3',float('-51.000000'),float('70.166664'),float('360.799988'),float('-23.000000'),float('98.166664'),float('362.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -6116.3351716626075,
                -5699.252868577138
            ],
            "name": "i25",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 267
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__269.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__269.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-1.5",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__269.__2]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__269.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3',float('-51.000000'),float('70.166664'),float('360.799988'),float('-23.000000'),float('98.166664'),float('362.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -6732.76728851858,
                -5938.523995122056
            ],
            "name": "eyepiece_lower_bevel_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 268
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__257.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__257.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__259.__2]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0-60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__259.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3',float('-51.000000'),float('70.166664'),float('302.299988'),float('-23.000000'),float('98.166664'),float('362.299988'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -7393.385151350782,
                -5873.987736666308
            ],
            "name": "eyepiece_lower_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 269
        },
        {
            "datums": [
                {
                    "expr": "phototube.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__272.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0aiiiam__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf398.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3am__f1-r+q-Xf-37q-Yf84.1667f11.55a-f332.3Z-Zf362.3naam__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0aiiiam__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf398.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3am__f1-r+q-Xf-37q-Yf84.1667f11.55a-f332.3Z-Zf362.3naam__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8',float('-52.712635'),float('78.877426'),float('332.299988'),float('52.712635'),float('114.765388'),float('399.799988'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -4642.342923522954,
                -4397.500212395027
            ],
            "name": "m10",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 270
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "phototube_angle.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "phototube_angle.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "phototube_angle.a",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__270.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf152m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-84.1667-Zf-152im-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0aiiiam__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf398.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3am__f1-r+q-Xf-37q-Yf84.1667f11.55a-f332.3Z-Zf362.3naam__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0aiiiam__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf398.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3am__f1-r+q-Xf-37q-Yf84.1667f11.55a-f332.3Z-Zf362.3naam__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8',float('-52.712635'),float('207.917999'),float('257.854858'),float('52.712635'),float('281.024353'),float('330.961182'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -4274.185516829888,
                -4522.031745801065
            ],
            "name": "r32",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 271
        },
        {
            "datums": [
                {
                    "expr": "bino_ipd.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "bino_ipd.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "bino_ipd.a",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__261.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0aiiiam__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf398.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3am__f1-r+q-Xf-37q-Yf84.1667f11.55a-f332.3Z-Zf362.3naam__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8',float('-52.712635'),float('78.877426'),float('332.299988'),float('-16.824671'),float('114.765388'),float('399.799988'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -4981.656704997957,
                -4429.79508720523
            ],
            "name": "r34",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 272
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__271.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "black.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "black.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "black.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf84.1667-Zf152m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-84.1667-Zf-152im-*f2f0X__m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0aiiiam__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf398.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3am__f1-r+q-Xf-37q-Yf84.1667f11.55a-f332.3Z-Zf362.3naam__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8m-Xf0-Yf84.1667-Zf0m+*f0.939693X*f-0.34202Y+*f0.34202X*f0.939693Y_m-Xf-0-Yf-84.1667-Zf0aiiiam__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf398.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf399.8m+f-37/*-Xf-37f60+*f0-Zf398.3*f1-f458.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf398.3*f1-f458.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f398.3Z-Zf458.3aam__f1-r+q-Xf-37q-Yf84.1667f14a-f360.8Z-Zf362.3m__-*f2f362.3Zm+f-37/*-Xf-37f60+*f0-Zf362.3*f1-f422.3Z+f84.1667/*-Yf84.1667f60+*f0-Zf362.3*f1-f422.3Z_am__f1-r+q-Xf-37q-Yf84.1667f14a-f362.3Z-Zf422.3am__f1-r+q-Xf-37q-Yf84.1667f11.55a-f332.3Z-Zf362.3naam__f1-r+q-Xf-37q-Yf84.1667f9.25a-f397.3Z-Zf399.8m__-*f2f399.8Zm+f-37/*-Xf-37f10+*f0-Zf399.8*f1-f409.8Z+f84.1667/*-Yf84.1667f10+*f0-Zf399.8*f1-f409.8Z_am__f1-r+q-Xf-37q-Yf84.1667f8.25a-f399.8Z-Zf409.8',float('-52.712635'),float('207.917999'),float('257.854858'),float('52.712635'),float('281.024353'),float('330.961182'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -3875.850007499639,
                -4459.190674330265
            ],
            "name": "s17",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 273
        },
        {
            "datums": [
                {
                    "expr": "table.x-table.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table.y-table.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "table.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "3",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__274.__3]",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "table.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269',float('-106.500000'),float('-126.500000'),float('257.000000'),float('-103.500000'),float('-123.500000'),float('269.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -95.62107809541158,
                -4921.724540856242
            ],
            "name": "table_corner_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 274
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__274.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__274.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__274.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269',float('-107.121323'),float('-127.121323'),float('257.000000'),float('-102.878677'),float('-122.878677'),float('269.000000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                391.6500056571349,
                -4919.152994557441
            ],
            "name": "r35",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 275
        },
        {
            "datums": [
                {
                    "expr": "table.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__275.__5,__280.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5',float('-107.121323'),float('-127.121323'),float('254.878693'),float('107.121323'),float('145.000000'),float('271.121307'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1513.2753777086243,
                -4912.067924051059
            ],
            "name": "m11",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 276
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__276.__4,__283.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f10Y_iim-*f2f0X__im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im__-*f2f263Zm-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5m-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5iim-*f2f0X__im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im-Xf-105-Yf-125-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf105-Yf125-Zf0am__f1aa-f-106.5X-Xf-103.5a-f-126.5Y-Yf-123.5a-f257Z-Zf269im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5im__-*f2f263Zm-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5m-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5',float('-107.121323'),float('-127.121323'),float('254.878693'),float('107.121323'),float('147.121323'),float('271.121307'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2240.990310505198,
                -4844.37136320827
            ],
            "name": "m12",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 277
        },
        {
            "datums": [
                {
                    "expr": "table.x+table.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "table.z+table.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__274.__4]",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "table.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__274.__4]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5',float('103.500000'),float('-125.000000'),float('267.500000'),float('106.500000'),float('145.000000'),float('270.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                382.96228775446707,
                -4567.802459783933
            ],
            "name": "table_side_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 278
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__278.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__278.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__275.__3]",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__278.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5',float('102.878677'),float('-125.000000'),float('266.878693'),float('107.121323'),float('145.000000'),float('271.121307'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                831.9744884942293,
                -4564.697304177328
            ],
            "name": "r36",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 279
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "table.z",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__279.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im__-*f2f263Zm-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5m-Xf105-Yf0-Zf269m+*f0.707107X*f0.707107ZY+*f-0.707107X*f0.707107Zm-Xf-105-Yf0-Zf-269am__f1aa-f103.5X-Xf106.5a-f-125Y-Yf145a-f267.5Z-Zf270.5',float('102.878677'),float('-125.000000'),float('254.878693'),float('107.121323'),float('145.000000'),float('271.121307'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1191.8472365744847,
                -4555.846673898494
            ],
            "name": "m13",
            "script": [
                "import fab",
                "",
                "title('Mirror (Z)')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('z0', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_z(shape, z0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + 1, _y - 1, z0),",
                "    (_x + 1, _y + 1, z0),",
                "    (_x - 1, _y + 1, z0),",
                "    (_x - 1, _y - 1, z0)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, _y, z0, color=sb.color.teal)",
                ""
            ],
            "uid": 280
        },
        {
            "datums": [
                {
                    "expr": "table.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table.y+table.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "table.z+table.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "table.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__278.__5]",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__278.__5]",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5',float('-105.000000'),float('143.500000'),float('267.500000'),float('105.000000'),float('146.500000'),float('270.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1038.7681580214512,
                -4216.34432376516
            ],
            "name": "table_front_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 281
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__281.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__281.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__279.__3]",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__281.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5',float('-105.000000'),float('142.878677'),float('266.878693'),float('105.000000'),float('147.121323'),float('271.121307'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1520.8342011062596,
                -4329.654783576371
            ],
            "name": "r37",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (X)')",
                "",
                "input('_x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_x(shape, a, y, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(_x, y + math.cos(rad), z + math.sin(rad)),",
                "                  (_x, y, z),",
                "                  (_x, y + 1, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (_x, y + math.cos(math.radians(a_)) * 0.3,",
                "             z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, y - this.y))",
                "sb.ui.point(_x, y + math.cos(rad), z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 282
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__280.__2]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__282.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im__-*f2f263Zm-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5m-Xf0-Yf145-Zf269m_+*f0.707107Y*f0.707107Z+*f-0.707107Y*f0.707107Zm-Xf0-Yf-145-Zf-269am__f1aa-f-105X-Xf105a-f143.5Y-Yf146.5a-f267.5Z-Zf270.5',float('-105.000000'),float('142.878677'),float('254.878693'),float('105.000000'),float('147.121323'),float('271.121307'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1853.885877569619,
                -4560.979378944227
            ],
            "name": "m14",
            "script": [
                "import fab",
                "",
                "title('Mirror (Z)')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('z0', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_z(shape, z0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + 1, _y - 1, z0),",
                "    (_x + 1, _y + 1, z0),",
                "    (_x - 1, _y + 1, z0),",
                "    (_x - 1, _y - 1, z0)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, _y, z0, color=sb.color.teal)",
                ""
            ],
            "uid": 283
        },
        {
            "datums": [
                {
                    "expr": "elevator.x-elevator.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "elevator.y-elevator.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "elevator.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "3",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "elevator.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184',float('-34.000000'),float('-42.000000'),float('54.000000'),float('-31.000000'),float('-39.000000'),float('184.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3788.6898943541164,
                945.3900639656678
            ],
            "name": "elevator_bevel",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 284
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__284.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__284.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__284.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184',float('-34.621323'),float('-42.621323'),float('54.000000'),float('-30.378679'),float('-38.378677'),float('184.000000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4252.116396298071,
                992.4456780092078
            ],
            "name": "r38",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 285
        },
        {
            "datums": [
                {
                    "expr": "elevator.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__285.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184',float('-34.621323'),float('-42.621323'),float('54.000000'),float('34.621323'),float('-38.378677'),float('184.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                4637.116874836126,
                1033.7975812595914
            ],
            "name": "m15",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 286
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "elevator.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__286.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f19.5Y_im-*f2f0X__m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184im-*f2f0X__m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184m-Xf-32.5-Yf-40.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf32.5-Yf40.5-Zf0am__f1aa-f-34X-Xf-31a-f-42Y-Yf-39a-f54Z-Zf184',float('-34.621323'),float('-42.621323'),float('54.000000'),float('34.621323'),float('81.621323'),float('184.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                4651.376151819017,
                1299.0201331413625
            ],
            "name": "m16",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 287
        },
        {
            "datums": [
                {
                    "expr": "elevator.x-elevator.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "elevator.y+25",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "elevator.z+32",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "16",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "16",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-33.5X-Xf-31.5a-f36.5Y-Yf52.5a-f143Z-Zf159',float('-33.500000'),float('36.500000'),float('143.000000'),float('-31.500000'),float('52.500000'),float('159.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3854.05172266964,
                1883.2775495264668
            ],
            "name": "zeiss_label_border",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 288
        },
        {
            "datums": [
                {
                    "expr": "zeiss_label_border.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "zeiss_label_border.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "zeiss_label_border.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "zeiss_label_border.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "zeiss_label_border.height-2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "zeiss_label_border.depth-2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-33.5X-Xf-31.5a-f37.5Y-Yf51.5a-f144Z-Zf158',float('-33.500000'),float('37.500000'),float('144.000000'),float('-31.500000'),float('51.500000'),float('158.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3851.318295474878,
                2339.652207754702
            ],
            "name": "zeiss_label_cutout",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 289
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__288.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__289.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-33.5X-Xf-31.5a-f36.5Y-Yf52.5a-f143Z-Zf159nam__f1aa-f-33.5X-Xf-31.5a-f37.5Y-Yf51.5a-f144Z-Zf158',float('-33.500000'),float('36.500000'),float('143.000000'),float('-31.500000'),float('52.500000'),float('159.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4342.195780923919,
                2337.286533126032
            ],
            "name": "d22",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 290
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__292.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__293.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-33.5X-Xf-31.5a-f-6Y-Yf34a-f143Z-Zf159nam__f1aa-f-33.5X-Xf-31.5a-f-5Y-Yf33a-f144Z-Zf158',float('-33.500000'),float('-6.000000'),float('143.000000'),float('-31.500000'),float('34.000000'),float('159.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4313.318890598382,
                3245.342699645923
            ],
            "name": "d23",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 291
        },
        {
            "datums": [
                {
                    "expr": "zeiss_label_border.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "zeiss_label_border.y-zeiss_label_border.height/2-self.height/2-2.5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "zeiss_label_border.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "zeiss_label_border.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "40",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "zeiss_label_border.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-33.5X-Xf-31.5a-f-6Y-Yf34a-f143Z-Zf159',float('-33.500000'),float('-6.000000'),float('143.000000'),float('-31.500000'),float('34.000000'),float('159.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3825.1748323441034,
                2791.333716046357
            ],
            "name": "id02_label_border",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 292
        },
        {
            "datums": [
                {
                    "expr": "id02_label_border.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "id02_label_border.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "id02_label_border.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "id02_label_border.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "id02_label_border.height-2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "id02_label_border.depth-2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-33.5X-Xf-31.5a-f-5Y-Yf33a-f144Z-Zf158',float('-33.500000'),float('-5.000000'),float('144.000000'),float('-31.500000'),float('33.000000'),float('158.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3822.4414051493413,
                3247.7083742745926
            ],
            "name": "id02_label_cutout",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 293
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__290.__2,__291.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "black.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "black.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "black.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iaam__f1aa-f-33.5X-Xf-31.5a-f36.5Y-Yf52.5a-f143Z-Zf159nam__f1aa-f-33.5X-Xf-31.5a-f37.5Y-Yf51.5a-f144Z-Zf158aam__f1aa-f-33.5X-Xf-31.5a-f-6Y-Yf34a-f143Z-Zf159nam__f1aa-f-33.5X-Xf-31.5a-f-5Y-Yf33a-f144Z-Zf158',float('-33.500000'),float('-6.000000'),float('143.000000'),float('-31.500000'),float('52.500000'),float('159.000000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                4498.180803776093,
                2766.6964873692905
            ],
            "name": "s18",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 294
        },
        {
            "datums": [
                {
                    "expr": "west_tower_rail.x-west_tower.width/2+(west_tower.width-west_tower_rail.width)/4",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "west_tower_rail.y-self.r-2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "table.z+table.depth/2-1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+4",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "7.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-20q-Yf-56.25f3.75a-f268Z-Zf272',float('-23.750000'),float('-60.000000'),float('268.000000'),float('-16.250000'),float('-52.500000'),float('272.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2454.9441151133165,
                -3188.964046668491
            ],
            "name": "table_front_screwhole",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 295
        },
        {
            "datums": [
                {
                    "expr": "table.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__295.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__am__f1-r+q-Xf-20q-Yf-56.25f3.75a-f268Z-Zf272am__f1-r+q-Xf-20q-Yf-56.25f3.75a-f268Z-Zf272',float('-23.750000'),float('-60.000000'),float('268.000000'),float('23.750000'),float('-52.500000'),float('272.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2951.147713489114,
                -3134.7252338381068
            ],
            "name": "m17",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 296
        },
        {
            "datums": [
                {
                    "expr": "table.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table.y-table.height/2+self.r+4",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__295.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__295.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__295.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf-117.25f3.75a-f268Z-Zf272',float('-3.750000'),float('-121.000000'),float('268.000000'),float('3.750000'),float('-113.500000'),float('272.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2960.2909116383407,
                -2864.2088813223213
            ],
            "name": "table_back_screwhole",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 297
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "table.z+table.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "6.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf3.25a-f267Z-Zf269',float('-3.250000'),float('-3.250000'),float('267.000000'),float('3.250000'),float('3.250000'),float('269.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3489.429121955108,
                -3254.704558095612
            ],
            "name": "table_screw",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 298
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__298.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__298.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-0.75",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__298.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "table_screw.r-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf2.25a-f268.25Z-Zf269',float('-2.250000'),float('-2.250000'),float('268.250000'),float('2.250000'),float('2.250000'),float('269.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3880.5551060995485,
                -2911.107817389985
            ],
            "name": "table_screw_interface",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 299
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__298.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__299.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf3.25a-f267Z-Zf269nam__f1-r+qXqYf2.25a-f268.25Z-Zf269',float('-3.250000'),float('-3.250000'),float('267.000000'),float('3.250000'),float('3.250000'),float('269.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4366.173422537028,
                -2998.0449120144176
            ],
            "name": "d24",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 300
        },
        {
            "datums": [
                {
                    "expr": "table_back_screwhole.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table_back_screwhole.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "table_back_screwhole.zmin",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__300.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-117.25-Zf0aam__f1-r+qXqYf3.25a-f267Z-Zf269nam__f1-r+qXqYf2.25a-f268.25Z-Zf269',float('-3.250000'),float('-120.500000'),float('267.000000'),float('3.250000'),float('-114.000000'),float('269.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                4714.842147378648,
                -3322.3372419497346
            ],
            "name": "r39",
            "script": [
                "import fab",
                "",
                "title('Recenter')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.recenter(shape, x, y, z))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y - 0.3, z),",
                "                  (x, y + 0.3, z)], color=sb.color.teal)",
                "sb.ui.wireframe([(x - 0.3, y, z),",
                "                  (x + 0.3, y, z)], color=sb.color.teal)",
                "sb.ui.wireframe([(x, y, z - 0.3),",
                "                  (x, y, z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, z, color=sb.color.teal)",
                ""
            ],
            "uid": 301
        },
        {
            "datums": [
                {
                    "expr": "table_front_screwhole.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "table_front_screwhole.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "table_front_screwhole.zmin",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__300.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-20-Yf-56.25-Zf0aam__f1-r+qXqYf3.25a-f267Z-Zf269nam__f1-r+qXqYf2.25a-f268.25Z-Zf269',float('-23.250000'),float('-59.500000'),float('267.000000'),float('-16.750000'),float('-53.000000'),float('269.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                4724.842147378648,
                -2868.5486987048653
            ],
            "name": "r40",
            "script": [
                "import fab",
                "",
                "title('Recenter')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.recenter(shape, x, y, z))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y - 0.3, z),",
                "                  (x, y + 0.3, z)], color=sb.color.teal)",
                "sb.ui.wireframe([(x - 0.3, y, z),",
                "                  (x + 0.3, y, z)], color=sb.color.teal)",
                "sb.ui.wireframe([(x, y, z - 0.3),",
                "                  (x, y, z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, z, color=sb.color.teal)",
                ""
            ],
            "uid": 302
        },
        {
            "datums": [
                {
                    "expr": "table.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__302.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf-20-Yf-56.25-Zf0aam__f1-r+qXqYf3.25a-f267Z-Zf269nam__f1-r+qXqYf2.25a-f268.25Z-Zf269m-Xf-20-Yf-56.25-Zf0aam__f1-r+qXqYf3.25a-f267Z-Zf269nam__f1-r+qXqYf2.25a-f268.25Z-Zf269',float('-23.250000'),float('-59.500000'),float('267.000000'),float('23.250000'),float('-53.000000'),float('269.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                5056.937001168097,
                -2863.3007559654598
            ],
            "name": "m18",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 303
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__303.__4,__301.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "black.r-20",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "black.g-20",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "black.b-20",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iim-*f2f0X__m-Xf-20-Yf-56.25-Zf0aam__f1-r+qXqYf3.25a-f267Z-Zf269nam__f1-r+qXqYf2.25a-f268.25Z-Zf269m-Xf-20-Yf-56.25-Zf0aam__f1-r+qXqYf3.25a-f267Z-Zf269nam__f1-r+qXqYf2.25a-f268.25Z-Zf269m-Xf0-Yf-117.25-Zf0aam__f1-r+qXqYf3.25a-f267Z-Zf269nam__f1-r+qXqYf2.25a-f268.25Z-Zf269',float('-23.250000'),float('-120.500000'),float('267.000000'),float('23.250000'),float('-53.000000'),float('269.000000'),color=(235,235,235))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                5439.801682561166,
                -3010.741030735252
            ],
            "name": "s19",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 304
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__17.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__91.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iam__f1aa-f-27.5X-Xf27.5a-f15Y-Yf80a-f32Z-Zf152amX+f80/-Yf80f0.5_am__f1-r+qXq-Yf80f27.5a-f32Z-Zf152nm-Xf0-Yf91.75-Zf120m_+*f0.707107Y*f-0.707107Z+*f0.707107Y*f0.707107Zm-Xf0-Yf-91.75-Zf-120a-r+q-Xf0q-Zf120f2a-f91.75Y-Yf101.75',float('-27.500000'),float('15.000000'),float('32.000000'),float('27.500000'),float('93.750000'),float('152.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1303.2570943917144,
                -756.6457605077021
            ],
            "name": "u2",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 305
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__29.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__29.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__29.__3]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__29.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f60+*f0-Zf465*f1-f525Z+f-92.5/*-Yf-92.5f60+*f0-Zf465*f1-f525Z_am__f1-r+qXq-Yf-92.5f17.5a-f465Z-Zf525',float('-17.500000'),float('-110.000000'),float('465.000000'),float('17.500000'),float('-75.000000'),float('525.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6649.0384746034,
                -2362.6761670709184
            ],
            "name": "lamp_post_chamfer",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 306
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__306.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__306.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__306.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__306.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf-92.5f17.5a-f465Z-Zf467',float('-17.500000'),float('-110.000000'),float('465.000000'),float('17.500000'),float('-75.000000'),float('467.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                7156.258233780607,
                -2463.6805272782362
            ],
            "name": "lamp_post_chamfer_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 307
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__307.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__306.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf-92.5f17.5a-f465Z-Zf467m+f0/*-Xf0f60+*f0-Zf465*f1-f525Z+f-92.5/*-Yf-92.5f60+*f0-Zf465*f1-f525Z_am__f1-r+qXq-Yf-92.5f17.5a-f465Z-Zf525',float('-17.500000'),float('-110.000000'),float('465.000000'),float('17.500000'),float('-75.000000'),float('467.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7700.323927433122,
                -2198.734997516038
            ],
            "name": "i26",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 308
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__307.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__307.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__307.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_post.r-3",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-92.5-Zf467-r+q-f14.5r+qXqYqZf1',float('-15.500000'),float('-108.000000'),float('466.000000'),float('15.500000'),float('-77.000000'),float('468.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                7731.826699623927,
                -2659.154238700555
            ],
            "name": "lamp_post_cap_bevel",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 309
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__309.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__309.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__307.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lamp_post_cap_bevel.z+lamp_post_cap_bevel.r",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__309.__3]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf-92.5f14.5a-f465Z-Zf468',float('-14.500000'),float('-107.000000'),float('465.000000'),float('14.500000'),float('-78.000000'),float('468.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                8221.9106594739,
                -2466.341626449874
            ],
            "name": "lamp_post_cap",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 310
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__310.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__310.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__310.__3]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0-20",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "10",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m__-*f2f468Zm+f0/*-Xf0f20+*f0-Zf468*f1-f488Z+f-92.5/*-Yf-92.5f20+*f0-Zf468*f1-f488Z_am__f1-r+qXq-Yf-92.5f10a-f468Z-Zf488',float('-10.000000'),float('-102.500000'),float('448.000000'),float('10.000000'),float('-82.500000'),float('468.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                8652.358574129104,
                -2066.67028554456
            ],
            "name": "lamp_post_cap_inner_bevel",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 311
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__310.__5,__309.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__311.__5,__314.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiam__f1-r+qXq-Yf-92.5f14.5a-f465Z-Zf468m-Xf0-Yf-92.5-Zf467-r+q-f14.5r+qXqYqZf1nim__-*f2f468Zm+f0/*-Xf0f20+*f0-Zf468*f1-f488Z+f-92.5/*-Yf-92.5f20+*f0-Zf468*f1-f488Z_am__f1-r+qXq-Yf-92.5f10a-f468Z-Zf488aam__f1-r+qXq-Yf-92.5f14.5a-f437Z-Zf467nam__f1-r+qXq-Yf-92.5f12a-f437Z-Zf467',float('-15.500000'),float('-108.000000'),float('465.000000'),float('15.500000'),float('-77.000000'),float('468.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                9252.04013953813,
                -2170.9300455291045
            ],
            "name": "d25",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 312
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-30",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lamp_post_cap.zmax-1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__310.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__310.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "12",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__310.__4]",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf-92.5f14.5a-f437Z-Zf467nam__f1-r+qXq-Yf-92.5f12a-f437Z-Zf467',float('-14.500000'),float('-107.000000'),float('437.000000'),float('14.500000'),float('-78.000000'),float('467.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                8907.045092216553,
                -2616.3225445720004
            ],
            "name": "r41",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 314
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__312.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "black.r",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "black.g",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "black.b",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aiam__f1-r+qXq-Yf-92.5f14.5a-f465Z-Zf468m-Xf0-Yf-92.5-Zf467-r+q-f14.5r+qXqYqZf1nim__-*f2f468Zm+f0/*-Xf0f20+*f0-Zf468*f1-f488Z+f-92.5/*-Yf-92.5f20+*f0-Zf468*f1-f488Z_am__f1-r+qXq-Yf-92.5f10a-f468Z-Zf488aam__f1-r+qXq-Yf-92.5f14.5a-f437Z-Zf467nam__f1-r+qXq-Yf-92.5f12a-f437Z-Zf467',float('-15.500000'),float('-108.000000'),float('465.000000'),float('15.500000'),float('-77.000000'),float('468.000000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                9600.156138286198,
                -2181.2704482573236
            ],
            "name": "s20",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 313
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__36.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__36.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__36.__1]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0+60",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__36.__5]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f60+*f0-Zf425*f1-f485Z+f-92.5/*-Yf-92.5f60+*f0-Zf425*f1-f485Z_am__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf485',float('-23.500002'),float('-116.000000'),float('425.000000'),float('23.500002'),float('-69.000000'),float('485.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5419.638218328216,
                -7720.981546527658
            ],
            "name": "lamp_ring_chamfer",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 315
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__315.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__315.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__315.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+3",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__315.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf428',float('-23.500000'),float('-116.000000'),float('425.000000'),float('23.500000'),float('-69.000000'),float('428.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5961.331507709265,
                -7859.602886634847
            ],
            "name": "lamp_ring_chamfer_mask",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 316
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__316.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__315.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf428m+f0/*-Xf0f60+*f0-Zf425*f1-f485Z+f-92.5/*-Yf-92.5f60+*f0-Zf425*f1-f485Z_am__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf485',float('-23.500000'),float('-116.000000'),float('425.000000'),float('23.500000'),float('-69.000000'),float('428.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                6526.223442007582,
                -7559.286639549795
            ],
            "name": "i27",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 317
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(lamp_ring.zmax+lamp_ring.zmin)/2",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__317.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im__-*f2f402Zaam__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf428m+f0/*-Xf0f60+*f0-Zf425*f1-f485Z+f-92.5/*-Yf-92.5f60+*f0-Zf425*f1-f485Z_am__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf485aam__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf428m+f0/*-Xf0f60+*f0-Zf425*f1-f485Z+f-92.5/*-Yf-92.5f60+*f0-Zf425*f1-f485Z_am__f1-r+qXq-Yf-92.5f23.5a-f425Z-Zf485',float('-23.500000'),float('-116.000000'),float('376.000000'),float('23.500000'),float('-69.000000'),float('428.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                6880.277857740039,
                -7576.656803012474
            ],
            "name": "m19",
            "script": [
                "import fab",
                "",
                "title('Mirror (Z)')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('z0', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_z(shape, z0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + 1, _y - 1, z0),",
                "    (_x + 1, _y + 1, z0),",
                "    (_x - 1, _y + 1, z0),",
                "    (_x - 1, _y - 1, z0)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, _y, z0, color=sb.color.teal)",
                ""
            ],
            "uid": 318
        },
        {
            "datums": [
                {
                    "expr": "lamp_stand_connector.ymax-2",
                    "name": "ymin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.ymin+0.5",
                    "name": "ymax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__130.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__130.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.R-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__130.__4]",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Xf0q-Zf402f15.5a-f14Y-Yf14.5na-r+q-Xf0q-Zf402f14.5a-f14Y-Yf14.5',float('-15.500000'),float('14.000000'),float('386.500000'),float('15.500000'),float('14.500000'),float('417.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3632.7913288599866,
                -7079.554443801366
            ],
            "name": "lamp_stand_connector_seam",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Y)')",
                "",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('x', float)",
                "input('z', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder_y(x, ymin, ymax, z, R) & ~fab.shapes.cylinder_y(x, ymin, ymax, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, ymin, z), (x, ymax, z)])",
                "sb.ui.wireframe([(x, ymax, z), (x, ymax, z + r)])",
                "sb.ui.wireframe([(x, ymin, z), (x, ymin, z + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x,ymin, ",
                "     math.sin(i/36. * 2*math.pi) * R + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    ( math.cos(i/36. * 2*math.pi) * r + x,ymax,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, ymin, z)",
                "sb.ui.point(x, ymax, z)",
                "sb.ui.point(x, ymin, z + R, drag=(None, None, R))",
                "sb.ui.point(x, ymax, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 319
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__130.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__319.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Xf0q-Zf402f15.5a-f-4Y-Yf16naa-r+q-Xf0q-Zf402f15.5a-f14Y-Yf14.5na-r+q-Xf0q-Zf402f14.5a-f14Y-Yf14.5',float('-15.500000'),float('-4.000000'),float('386.500000'),float('15.500000'),float('16.000000'),float('417.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4170.851958081239,
                -7220.083219903854
            ],
            "name": "d26",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 320
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/*-Xf0f1+*f0-Zf0*f1-f1Z+f0/*-Yf0f1+*f0-Zf0*f1-f1Z_am__f1-r+qXqYf1a-f0Z-Zf1',float('-1.000000'),float('-1.000000'),float('0.000000'),float('1.000000'),float('1.000000'),float('1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3712.09974891103,
                -7902.433647292157
            ],
            "name": "c10",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 321
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "color_enabled",
                    "type": "bool",
                    "uid": 15
                },
                {
                    "expr": "\u0012255",
                    "name": "silver",
                    "type": "int",
                    "uid": 0
                },
                {
                    "expr": "\u0012255",
                    "name": "black",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "\u0012255",
                    "name": "orange_r",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012255",
                    "name": "orange_g",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "\u0012255",
                    "name": "orange_b",
                    "type": "int",
                    "uid": 5
                },
                {
                    "expr": "\u0012255",
                    "name": "dark_black",
                    "type": "int",
                    "uid": 2
                }
            ],
            "inspector": [
                4656.599690686764,
                -9921.337400679635
            ],
            "name": "color",
            "script": [
                "import fab",
                "",
                "title('color')",
                "input('color_enabled', bool)",
                "",
                "black = 100 if color_enabled else 255",
                "dark_black = 40 if color_enabled else 255",
                "silver = 200 if color_enabled else 255",
                "",
                "orange_r = 200 if color_enabled else 255",
                "orange_g = 95 if color_enabled else 255",
                "orange_b = 21 if color_enabled else 255",
                "",
                "output('silver', silver)",
                "output('black', black)",
                "output('orange_r', orange_r)",
                "output('orange_g', orange_g)",
                "output('orange_b', orange_b)",
                "output('dark_black', dark_black)"
            ],
            "uid": 322
        }
    ],
    "protocol": 6,
    "type": "sb"
}
