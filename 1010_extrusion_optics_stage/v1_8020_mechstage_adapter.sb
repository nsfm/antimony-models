{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "40",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "40",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "5",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-19.375X-Xf19.375a-f-19.375Y-Yf19.375a-f-2.5Z-Zf2.5am__f1iaa-f-20X-Xf20a-f-19.375Y-Yf19.375aa-f-19.375X-Xf19.375a-f-20Y-Yf20a-f-1.875Z-Zf1.875-r++q-Xf19.375q-Yf19.375q-Zf1.875f0.625-r++q-Xf-19.375q-Yf19.375q-Zf1.875f0.625-r++q-Xf19.375q-Yf-19.375q-Zf1.875f0.625-r++q-Xf-19.375q-Yf-19.375q-Zf1.875f0.625-r++q-Xf19.375q-Yf19.375q-Zf-1.875f0.625-r++q-Xf-19.375q-Yf19.375q-Zf-1.875f0.625-r++q-Xf19.375q-Yf-19.375q-Zf-1.875f0.625-r++q-Xf-19.375q-Yf-19.375q-Zf-1.875f0.625am__f1-r+q-Xf19.375q-Yf19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf19.375q-Zf1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf19.375q-Zf1.875f0.625a-f-19.375Y-Yf19.375am__f1-r+q-Xf-19.375q-Yf19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf-19.375q-Zf1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf-19.375q-Zf1.875f0.625a-f-19.375Y-Yf19.375am__f1-r+q-Xf19.375q-Yf-19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf19.375q-Zf-1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf19.375q-Zf-1.875f0.625a-f-19.375Y-Yf19.375am__f1-r+q-Xf-19.375q-Yf-19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf-19.375q-Zf-1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf-19.375q-Zf-1.875f0.625a-f-19.375Y-Yf19.375',float('-20.000000'),float('-20.000000'),float('-2.500000'),float('20.000000'),float('20.000000'),float('2.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                19,
                -328
            ],
            "name": "r0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "r0.x+r0.width/2-4",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r0.y+r0.width/2-4",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r0.z-r0.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "r0.z+r0.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5',float('14.500000'),float('14.500000'),float('-2.500000'),float('17.500000'),float('17.500000'),float('2.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -215.0454403408858,
                189.41049164644502
            ],
            "name": "c0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__3.__7]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-19.375X-Xf19.375a-f-19.375Y-Yf19.375a-f-2.5Z-Zf2.5am__f1iaa-f-20X-Xf20a-f-19.375Y-Yf19.375aa-f-19.375X-Xf19.375a-f-20Y-Yf20a-f-1.875Z-Zf1.875-r++q-Xf19.375q-Yf19.375q-Zf1.875f0.625-r++q-Xf-19.375q-Yf19.375q-Zf1.875f0.625-r++q-Xf19.375q-Yf-19.375q-Zf1.875f0.625-r++q-Xf-19.375q-Yf-19.375q-Zf1.875f0.625-r++q-Xf19.375q-Yf19.375q-Zf-1.875f0.625-r++q-Xf-19.375q-Yf19.375q-Zf-1.875f0.625-r++q-Xf19.375q-Yf-19.375q-Zf-1.875f0.625-r++q-Xf-19.375q-Yf-19.375q-Zf-1.875f0.625am__f1-r+q-Xf19.375q-Yf19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf19.375q-Zf1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf19.375q-Zf1.875f0.625a-f-19.375Y-Yf19.375am__f1-r+q-Xf-19.375q-Yf19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf-19.375q-Zf1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf-19.375q-Zf1.875f0.625a-f-19.375Y-Yf19.375am__f1-r+q-Xf19.375q-Yf-19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf19.375q-Zf-1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf19.375q-Zf-1.875f0.625a-f-19.375Y-Yf19.375am__f1-r+q-Xf-19.375q-Yf-19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf-19.375q-Zf-1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf-19.375q-Zf-1.875f0.625a-f-19.375Y-Yf19.375nm-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5',float('-20.000000'),float('-20.000000'),float('-2.500000'),float('20.000000'),float('20.000000'),float('2.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                622.4856897516777,
                145.89508353554945
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__5,__4.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "-r0.width+8",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "-r0.height+8",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5',float('-19.000000'),float('-19.000000'),float('-2.500000'),float('19.000000'),float('19.000000'),float('2.500000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                170.81882697287244,
                249.84533055462845
            ],
            "name": "a0",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__1.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r0.z+r0.depth/2-2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__1.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5',float('13.000000'),float('13.000000'),float('0.500000'),float('19.000000'),float('19.000000'),float('2.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -205.96124579362652,
                729.1395889033296
            ],
            "name": "c1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r0.z+r0.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "25.25",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "80",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "25.25",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": ".05",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-11.9938X-Xf11.9938a-f-39.3687Y-Yf39.3687a-f2.5Z-Zf27.75am__f1iaa-f-12.625X-Xf12.625a-f-39.3687Y-Yf39.3687aa-f-11.9938X-Xf11.9938a-f-40Y-Yf40a-f3.13125Z-Zf27.1187-r++q-Xf11.9938q-Yf39.3687q-Zf27.1187f0.63125-r++q-Xf-11.9938q-Yf39.3687q-Zf27.1187f0.63125-r++q-Xf11.9938q-Yf-39.3687q-Zf27.1187f0.63125-r++q-Xf-11.9938q-Yf-39.3687q-Zf27.1187f0.63125-r++q-Xf11.9938q-Yf39.3687q-Zf3.13125f0.63125-r++q-Xf-11.9938q-Yf39.3687q-Zf3.13125f0.63125-r++q-Xf11.9938q-Yf-39.3687q-Zf3.13125f0.63125-r++q-Xf-11.9938q-Yf-39.3687q-Zf3.13125f0.63125am__f1-r+q-Xf11.9938q-Yf39.3687f0.63125a-f3.13125Z-Zf27.1187a-r+q-Yf39.3687q-Zf27.1187f0.63125a-f-11.9938X-Xf11.9938a-r+q-Xf11.9938q-Zf27.1187f0.63125a-f-39.3687Y-Yf39.3687am__f1-r+q-Xf-11.9938q-Yf39.3687f0.63125a-f3.13125Z-Zf27.1187a-r+q-Yf-39.3687q-Zf27.1187f0.63125a-f-11.9938X-Xf11.9938a-r+q-Xf-11.9938q-Zf27.1187f0.63125a-f-39.3687Y-Yf39.3687am__f1-r+q-Xf11.9938q-Yf-39.3687f0.63125a-f3.13125Z-Zf27.1187a-r+q-Yf39.3687q-Zf3.13125f0.63125a-f-11.9938X-Xf11.9938a-r+q-Xf11.9938q-Zf3.13125f0.63125a-f-39.3687Y-Yf39.3687am__f1-r+q-Xf-11.9938q-Yf-39.3687f0.63125a-f3.13125Z-Zf27.1187a-r+q-Yf-39.3687q-Zf3.13125f0.63125a-f-11.9938X-Xf11.9938a-r+q-Xf-11.9938q-Zf3.13125f0.63125a-f-39.3687Y-Yf39.3687',float('-12.625000'),float('-40.000000'),float('2.500000'),float('12.625000'),float('40.000000'),float('27.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                578.4764114596945,
                -776.0049422020293
            ],
            "name": "extrusion",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "extrusion.x-extrusion.width/2-self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r0.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "extrusion.z-1",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "7",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "24",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "extrusion.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-18.75X-Xf-13.5a-f-11.125Y-Yf11.125a-f1.5Z-Zf26.75am__f1iaa-f-19.625X-Xf-12.625a-f-11.125Y-Yf11.125aa-f-18.75X-Xf-13.5a-f-12Y-Yf12a-f2.375Z-Zf25.875-r++q-Xf-13.5q-Yf11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf11.125q-Zf2.375f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf2.375f0.875am__f1-r+q-Xf-13.5q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-13.5q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf2.375f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf2.375f0.875a-f-11.125Y-Yf11.125',float('-19.625000'),float('-12.000000'),float('1.500000'),float('-12.625000'),float('12.000000'),float('26.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                688.9983274702867,
                580.8279415875795
            ],
            "name": "r1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__9.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-18.75X-Xf-13.5a-f-11.125Y-Yf11.125a-f1.5Z-Zf26.75am__f1iaa-f-19.625X-Xf-12.625a-f-11.125Y-Yf11.125aa-f-18.75X-Xf-13.5a-f-12Y-Yf12a-f2.375Z-Zf25.875-r++q-Xf-13.5q-Yf11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf11.125q-Zf2.375f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf2.375f0.875am__f1-r+q-Xf-13.5q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-13.5q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf2.375f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf2.375f0.875a-f-11.125Y-Yf11.125nia-r+q-Yf0q-Zf15.125f3.8a-f-19.625X-Xf-12.625a-r+q-Yf0q-Zf15.125f5.75a-f-19.625X-Xf-16.625aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-18.75X-Xf-13.5a-f-11.125Y-Yf11.125a-f1.5Z-Zf26.75am__f1iaa-f-19.625X-Xf-12.625a-f-11.125Y-Yf11.125aa-f-18.75X-Xf-13.5a-f-12Y-Yf12a-f2.375Z-Zf25.875-r++q-Xf-13.5q-Yf11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf11.125q-Zf2.375f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf2.375f0.875am__f1-r+q-Xf-13.5q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-13.5q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf2.375f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf2.375f0.875a-f-11.125Y-Yf11.125nia-r+q-Yf0q-Zf15.125f3.8a-f-19.625X-Xf-12.625a-r+q-Yf0q-Zf15.125f5.75a-f-19.625X-Xf-16.625',float('-19.625000'),float('-12.000000'),float('1.500000'),float('19.625000'),float('12.000000'),float('26.750000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1508.989091237232,
                1132.3940648043945
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "r1.x-r1.width/2",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r1.x+r1.width/2",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r1.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "extrusion.z",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "7.6/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf0q-Zf15.125f3.8a-f-19.625X-Xf-12.625',float('-19.625000'),float('-3.800000'),float('11.325000'),float('-12.625000'),float('3.800000'),float('18.924999'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                733.8553443347181,
                1127.5586963208275
            ],
            "name": "c2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__6.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__5,__10.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-18.75X-Xf-13.5a-f-11.125Y-Yf11.125a-f1.5Z-Zf26.75am__f1iaa-f-19.625X-Xf-12.625a-f-11.125Y-Yf11.125aa-f-18.75X-Xf-13.5a-f-12Y-Yf12a-f2.375Z-Zf25.875-r++q-Xf-13.5q-Yf11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf11.125q-Zf2.375f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf2.375f0.875am__f1-r+q-Xf-13.5q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-13.5q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf2.375f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf2.375f0.875a-f-11.125Y-Yf11.125nia-r+q-Yf0q-Zf15.125f3.8a-f-19.625X-Xf-12.625a-r+q-Yf0q-Zf15.125f5.75a-f-19.625X-Xf-16.625',float('-19.625000'),float('-12.000000'),float('1.500000'),float('-12.625000'),float('12.000000'),float('26.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1136.9648168323672,
                1148.7224674717918
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "r1.x-r1.width/2",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.xmin+3",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r1.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "extrusion.z",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "11.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf0q-Zf15.125f5.75a-f-19.625X-Xf-16.625',float('-19.625000'),float('-5.750000'),float('9.375000'),float('-16.625000'),float('5.750000'),float('20.875000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                726.2571208534384,
                1601.8810543269005
            ],
            "name": "c3",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "r0.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r0.y+r0.height/2+self.height/2-5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r0.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "extrusion.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "extrusion.width-4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "r0.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "r0.r",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-12X-Xf12a-f15.625Y-Yf35.625a-f-2.5Z-Zf2.5am__f1iaa-f-12.625X-Xf12.625a-f15.625Y-Yf35.625aa-f-12X-Xf12a-f15Y-Yf36.25a-f-1.875Z-Zf1.875-r++q-Xf12q-Yf35.625q-Zf1.875f0.625-r++q-Xf-12q-Yf35.625q-Zf1.875f0.625-r++q-Xf12q-Yf15.625q-Zf1.875f0.625-r++q-Xf-12q-Yf15.625q-Zf1.875f0.625-r++q-Xf12q-Yf35.625q-Zf-1.875f0.625-r++q-Xf-12q-Yf35.625q-Zf-1.875f0.625-r++q-Xf12q-Yf15.625q-Zf-1.875f0.625-r++q-Xf-12q-Yf15.625q-Zf-1.875f0.625am__f1-r+q-Xf12q-Yf35.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf35.625q-Zf1.875f0.625a-f-12X-Xf12a-r+q-Xf12q-Zf1.875f0.625a-f15.625Y-Yf35.625am__f1-r+q-Xf-12q-Yf35.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf15.625q-Zf1.875f0.625a-f-12X-Xf12a-r+q-Xf-12q-Zf1.875f0.625a-f15.625Y-Yf35.625am__f1-r+q-Xf12q-Yf15.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf35.625q-Zf-1.875f0.625a-f-12X-Xf12a-r+q-Xf12q-Zf-1.875f0.625a-f15.625Y-Yf35.625am__f1-r+q-Xf-12q-Yf15.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf15.625q-Zf-1.875f0.625a-f-12X-Xf12a-r+q-Xf-12q-Zf-1.875f0.625a-f15.625Y-Yf35.625',float('-12.625000'),float('15.000000'),float('-2.500000'),float('12.625000'),float('36.250000'),float('2.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                625.3758536790394,
                2090.7738759265003
            ],
            "name": "lip",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__11.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "lip.y+2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "lip.z-lip.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lip.z+lip.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__8.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf27.625f3.8a-f-2.5Z-Zf2.5',float('-3.800000'),float('23.825001'),float('-2.500000'),float('3.800000'),float('31.424999'),float('2.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                308.1811787067677,
                2571.426575982409
            ],
            "name": "c4",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__11.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__12.__5,__14.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-12X-Xf12a-f15.625Y-Yf35.625a-f-2.5Z-Zf2.5am__f1iaa-f-12.625X-Xf12.625a-f15.625Y-Yf35.625aa-f-12X-Xf12a-f15Y-Yf36.25a-f-1.875Z-Zf1.875-r++q-Xf12q-Yf35.625q-Zf1.875f0.625-r++q-Xf-12q-Yf35.625q-Zf1.875f0.625-r++q-Xf12q-Yf15.625q-Zf1.875f0.625-r++q-Xf-12q-Yf15.625q-Zf1.875f0.625-r++q-Xf12q-Yf35.625q-Zf-1.875f0.625-r++q-Xf-12q-Yf35.625q-Zf-1.875f0.625-r++q-Xf12q-Yf15.625q-Zf-1.875f0.625-r++q-Xf-12q-Yf15.625q-Zf-1.875f0.625am__f1-r+q-Xf12q-Yf35.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf35.625q-Zf1.875f0.625a-f-12X-Xf12a-r+q-Xf12q-Zf1.875f0.625a-f15.625Y-Yf35.625am__f1-r+q-Xf-12q-Yf35.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf15.625q-Zf1.875f0.625a-f-12X-Xf12a-r+q-Xf-12q-Zf1.875f0.625a-f15.625Y-Yf35.625am__f1-r+q-Xf12q-Yf15.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf35.625q-Zf-1.875f0.625a-f-12X-Xf12a-r+q-Xf12q-Zf-1.875f0.625a-f15.625Y-Yf35.625am__f1-r+q-Xf-12q-Yf15.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf15.625q-Zf-1.875f0.625a-f-12X-Xf12a-r+q-Xf-12q-Zf-1.875f0.625a-f15.625Y-Yf35.625niam__f1-r+qXq-Yf27.625f3.8a-f-2.5Z-Zf2.5am__f1-r+qXq-Yf27.625f5.75a-f-2.5Z-Zf0.5',float('-12.625000'),float('15.000000'),float('-2.500000'),float('12.625000'),float('36.250000'),float('2.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1218.056310266917,
                2509.32222260169
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__12.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__12.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__12.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+3",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "11.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXq-Yf27.625f5.75a-f-2.5Z-Zf0.5',float('-5.750000'),float('21.875000'),float('-2.500000'),float('5.750000'),float('33.375000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                681.6782345530505,
                3008.9251785207043
            ],
            "name": "c5",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__2,__16.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__7.__4,__13.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-19.375X-Xf19.375a-f-19.375Y-Yf19.375a-f-2.5Z-Zf2.5am__f1iaa-f-20X-Xf20a-f-19.375Y-Yf19.375aa-f-19.375X-Xf19.375a-f-20Y-Yf20a-f-1.875Z-Zf1.875-r++q-Xf19.375q-Yf19.375q-Zf1.875f0.625-r++q-Xf-19.375q-Yf19.375q-Zf1.875f0.625-r++q-Xf19.375q-Yf-19.375q-Zf1.875f0.625-r++q-Xf-19.375q-Yf-19.375q-Zf1.875f0.625-r++q-Xf19.375q-Yf19.375q-Zf-1.875f0.625-r++q-Xf-19.375q-Yf19.375q-Zf-1.875f0.625-r++q-Xf19.375q-Yf-19.375q-Zf-1.875f0.625-r++q-Xf-19.375q-Yf-19.375q-Zf-1.875f0.625am__f1-r+q-Xf19.375q-Yf19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf19.375q-Zf1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf19.375q-Zf1.875f0.625a-f-19.375Y-Yf19.375am__f1-r+q-Xf-19.375q-Yf19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf-19.375q-Zf1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf-19.375q-Zf1.875f0.625a-f-19.375Y-Yf19.375am__f1-r+q-Xf19.375q-Yf-19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf19.375q-Zf-1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf19.375q-Zf-1.875f0.625a-f-19.375Y-Yf19.375am__f1-r+q-Xf-19.375q-Yf-19.375f0.625a-f-1.875Z-Zf1.875a-r+q-Yf-19.375q-Zf-1.875f0.625a-f-19.375X-Xf19.375a-r+q-Xf-19.375q-Zf-1.875f0.625a-f-19.375Y-Yf19.375nm-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f1.5a-f-2.5Z-Zf2.5am__f1-r+q-Xf16q-Yf16f3a-f0.5Z-Zf2.5iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-2.25X-Xf2.25a-f-19.25Y-Yf19.25a-f0.5Z-Zf7.5am__f1iaa-f-3X-Xf3a-f-19.25Y-Yf19.25aa-f-2.25X-Xf2.25a-f-20Y-Yf20a-f1.25Z-Zf6.75-r++q-Xf2.25q-Yf19.25q-Zf6.75f0.75-r++q-Xf-2.25q-Yf19.25q-Zf6.75f0.75-r++q-Xf2.25q-Yf-19.25q-Zf6.75f0.75-r++q-Xf-2.25q-Yf-19.25q-Zf6.75f0.75-r++q-Xf2.25q-Yf19.25q-Zf1.25f0.75-r++q-Xf-2.25q-Yf19.25q-Zf1.25f0.75-r++q-Xf2.25q-Yf-19.25q-Zf1.25f0.75-r++q-Xf-2.25q-Yf-19.25q-Zf1.25f0.75am__f1-r+q-Xf2.25q-Yf19.25f0.75a-f1.25Z-Zf6.75a-r+q-Yf19.25q-Zf6.75f0.75a-f-2.25X-Xf2.25a-r+q-Xf2.25q-Zf6.75f0.75a-f-19.25Y-Yf19.25am__f1-r+q-Xf-2.25q-Yf19.25f0.75a-f1.25Z-Zf6.75a-r+q-Yf-19.25q-Zf6.75f0.75a-f-2.25X-Xf2.25a-r+q-Xf-2.25q-Zf6.75f0.75a-f-19.25Y-Yf19.25am__f1-r+q-Xf2.25q-Yf-19.25f0.75a-f1.25Z-Zf6.75a-r+q-Yf19.25q-Zf1.25f0.75a-f-2.25X-Xf2.25a-r+q-Xf2.25q-Zf1.25f0.75a-f-19.25Y-Yf19.25am__f1-r+q-Xf-2.25q-Yf-19.25f0.75a-f1.25Z-Zf6.75a-r+q-Yf-19.25q-Zf1.25f0.75a-f-2.25X-Xf2.25a-r+q-Xf-2.25q-Zf1.25f0.75a-f-19.25Y-Yf19.25iim-*f2f0X__aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-18.75X-Xf-13.5a-f-11.125Y-Yf11.125a-f1.5Z-Zf26.75am__f1iaa-f-19.625X-Xf-12.625a-f-11.125Y-Yf11.125aa-f-18.75X-Xf-13.5a-f-12Y-Yf12a-f2.375Z-Zf25.875-r++q-Xf-13.5q-Yf11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf11.125q-Zf2.375f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf2.375f0.875am__f1-r+q-Xf-13.5q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-13.5q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf2.375f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf2.375f0.875a-f-11.125Y-Yf11.125nia-r+q-Yf0q-Zf15.125f3.8a-f-19.625X-Xf-12.625a-r+q-Yf0q-Zf15.125f5.75a-f-19.625X-Xf-16.625aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-18.75X-Xf-13.5a-f-11.125Y-Yf11.125a-f1.5Z-Zf26.75am__f1iaa-f-19.625X-Xf-12.625a-f-11.125Y-Yf11.125aa-f-18.75X-Xf-13.5a-f-12Y-Yf12a-f2.375Z-Zf25.875-r++q-Xf-13.5q-Yf11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf25.875f0.875-r++q-Xf-13.5q-Yf11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf11.125q-Zf2.375f0.875-r++q-Xf-13.5q-Yf-11.125q-Zf2.375f0.875-r++q-Xf-18.75q-Yf-11.125q-Zf2.375f0.875am__f1-r+q-Xf-13.5q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf25.875f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf25.875f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-13.5q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-13.5q-Zf2.375f0.875a-f-11.125Y-Yf11.125am__f1-r+q-Xf-18.75q-Yf-11.125f0.875a-f2.375Z-Zf25.875a-r+q-Yf-11.125q-Zf2.375f0.875a-f-18.75X-Xf-13.5a-r+q-Xf-18.75q-Zf2.375f0.875a-f-11.125Y-Yf11.125nia-r+q-Yf0q-Zf15.125f3.8a-f-19.625X-Xf-12.625a-r+q-Yf0q-Zf15.125f5.75a-f-19.625X-Xf-16.625aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-12X-Xf12a-f15.625Y-Yf35.625a-f-2.5Z-Zf2.5am__f1iaa-f-12.625X-Xf12.625a-f15.625Y-Yf35.625aa-f-12X-Xf12a-f15Y-Yf36.25a-f-1.875Z-Zf1.875-r++q-Xf12q-Yf35.625q-Zf1.875f0.625-r++q-Xf-12q-Yf35.625q-Zf1.875f0.625-r++q-Xf12q-Yf15.625q-Zf1.875f0.625-r++q-Xf-12q-Yf15.625q-Zf1.875f0.625-r++q-Xf12q-Yf35.625q-Zf-1.875f0.625-r++q-Xf-12q-Yf35.625q-Zf-1.875f0.625-r++q-Xf12q-Yf15.625q-Zf-1.875f0.625-r++q-Xf-12q-Yf15.625q-Zf-1.875f0.625am__f1-r+q-Xf12q-Yf35.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf35.625q-Zf1.875f0.625a-f-12X-Xf12a-r+q-Xf12q-Zf1.875f0.625a-f15.625Y-Yf35.625am__f1-r+q-Xf-12q-Yf35.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf15.625q-Zf1.875f0.625a-f-12X-Xf12a-r+q-Xf-12q-Zf1.875f0.625a-f15.625Y-Yf35.625am__f1-r+q-Xf12q-Yf15.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf35.625q-Zf-1.875f0.625a-f-12X-Xf12a-r+q-Xf12q-Zf-1.875f0.625a-f15.625Y-Yf35.625am__f1-r+q-Xf-12q-Yf15.625f0.625a-f-1.875Z-Zf1.875a-r+q-Yf15.625q-Zf-1.875f0.625a-f-12X-Xf12a-r+q-Xf-12q-Zf-1.875f0.625a-f15.625Y-Yf35.625niam__f1-r+qXq-Yf27.625f3.8a-f-2.5Z-Zf2.5am__f1-r+qXq-Yf27.625f5.75a-f-2.5Z-Zf0.5',float('-20.000000'),float('-20.000000'),float('-2.500000'),float('20.000000'),float('36.250000'),float('26.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2361.0002046645977,
                1175.527481850697
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "r0.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r0.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r0.z+r0.depth/2+self.depth/2-2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "6",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "r0.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "7",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-2.25X-Xf2.25a-f-19.25Y-Yf19.25a-f0.5Z-Zf7.5am__f1iaa-f-3X-Xf3a-f-19.25Y-Yf19.25aa-f-2.25X-Xf2.25a-f-20Y-Yf20a-f1.25Z-Zf6.75-r++q-Xf2.25q-Yf19.25q-Zf6.75f0.75-r++q-Xf-2.25q-Yf19.25q-Zf6.75f0.75-r++q-Xf2.25q-Yf-19.25q-Zf6.75f0.75-r++q-Xf-2.25q-Yf-19.25q-Zf6.75f0.75-r++q-Xf2.25q-Yf19.25q-Zf1.25f0.75-r++q-Xf-2.25q-Yf19.25q-Zf1.25f0.75-r++q-Xf2.25q-Yf-19.25q-Zf1.25f0.75-r++q-Xf-2.25q-Yf-19.25q-Zf1.25f0.75am__f1-r+q-Xf2.25q-Yf19.25f0.75a-f1.25Z-Zf6.75a-r+q-Yf19.25q-Zf6.75f0.75a-f-2.25X-Xf2.25a-r+q-Xf2.25q-Zf6.75f0.75a-f-19.25Y-Yf19.25am__f1-r+q-Xf-2.25q-Yf19.25f0.75a-f1.25Z-Zf6.75a-r+q-Yf-19.25q-Zf6.75f0.75a-f-2.25X-Xf2.25a-r+q-Xf-2.25q-Zf6.75f0.75a-f-19.25Y-Yf19.25am__f1-r+q-Xf2.25q-Yf-19.25f0.75a-f1.25Z-Zf6.75a-r+q-Yf19.25q-Zf1.25f0.75a-f-2.25X-Xf2.25a-r+q-Xf2.25q-Zf1.25f0.75a-f-19.25Y-Yf19.25am__f1-r+q-Xf-2.25q-Yf-19.25f0.75a-f1.25Z-Zf6.75a-r+q-Yf-19.25q-Zf1.25f0.75a-f-2.25X-Xf2.25a-r+q-Xf-2.25q-Zf1.25f0.75a-f-19.25Y-Yf19.25',float('-3.000000'),float('-20.000000'),float('0.500000'),float('3.000000'),float('20.000000'),float('7.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                1391.381722659926,
                1515.1186024423605
            ],
            "name": "rib",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__5.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                }
            ],
            "inspector": [
                1078.3296710756201,
                -461.8300813495585
            ],
            "name": "h0",
            "script": [
                "import fab",
                "",
                "title('Hide')",
                "",
                "input('shape',fab.types.Shape)",
                ""
            ],
            "uid": 17
        }
    ],
    "protocol": 6,
    "type": "sb"
}
