{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "self.zmax-2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "retainer.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "retainer.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "retainer.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "retainer.r*.85",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "retainer.R",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf52.34a-f-2Z-Zf0nam__f1-r+qXqYf44.489a-f-2Z-Zf0',float('-52.340000'),float('-52.340000'),float('-2.000000'),float('52.340000'),float('52.340000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                341.9668189067265,
                -680.4702021366926
            ],
            "name": "plate",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__6,__5.__6,__0.__6,__4.__5,__22.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__6.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiaam__f1-r+qXqYf52.34a-f-2Z-Zf0nam__f1-r+qXqYf44.489a-f-2Z-Zf0aam__f1-r+qXqYf52.34a-f-5Z-Zf-2nam__f1-r+qXqYf49.66a-f-5Z-Zf-2aam__f1-r+qXqYf52.34a-f0Z-Zf0nam__f1-r+qXqYf52.34a-f0Z-Zf0m-Xf0-Yf0-Zf-1-r+q-f51.34r+qXqYqZf1am-Xf0-Yf0-Zf-2.5-r+q-f52.34r+qXqYqZf2.5nam__f1-r+qXqYf52.34a-f-2Z-Zf0nm-Xf0-Yf0-Zf-2-r+q-f48.66r+qXqYqZf1',float('-54.840000'),float('-54.840000'),float('-5.000000'),float('54.840000'),float('54.840000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1449.4010155823482,
                291.86699942545044
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.zmax-self.r",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "retainer.r-self.r",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf-1-r+q-f51.34r+qXqYqZf1',float('-52.340000'),float('-52.340000'),float('-2.000000'),float('52.340000'),float('52.340000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                314.48455998105413,
                306.59392907654865
            ],
            "name": "dust_upper",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-3",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plate.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "(99.32)/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "plate.R",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf52.34a-f-5Z-Zf-2nam__f1-r+qXqYf49.66a-f-5Z-Zf-2',float('-52.340000'),float('-52.340000'),float('-5.000000'),float('52.340000'),float('52.340000'),float('-2.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                730.2640715244534,
                -687.4690778458826
            ],
            "name": "tabletainer",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.zmin",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "tabletainer.r-self.r",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf-2-r+q-f48.66r+qXqYqZf1',float('-49.660000'),float('-49.660000'),float('-3.000000'),float('49.660000'),float('49.660000'),float('-1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                329.297901124777,
                1137.6777698680878
            ],
            "name": "dust_lower",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__2,__18.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iaiiiiaam__f1-r+qXqYf52.34a-f-2Z-Zf0nam__f1-r+qXqYf44.489a-f-2Z-Zf0aam__f1-r+qXqYf52.34a-f-5Z-Zf-2nam__f1-r+qXqYf49.66a-f-5Z-Zf-2aam__f1-r+qXqYf52.34a-f0Z-Zf0nam__f1-r+qXqYf52.34a-f0Z-Zf0m-Xf0-Yf0-Zf-1-r+q-f51.34r+qXqYqZf1am-Xf0-Yf0-Zf-2.5-r+q-f52.34r+qXqYqZf2.5nam__f1-r+qXqYf52.34a-f-2Z-Zf0nm-Xf0-Yf0-Zf-2-r+q-f48.66r+qXqYqZf1aiaam__f1-r+qXqYf9.25a-f-2Z-Zf0nam__f1-r+qXqYf6.25a-f-2Z-Zf0iiiiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-0.707107X*f0.707107Y+*f-0.707107X*f-0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-0.707107X*f-0.707107Y+*f0.707107X*f-0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0niam__f1-r+qXqYf6.25a-f-2Z-Zf0m__-*f2f0Zm+f0/*-Xf0f4+*f0-Zf0*f1-f4Z+f0/*-Yf0f4+*f0-Zf0*f1-f4Z_am__f1-r+qXqYf8.25a-f0Z-Zf4',float('-54.840000'),float('-54.840000'),float('-5.000000'),float('54.840000'),float('54.840000'),float('0.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1805.7599248041986,
                310.1068195162497
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "penny.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "penny.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "penny.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "12.25/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+2",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf8.125a-f1Z-Zf2nam__f1-r+qXqYf6.125a-f1Z-Zf2',float('-8.125000'),float('-8.125000'),float('1.000000'),float('8.125000'),float('8.125000'),float('2.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1474.6377921566418,
                897.8594316456513
            ],
            "name": "pennyedge",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__16.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aiaam__f1-r+qXqYf8.125a-f1Z-Zf2nam__f1-r+qXqYf6.125a-f1Z-Zf2aam__f1-r+qXqYf8.125a-f0Z-Zf1nam__f1-r+qXqYf2.5a-f0Z-Zf1nm-Xf0-Yf0-Zf1-r+q-f5.625r+qXqYqZf0.5',float('-8.125000'),float('-8.125000'),float('0.000000'),float('8.125000'),float('8.125000'),float('2.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                2344.4756030487233,
                1650.9404893978558
            ],
            "name": "m1",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2.5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "pennyedge.R",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf8.125a-f0Z-Zf1nam__f1-r+qXqYf2.5a-f0Z-Zf1',float('-8.125000'),float('-8.125000'),float('0.000000'),float('8.125000'),float('8.125000'),float('1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1482.810764876433,
                1321.6864455434036
            ],
            "name": "penny",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "penny.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "penny.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "pennyedge.zmin",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "pennyedge.r-self.r",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": ".5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf1-r+q-f5.625r+qXqYqZf0.5',float('-6.125000'),float('-6.125000'),float('0.500000'),float('6.125000'),float('6.125000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1485.1458999392307,
                1791.0485931657076
            ],
            "name": "t0",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__6,__15.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__13.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiaam__f1-r+qXqYf8.125a-f1Z-Zf2nam__f1-r+qXqYf6.125a-f1Z-Zf2aam__f1-r+qXqYf8.125a-f0Z-Zf1nam__f1-r+qXqYf2.5a-f0Z-Zf1nm-Xf0-Yf0-Zf1-r+q-f5.625r+qXqYqZf0.5',float('-8.125000'),float('-8.125000'),float('0.000000'),float('8.125000'),float('8.125000'),float('2.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1931.1566969335597,
                1648.6053543350583
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "106.68/2-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf52.34a-f0Z-Zf0nam__f1-r+qXqYf52.34a-f0Z-Zf0',float('-52.340000'),float('-52.340000'),float('0.000000'),float('52.340000'),float('52.340000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                347.1732937106135,
                -181.55435027833013
            ],
            "name": "retainer",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "plate.x-plate.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plate.x",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.y-slip_template.r-3",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plate.y+slip_template.r+3",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "plate.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "plate.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "2",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "1",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": ".1",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": ".5",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0',float('-44.488998'),float('-9.250000'),float('-2.000000'),float('0.000000'),float('9.250000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                1212.1534521586661,
                -977.6448246119426
            ],
            "name": "g0",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "plate.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plate.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__2.__4]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__2.__5]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "plate.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf44.489a-f-2Z-Zf0',float('-44.488998'),float('-44.488998'),float('-2.000000'),float('44.488998'),float('44.488998'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1628.5188568536644,
                -885.1191791241652
            ],
            "name": "c0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__10]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0',float('-44.488998'),float('-9.250000'),float('-2.000000'),float('0.000000'),float('9.250000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1962.1719420974675,
                -437.9118925999078
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "plate.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plate.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plate.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "12.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+3",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf9.25a-f-2Z-Zf0nam__f1-r+qXqYf6.25a-f-2Z-Zf0',float('-9.250000'),float('-9.250000'),float('-2.000000'),float('9.250000'),float('9.250000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2395.853456645629,
                92.52564548777737
            ],
            "name": "slip_template",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__14.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                }
            ],
            "inspector": [
                2715.4875046943143,
                1710.3225378043694
            ],
            "name": "h0",
            "script": [
                "import fab",
                "",
                "title('Hide')",
                "",
                "input('shape',fab.types.Shape)",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "plate.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plate.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plate.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slip_template.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf6.25a-f-2Z-Zf0',float('-6.250000'),float('-6.250000'),float('-2.000000'),float('6.250000'),float('6.250000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2439.3180435713925,
                501.19661396541346
            ],
            "name": "c1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 17
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__11.__6,__20.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__17.__5,__19.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiaam__f1-r+qXqYf9.25a-f-2Z-Zf0nam__f1-r+qXqYf6.25a-f-2Z-Zf0iiiiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-0.707107X*f0.707107Y+*f-0.707107X*f-0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-0.707107X*f-0.707107Y+*f0.707107X*f-0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0niam__f1-r+qXqYf6.25a-f-2Z-Zf0m__-*f2f0Zm+f0/*-Xf0f4+*f0-Zf0*f1-f4Z+f0/*-Yf0f4+*f0-Zf0*f1-f4Z_am__f1-r+qXqYf8.25a-f0Z-Zf4',float('-44.488998'),float('-44.488998'),float('-2.000000'),float('44.488998'),float('44.488998'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2734.7155959055463,
                -457.48778684120236
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 18
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slip_template.zmax",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slip_template.zmin-2",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slip_template.R-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m__-*f2f0Zm+f0/*-Xf0f4+*f0-Zf0*f1-f4Z+f0/*-Yf0f4+*f0-Zf0*f1-f4Z_am__f1-r+qXqYf8.25a-f0Z-Zf4',float('-8.250000'),float('-8.250000'),float('-4.000000'),float('8.250000'),float('8.250000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2778.4706798831785,
                425.47533377662774
            ],
            "name": "c2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 19
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__9.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "plate.x",
                    "name": "x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "8",
                    "name": "n",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-0.707107X*f0.707107Y+*f-0.707107X*f-0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-0.707107X*f-0.707107Y+*f0.707107X*f-0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aa= abs( sin(X / 3.141592653589793)*cos(Y / 6.283185307179586) + sin(Y / 6.283185307179586)*cos(Z /62.83185307179586) + sin(Z / 62.83185307179586)*cos(X / 3.141592653589793)) - 0.5;am__f1aa-f-44.489X-Xf0a-f-9.25Y-Yf9.25a-f-2Z-Zf0am__f1-r+qXqYf44.489a-f-2Z-Zf0',float('-44.488998'),float('-44.488998'),float('-2.000000'),float('44.488998'),float('44.488998'),float('0.000000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2106.6607617658838,
                -890.2731951603885
            ],
            "name": "a0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Array (polar)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('x', float)",
                "input('y', float)",
                "input('n', int)",
                "",
                "output('array', fab.shapes.iterate_polar(shape, x, y, n))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * 0.3 + x,",
                "     math.sin(i/36. * 2*math.pi) * 0.3 + y, 0)",
                "    for i in range(36)], close=True, color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, 0, color=sb.color.teal)",
                ""
            ],
            "uid": 20
        },
        {
            "datums": [
                {
                    "expr": "plate.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plate.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.zmax-2.5",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plate.R",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2.5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf-2.5-r+q-f52.34r+qXqYqZf2.5',float('-54.840000'),float('-54.840000'),float('-5.000000'),float('54.840000'),float('54.840000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -968,
                191
            ],
            "name": "t1",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 21
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__21.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__23.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('am-Xf0-Yf0-Zf-2.5-r+q-f52.34r+qXqYqZf2.5nam__f1-r+qXqYf52.34a-f-2Z-Zf0',float('-54.840000'),float('-54.840000'),float('-5.000000'),float('54.840000'),float('54.840000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -568,
                537
            ],
            "name": "d3",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 22
        },
        {
            "datums": [
                {
                    "expr": "plate.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "plate.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plate.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "plate.R",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf52.34a-f-2Z-Zf0',float('-52.340000'),float('-52.340000'),float('-2.000000'),float('52.340000'),float('52.340000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -987,
                606
            ],
            "name": "c3",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 23
        }
    ],
    "protocol": 6,
    "type": "sb"
}
