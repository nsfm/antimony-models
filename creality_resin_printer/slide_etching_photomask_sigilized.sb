{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0-self.depth/2-.5",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "25.25",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "75",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.625X-Xf12.625a-f-37.5Y-Yf37.5a-f-1.5Z-Zf-0.5',float('-12.625000'),float('-37.500000'),float('-1.500000'),float('12.625000'),float('37.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                930.1354230952736,
                -231.2230758895671
            ],
            "name": "slide",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__7.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iiim_-*f2f0Y_m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1amX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27nm+f0/-Xf0f0.95+f0/-Yf0f0.95_mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27iaaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iiim-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-9.500000'),float('-20.250000'),float('-inf'),float('10.611538'),float('20.250000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                882.8416880652289,
                3628.296504088061
            ],
            "name": "Print",
            "script": [
                "import fab",
                "",
                "title('Heightmap (.png)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.heightmap(shape)",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__20.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aaa-f-13.125X-Xf13.125a-f-38Y-Yf38niiiim_-*f2f0Y_m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1amX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27nm+f0/-Xf0f0.95+f0/-Yf0f0.95_mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27iaaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iiim-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iia-r+qXqYf5.25n-r+qXqYf4.75im_-*f2f0Y_iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiaa-f2.75X-Xf3.25a-f-2.5Y-Yf2.5im_-*f2f0Y_aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5a-r+qXqYf6.75n-r+qXqYf5.75',float('-13.125000'),float('-38.000000'),float('-inf'),float('13.125000'),float('38.000000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1994.480813161325,
                1972.918270034914
            ],
            "name": "Front_Mask",
            "script": [
                "import fab",
                "",
                "title('Heightmap (.png)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.heightmap(shape)",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.width+1",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.height+1",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-13.125X-Xf13.125a-f-38Y-Yf38',float('-13.125000'),float('-38.000000'),float('-inf'),float('13.125000'),float('38.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1049.868511225719,
                325.1351076351037
            ],
            "name": "mask_area",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 19
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__19.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__14.__1,__8.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaa-f-13.125X-Xf13.125a-f-38Y-Yf38niiiim_-*f2f0Y_m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1amX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27nm+f0/-Xf0f0.95+f0/-Yf0f0.95_mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27iaaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iiim-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iia-r+qXqYf5.25n-r+qXqYf4.75im_-*f2f0Y_iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiaa-f2.75X-Xf3.25a-f-2.5Y-Yf2.5im_-*f2f0Y_aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5a-r+qXqYf6.75n-r+qXqYf5.75',float('-13.125000'),float('-38.000000'),float('-inf'),float('13.125000'),float('38.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1652.598197396026,
                1975.364712574983
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 20
        },
        {
            "datums": [
                {
                    "expr": "20",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "27",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf20qYf27',float('-7.000000'),float('-27.000000'),float('-inf'),float('47.000000'),float('27.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -2269.2147961509354,
                4049.483514057035
            ],
            "name": "upper_eyelid",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 25
        },
        {
            "datums": [
                {
                    "expr": "-upper_eyelid.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__25.__2]",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf-20qYf27',float('-47.000000'),float('-27.000000'),float('-inf'),float('7.000000'),float('27.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1830.3449527258192,
                4296.4119708947055
            ],
            "name": "lower_eyelid",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 26
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.75",
                    "name": "s",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__28.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27',float('-7.000000'),float('-20.250000'),float('-inf'),float('7.000000'),float('20.250000'),float('inf'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1046.0352183599996,
                3978.6492331468044
            ],
            "name": "s3",
            "script": [
                "import fab",
                "",
                "title('Scale (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('s', float)",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_y(shape, y0, s))",
                "",
                "# UI",
                "kwargs = {'color':sb.color.teal}",
                "sb.ui.wireframe([(_x + 0.2*s, y0, _z), (_x - 0.2*s, y0, _z)], **kwargs)",
                "sb.ui.wireframe([(_x, y0, _z), (_x, y0 + s, _z)], **kwargs)",
                "sb.ui.wireframe([(_x - 0.1*s, y0 + 0.9*s, _z), (_x, y0 + s, _z),",
                "                  (_x + 0.1*s, y0 + 0.9*s, _z)], **kwargs)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "sb.ui.point(_x, y0 + s, _z, color=sb.color.teal, drag=(None,s,None))",
                ""
            ],
            "uid": 27
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__25.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__26.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf20qYf27-r+q-Xf-20qYf27',float('-7.000000'),float('-27.000000'),float('-inf'),float('7.000000'),float('27.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1397.7640615004634,
                4185.045672350758
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 28
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.95",
                    "name": "sx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.95",
                    "name": "sy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__27.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/-Xf0f0.95+f0/-Yf0f0.95_mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27',float('-6.650000'),float('-19.237499'),float('-inf'),float('6.650000'),float('19.237499'),float('inf'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -669.8384830113417,
                4222.92031855367
            ],
            "name": "s4",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "",
                "title('Scale (2D)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('sx', float)",
                "input('sy', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_xy(shape, x0, y0, sx, sy))",
                "",
                "# UI",
                "sb.ui.wireframe([(x0 + sx, y0, _z), (x0, y0, _z), (x0, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sx, y0 + sx/10, _z), (x0 + sx, y0 - sx/10, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sy/10, y0 + sy, _z), (x0 - sy/10, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.point(x0, y0, _z, color=sb.color.teal)",
                "sb.ui.point(x0 + sx, y0, _z, color=sb.color.teal, drag=(sx, None, None))",
                "sb.ui.point(x0, y0 + sy, _z, color=sb.color.teal, drag=(None, sy, None))",
                ""
            ],
            "uid": 29
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__27.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__29.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('amX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27nm+f0/-Xf0f0.95+f0/-Yf0f0.95_mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27',float('-7.000000'),float('-20.250000'),float('-inf'),float('7.000000'),float('20.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -253.44615121967863,
                4112.030520598566
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 30
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "10.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf5.25',float('-5.250000'),float('-5.250000'),float('-inf'),float('5.250000'),float('5.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -934.6959589566812,
                1416.5674634816287
            ],
            "name": "pupil",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 31
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__31.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__31.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "pupil.r-0.5",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf4.75',float('-4.750000'),float('-4.750000'),float('-inf'),float('4.750000'),float('4.750000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -586.3309213785967,
                1648.6990322365427
            ],
            "name": "lens",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 32
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__31.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__32.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXqYf5.25n-r+qXqYf4.75',float('-5.250000'),float('-5.250000'),float('-inf'),float('5.250000'),float('5.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -235.404234359828,
                1546.224193700412
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 33
        },
        {
            "datums": [
                {
                    "expr": "3",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.5",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "5",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f2.75X-Xf3.25a-f-2.5Y-Yf2.5',float('2.750000'),float('-2.500000'),float('-inf'),float('3.250000'),float('2.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1330.648534563796,
                1947.2163889633212
            ],
            "name": "insa",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 34
        },
        {
            "datums": [
                {
                    "expr": "insa.x0-self.width/2+self.height/2",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "insa.y0-insa.height/2-self.height/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "2",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__34.__2]",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5',float('1.250000'),float('-3.000000'),float('-inf'),float('3.250000'),float('-2.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -951.268845518359,
                2237.7806037627406
            ],
            "name": "r3",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 35
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__35.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f0Y_aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5',float('1.250000'),float('-3.000000'),float('-inf'),float('3.250000'),float('3.000000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -606.7717666319709,
                2235.183353732319
            ],
            "name": "m2",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 36
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__34.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__36.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaa-f2.75X-Xf3.25a-f-2.5Y-Yf2.5im_-*f2f0Y_aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5',float('1.250000'),float('-3.000000'),float('-inf'),float('3.250000'),float('3.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -232.7160974588807,
                2126.5635435135127
            ],
            "name": "u1",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 37
        },
        {
            "datums": [
                {
                    "expr": "upper_eyelid.x0-1",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "upper_eyelid.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "upper_eyelid.r",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf19qYf27',float('-8.000000'),float('-27.000000'),float('-inf'),float('46.000000'),float('27.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -3870.5556338535034,
                5839.7503619969575
            ],
            "name": "awen_base",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 38
        },
        {
            "datums": [
                {
                    "expr": "awen_base.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__38.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "awen_base.r-0.5",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf19qYf26.5',float('-7.500000'),float('-26.500000'),float('-inf'),float('45.500000'),float('26.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -3409.653600799863,
                6091.231462398446
            ],
            "name": "c1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 39
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__38.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__39.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf19qYf27n-r+q-Xf19qYf26.5',float('-8.000000'),float('-27.000000'),float('-inf'),float('46.000000'),float('27.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -3060.3867482738724,
                5973.70768782407
            ],
            "name": "d3",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 40
        },
        {
            "datums": [
                {
                    "expr": "awen_base.x0-awen_base.r-1.5",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "awen_base.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "awen_base.x0-awen_base.r+0.1",
                    "name": "x1",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "awen_base.y0-1",
                    "name": "y1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.x1",
                    "name": "x2",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "awen_base.y0+1",
                    "name": "y2",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-9.500000'),float('-1.000000'),float('-inf'),float('-7.900000'),float('1.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -3409.6315268644566,
                5319.827598023709
            ],
            "name": "awen_spike",
            "script": [
                "import fab",
                "",
                "title('Triangle')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('x1', float)",
                "input('y1', float)",
                "input('x2', float)",
                "input('y2', float)",
                "",
                "output('shape', fab.shapes.triangle(x0, y0, x1, y1, x2, y2))",
                "",
                "# UI",
                "sb.ui.wireframe([(x0, y0, 0), (x1, y1, 0), (x2, y2, 0)], close=True)",
                "sb.ui.point(x0, y0, 0)",
                "sb.ui.point(x1, y1, 0)",
                "sb.ui.point(x2, y2, 0)",
                ""
            ],
            "uid": 41
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__41.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-8.500000'),float('-1.000000'),float('-inf'),float('-6.900000'),float('1.000000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -2642.690670957376,
                5478.346038052419
            ],
            "name": "t10",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 42
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__45.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__42.__7]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-9.500000'),float('-2.000000'),float('-inf'),float('-6.000000'),float('2.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -2273.1189133727066,
                5641.861498750957
            ],
            "name": "d4",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 43
        },
        {
            "datums": [
                {
                    "expr": "awen_base.x0-awen_base.r",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "awen_base.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "4",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "4",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-10X-Xf-6a-f-2Y-Yf2',float('-10.000000'),float('-2.000000'),float('-inf'),float('-6.000000'),float('2.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -3208.3975874127473,
                6492.688975977217
            ],
            "name": "awen_mask",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 44
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__40.__2,__41.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__44.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2',float('-9.500000'),float('-2.000000'),float('-inf'),float('-6.000000'),float('2.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -2644.3473524143737,
                5849.138649050576
            ],
            "name": "i1",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 45
        },
        {
            "datums": [
                {
                    "expr": "upper_eyelid.x0*.95",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "upper_eyelid.y0*.95",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "13",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__43.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-9.219446'),float('-8.359843'),float('-inf'),float('-4.909348'),float('-3.675035'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1827.5514237212042,
                6099.854254042366
            ],
            "name": "r2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 46
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__43.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__48.__5,__50.__5,__51.__4,__57.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iiim-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-9.500000'),float('-13.951778'),float('-inf'),float('9.671287'),float('13.951778'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -227.52061550501003,
                5716.406720495441
            ],
            "name": "u2",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 47
        },
        {
            "datums": [
                {
                    "expr": "awen_mask.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "awen_mask.y0-2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "5",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__46.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-9.068817'),float('-8.441926'),float('-inf'),float('-4.366811'),float('-3.399293'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1444.5100832494036,
                6093.345646287122
            ],
            "name": "r4",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 48
        },
        {
            "datums": [
                {
                    "expr": "upper_eyelid.x0*.95",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "upper_eyelid.y0*.95",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "26",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__43.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-7.492371'),float('-14.291162'),float('-inf'),float('-2.593109'),float('-9.161687'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1836.9481714930553,
                6512.777605484916
            ],
            "name": "r5",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 49
        },
        {
            "datums": [
                {
                    "expr": "awen_mask.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "awen_mask.y0-7",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "14",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__49.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-6.984490'),float('-13.951778'),float('-inf'),float('-0.989823'),float('-7.789431'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1453.9068310212551,
                6506.268997729672
            ],
            "name": "r6",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 50
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "upper_eyelid.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__48.__5,__50.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f0Y_im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-9.068817'),float('-13.951778'),float('-inf'),float('-0.989823'),float('13.951778'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -743.2574803359291,
                6429.565574095284
            ],
            "name": "m3",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 51
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-.25",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "-4",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__55.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('5.750000'),float('-6.000000'),float('-inf'),float('9.250000'),float('-2.000000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -1469.5942385006706,
                7051.500575154423
            ],
            "name": "t6",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 53
        },
        {
            "datums": [
                {
                    "expr": "-awen_spike.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "-4",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-12",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__53.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('5.416121'),float('-5.904318'),float('-inf'),float('9.671287'),float('-1.264034'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1120.789745873234,
                7056.916793984041
            ],
            "name": "r7",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 54
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__43.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('6.000000'),float('-2.000000'),float('-inf'),float('9.500000'),float('2.000000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1859.5976672835122,
                7047.92428986117
            ],
            "name": "r8",
            "script": [
                "import fab",
                "",
                "title('Reflect (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 55
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-.25",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "-8",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__55.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('5.750000'),float('-10.000000'),float('-inf'),float('9.250000'),float('-6.000000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -1473.3277534869244,
                7411.705207303887
            ],
            "name": "t11",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 52
        },
        {
            "datums": [
                {
                    "expr": "-awen_spike.x0-4",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "-5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-32",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__52.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('3.062417'),float('-11.227436'),float('-inf'),float('8.150261'),float('-5.980528'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1117.9878580258292,
                7459.929739448769
            ],
            "name": "r9",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 56
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__54.__5,__56.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f0Y_im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('3.062417'),float('-11.227436'),float('-inf'),float('9.671287'),float('11.227436'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -667.0707826438427,
                7331.75026624374
            ],
            "name": "m4",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 57
        },
        {
            "datums": [
                {
                    "expr": "9.25",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "3",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.25",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125',float('7.750000'),float('-0.125000'),float('-inf'),float('10.750000'),float('0.125000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1106.9930345319665,
                4853.757182685851
            ],
            "name": "utala_long",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 58
        },
        {
            "datums": [
                {
                    "expr": "utala_long.x0+utala_long.width/2-.1",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "utala_long.y0+utala_long.height+self.width/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.25",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1.25",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f10.525X-Xf10.775a-f-0.25Y-Yf1',float('10.525000'),float('-0.250000'),float('-inf'),float('10.775000'),float('1.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1506.3588009489424,
                5190.521566866213
            ],
            "name": "utala_short",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 59
        },
        {
            "datums": [
                {
                    "expr": "utala_short.x0-0.5",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "utala_short.y0-0.5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "36",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__59.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1',float('9.792123'),float('-0.005708'),float('-inf'),float('10.729109'),float('1.152510'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1006.2904257158432,
                5194.4918739987515
            ],
            "name": "r10",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 60
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__58.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__58.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "30",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__58.__4,__60.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1',float('7.374707'),float('-0.858253'),float('-inf'),float('10.611538'),float('1.748102'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -655.1097240793003,
                4880.016499934391
            ],
            "name": "r11",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 61
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__61.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f0Y_m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1',float('7.374707'),float('-1.748102'),float('-inf'),float('10.611538'),float('1.748102'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -284.64537230640894,
                4936.150325072253
            ],
            "name": "m5",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 62
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__4.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "64",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "64",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "64",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.625X-Xf12.625a-f-37.5Y-Yf37.5a-f-1.5Z-Zf-0.5',float('-12.625000'),float('-37.500000'),float('-1.500000'),float('12.625000'),float('37.500000'),float('-0.500000'),color=(64,64,64))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1274.577262862743,
                -105.63454842123338
            ],
            "name": "s2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y - slide.height/2+self.height/2+(slide.width-self.width)/2-0.5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "22",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.width",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1',float('-11.000000'),float('-36.375000'),float('-inf'),float('11.000000'),float('-14.375000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -845.6119446858473,
                765.7992065388735
            ],
            "name": "label",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__1.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f0Y_iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1',float('-11.000000'),float('-36.375000'),float('-inf'),float('11.000000'),float('36.375000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -257.52380054525213,
                955.3893725502003
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "13.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf6.75',float('-6.750000'),float('-6.750000'),float('-inf'),float('6.750000'),float('6.750000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -944.4658130520485,
                199.77917501598677
            ],
            "name": "ring",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__3.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ring.r-1.0",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf5.75',float('-5.750000'),float('-5.750000'),float('-inf'),float('5.750000'),float('5.750000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -596.9308049452378,
                448.1707605647198
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__5.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXqYf6.75n-r+qXqYf5.75',float('-6.750000'),float('-6.750000'),float('-inf'),float('6.750000'),float('6.750000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -246.68752749138775,
                329.7661458455648
            ],
            "name": "d5",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__62.__4,__30.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__47.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiim_-*f2f0Y_m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1amX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27nm+f0/-Xf0f0.95+f0/-Yf0f0.95_mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27iaaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iiim-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1',float('-9.500000'),float('-20.250000'),float('-inf'),float('10.611538'),float('20.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                524.6537239063612,
                3605.785212102144
            ],
            "name": "Inked",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__33.__2,__2.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__37.__2,__6.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iia-r+qXqYf5.25n-r+qXqYf4.75im_-*f2f0Y_iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiaa-f2.75X-Xf3.25a-f-2.5Y-Yf2.5im_-*f2f0Y_aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5aa-f1.25X-Xf3.25a-f-3Y-Yf-2.5a-r+qXqYf6.75n-r+qXqYf5.75',float('-11.000000'),float('-36.375000'),float('-inf'),float('11.000000'),float('36.375000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                559.2169039941365,
                1866.6841931253402
            ],
            "name": "Etched",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "slide.x-50/2",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.x+50/2",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.y-50/2",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.y+50/2",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "-0.1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0.1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "10",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "20",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "0.0001",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "0.7",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 0.6283185307179586)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /62831.85307179586) + sin(Z / 62831.85307179586)*cos(X / 0.6283185307179586)) - 0.7;am__f1aa-f-25X-Xf25a-f-25Y-Yf25a-f-0.1Z-Zf0.1',float('-25.000000'),float('-25.000000'),float('-0.100000'),float('25.000000'),float('25.000000'),float('0.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                -1777.2329392053612,
                2907.1834376518786
            ],
            "name": "g0",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__9.__10]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 0.6283185307179586)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /62831.85307179586) + sin(Z / 62831.85307179586)*cos(X / 0.6283185307179586)) - 0.7;am__f1aa-f-25X-Xf25a-f-25Y-Yf25a-f-0.1Z-Zf0.1',float('-25.000000'),float('-25.000000'),float('-0.100000'),float('25.000000'),float('25.000000'),float('0.100000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1390.9358534127819,
                2904.883128184971
            ],
            "name": "r0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('mXYf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 0.6283185307179586)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /62831.85307179586) + sin(Z / 62831.85307179586)*cos(X / 0.6283185307179586)) - 0.7;am__f1aa-f-25X-Xf25a-f-25Y-Yf25a-f-0.1Z-Zf0.1',float('-25.000000'),float('-25.000000'),float('-inf'),float('25.000000'),float('25.000000'),float('inf'))",
                    "name": "slice",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1027.38313458708,
                2902.299942148378
            ],
            "name": "s0",
            "script": [
                "# Neil Gershenfeld 7/12/15",
                "",
                "import fab",
                "from fab.types import Shape",
                "",
                "title('Slice (XY)')",
                "",
                "def slice_xy(shape,z):",
                "    return Shape(('mXYf%g' % z) + shape.math,",
                "       shape.bounds.xmin,shape.bounds.ymin,",
                "       shape.bounds.xmax,shape.bounds.ymax)",
                "",
                "input('shape',fab.types.Shape)",
                "input('z',float)",
                "",
                "output('slice',slice_xy(shape,z))",
                "",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__11.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__27.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('amXYf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 0.6283185307179586)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /62831.85307179586) + sin(Z / 62831.85307179586)*cos(X / 0.6283185307179586)) - 0.7;am__f1aa-f-25X-Xf25a-f-25Y-Yf25a-f-0.1Z-Zf0.1mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27',float('-7.000000'),float('-20.250000'),float('-inf'),float('7.000000'),float('20.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -681.518883095077,
                3092.7540826737027
            ],
            "name": "i2",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__12.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__15.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aamXYf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 0.6283185307179586)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /62831.85307179586) + sin(Z / 62831.85307179586)*cos(X / 0.6283185307179586)) - 0.7;am__f1aa-f-25X-Xf25a-f-25Y-Yf25a-f-0.1Z-Zf0.1mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27n-r+qXqYf6.75',float('-7.000000'),float('-20.250000'),float('-inf'),float('7.000000'),float('20.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -253.6213813536392,
                3269.4669152512884
            ],
            "name": "d6",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "13.5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf6.75',float('-6.750000'),float('-6.750000'),float('-inf'),float('6.750000'),float('6.750000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -673.9454759846085,
                3393.165898055598
            ],
            "name": "c2",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__19.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__13.__2,__14.__1,__6.__2,__2.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaa-f-13.125X-Xf13.125a-f-38Y-Yf38niiiaamXYf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 0.6283185307179586)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /62831.85307179586) + sin(Z / 62831.85307179586)*cos(X / 0.6283185307179586)) - 0.7;am__f1aa-f-25X-Xf25a-f-25Y-Yf25a-f-0.1Z-Zf0.1mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27n-r+qXqYf6.75iiim_-*f2f0Y_m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1amX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27nm+f0/-Xf0f0.95+f0/-Yf0f0.95_mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27iaaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iiim-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1a-r+qXqYf6.75n-r+qXqYf5.75im_-*f2f0Y_iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1',float('-13.125000'),float('-38.000000'),float('-inf'),float('13.125000'),float('38.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1644.7001286062582,
                2347.5400180218267
            ],
            "name": "d7",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 17
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__17.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aaa-f-13.125X-Xf13.125a-f-38Y-Yf38niiiaamXYf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 0.6283185307179586)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /62831.85307179586) + sin(Z / 62831.85307179586)*cos(X / 0.6283185307179586)) - 0.7;am__f1aa-f-25X-Xf25a-f-25Y-Yf25a-f-0.1Z-Zf0.1mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27n-r+qXqYf6.75iiim_-*f2f0Y_m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1amX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27nm+f0/-Xf0f0.95+f0/-Yf0f0.95_mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27iaaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iiim-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1a-r+qXqYf6.75n-r+qXqYf5.75im_-*f2f0Y_iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1',float('-13.125000'),float('-38.000000'),float('-inf'),float('13.125000'),float('38.000000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1992.092962715417,
                2336.255364810561
            ],
            "name": "Back_Mask",
            "script": [
                "import fab",
                "",
                "title('Heightmap (.png)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.heightmap(shape)",
                ""
            ],
            "uid": 18
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__18.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "128",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "128",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "128",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aaa-f-13.125X-Xf13.125a-f-38Y-Yf38niiiaamXYf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 0.6283185307179586)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /62831.85307179586) + sin(Z / 62831.85307179586)*cos(X / 0.6283185307179586)) - 0.7;am__f1aa-f-25X-Xf25a-f-25Y-Yf25a-f-0.1Z-Zf0.1mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27n-r+qXqYf6.75iiim_-*f2f0Y_m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1m-Xf9.25-Yf0-Zf0m+*f0.866025X*f0.5Y+*f-0.5X*f0.866025Y_m-Xf-9.25-Yf-0-Zf0iaa-f7.75X-Xf10.75a-f-0.125Y-Yf0.125m-Xf10.15-Yf-0.125-Zf0m+*f0.809017X*f0.587785Y+*f-0.587785X*f0.809017Y_m-Xf-10.15-Yf0.125-Zf0aa-f10.525X-Xf10.775a-f-0.25Y-Yf1amX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27nm+f0/-Xf0f0.95+f0/-Yf0f0.95_mX/Yf0.75_a-r+q-Xf20qYf27-r+q-Xf-20qYf27iaaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1iiim-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf-8-Yf-2-Zf0m+*f0.996195X*f0.0871557Y+*f-0.0871557X*f0.996195Y_m-Xf8-Yf2-Zf0m-Xf19-Yf0-Zf0m+*f0.97437X*f0.224951Y+*f-0.224951X*f0.97437Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf-8-Yf-7-Zf0m+*f0.970296X*f0.241922Y+*f-0.241922X*f0.970296Y_m-Xf8-Yf7-Zf0m-Xf19-Yf0-Zf0m+*f0.898794X*f0.438371Y+*f-0.438371X*f0.898794Y_m-Xf-19-Yf-0-Zf0aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im_-*f2f0Y_im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1im-Xf9.5-Yf-4-Zf0m+*f0.978148X*f-0.207912Y+*f0.207912X*f0.978148Y_m-Xf-9.5-Yf4-Zf0m-Xf-0.25-Yf-4-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1m-Xf5.5-Yf-5-Zf0m+*f0.848048X*f-0.529919Y+*f0.529919X*f0.848048Y_m-Xf-5.5-Yf5-Zf0m-Xf-0.25-Yf-8-Zf0m-*f2f0X__aaia-r+q-Xf19qYf27n-r+q-Xf19qYf26.5ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1aa-f-10X-Xf-6a-f-2Y-Yf2nm-Xf1-Yf0-Zf0ni-*f1-Xf-7.9*f-1.6-Yf-1i-*f1-Xf-9.5*f1.6-Yf0-*f-2-Xf-7.9*f0-Yf1a-r+qXqYf6.75n-r+qXqYf5.75im_-*f2f0Y_iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1iiiiiaa-f-11X-Xf11a-f-35.275Y-Yf-15.475aa-f-9.9X-Xf9.9a-f-36.375Y-Yf-14.375-r+q-Xf-9.9q-Yf-35.275f1.1-r+q-Xf-9.9q-Yf-15.475f1.1-r+q-Xf9.9q-Yf-35.275f1.1-r+q-Xf9.9q-Yf-15.475f1.1',float('-13.125000'),float('-38.000000'),float('-inf'),float('13.125000'),float('38.000000'),float('inf'),color=(128,128,128))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2439.616493727738,
                2338.1482635618117
            ],
            "name": "s1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 21
        }
    ],
    "protocol": 6,
    "type": "sb"
}
