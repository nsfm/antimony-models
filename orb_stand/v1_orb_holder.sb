{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "30",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "6",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0-r+q-f30r+qXqYqZf6',float('-36.000000'),float('-36.000000'),float('-6.000000'),float('36.000000'),float('36.000000'),float('6.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -78,
                -98
            ],
            "name": "t0",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__2.__6,__4.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('am-Xf0-Yf0-Zf0-r+q-f30r+qXqYqZf6niam__f1aa-f-36X-Xf36a-f-36Y-Yf36a-f-7Z-Zf-5aam__f1-r+qXqYf31a-f-6Z-Zf-3nam__f1-r+qXqYf27a-f-6Z-Zf-3',float('-36.000000'),float('-36.000000'),float('-6.000000'),float('36.000000'),float('36.000000'),float('6.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                388.6007744847517,
                180.94241458014187
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "t0.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "t0.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "t0.z-t0.r",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "t0.R*2+t0.r*2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "t0.R*2+t0.r*2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-36X-Xf36a-f-36Y-Yf36a-f-7Z-Zf-5',float('-36.000000'),float('-36.000000'),float('-7.000000'),float('36.000000'),float('36.000000'),float('-5.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -62,
                321
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('am-Xf0-Yf0-Zf0-r+q-f30r+qXqYqZf6niam__f1aa-f-36X-Xf36a-f-36Y-Yf36a-f-7Z-Zf-5aam__f1-r+qXqYf31a-f-6Z-Zf-3nam__f1-r+qXqYf27a-f-6Z-Zf-3',float('-36.000000'),float('-36.000000'),float('-6.000000'),float('36.000000'),float('36.000000'),float('6.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                839.8083825581543,
                192.35132115478683
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "t0.z-t0.r",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+3",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "t0.R-t0.r+3",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+4",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf31a-f-6Z-Zf-3nam__f1-r+qXqYf27a-f-6Z-Zf-3',float('-31.000000'),float('-31.000000'),float('-6.000000'),float('31.000000'),float('31.000000'),float('-3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -69.14589976152467,
                820.9504098959203
            ],
            "name": "r0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 4
        }
    ],
    "protocol": 6,
    "type": "sb"
}
