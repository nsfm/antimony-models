{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "14/2",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf7',float('-7.000000'),float('-7.000000'),float('-inf'),float('7.000000'),float('7.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -752.522081339455,
                -3102.395708859817
            ],
            "name": "toki",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__0.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "toki.r-.75",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf6.25',float('-6.250000'),float('-6.250000'),float('-inf'),float('6.250000'),float('6.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -431.52208133945544,
                -2793.395708859817
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__1.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXqYf7n-r+qXqYf6.25',float('-7.000000'),float('-7.000000'),float('-inf'),float('7.000000'),float('7.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -15.522081339455212,
                -2964.395708859817
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "toki.r*2+1",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.width",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-7.5X-Xf7.5a-f-6.75Y-Yf6.75aa-f-6.75X-Xf6.75a-f-7.5Y-Yf7.5-r+q-Xf-6.75q-Yf-6.75f0.75-r+q-Xf-6.75q-Yf6.75f0.75-r+q-Xf6.75q-Yf-6.75f0.75-r+q-Xf6.75q-Yf6.75f0.75',float('-7.500000'),float('-7.500000'),float('-inf'),float('7.500000'),float('7.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -792.5357046335957,
                -1005.7124184825427
            ],
            "name": "sona",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax,0.1))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__3.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "sona.width-1.5",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "sona.height-1.5",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-6.75X-Xf6.75a-f-6.075Y-Yf6.075aa-f-6.075X-Xf6.075a-f-6.75Y-Yf6.75-r+q-Xf-6.075q-Yf-6.075f0.675-r+q-Xf-6.075q-Yf6.075f0.675-r+q-Xf6.075q-Yf-6.075f0.675-r+q-Xf6.075q-Yf6.075f0.675',float('-6.750000'),float('-6.750000'),float('-inf'),float('6.750000'),float('6.750000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -358.6113778707281,
                -696.5120041827689
            ],
            "name": "r0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, 0.1))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__4.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiaa-f-7.5X-Xf7.5a-f-6.75Y-Yf6.75aa-f-6.75X-Xf6.75a-f-7.5Y-Yf7.5-r+q-Xf-6.75q-Yf-6.75f0.75-r+q-Xf-6.75q-Yf6.75f0.75-r+q-Xf6.75q-Yf-6.75f0.75-r+q-Xf6.75q-Yf6.75f0.75niiiiiaa-f-6.75X-Xf6.75a-f-6.075Y-Yf6.075aa-f-6.075X-Xf6.075a-f-6.75Y-Yf6.75-r+q-Xf-6.075q-Yf-6.075f0.675-r+q-Xf-6.075q-Yf6.075f0.675-r+q-Xf6.075q-Yf-6.075f0.675-r+q-Xf6.075q-Yf6.075f0.675',float('-7.500000'),float('-7.500000'),float('-inf'),float('7.500000'),float('7.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7.38862212927188,
                -832.512004182769
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__3.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__5.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aiiiiiaa-f-7.5X-Xf7.5a-f-6.75Y-Yf6.75aa-f-6.75X-Xf6.75a-f-7.5Y-Yf7.5-r+q-Xf-6.75q-Yf-6.75f0.75-r+q-Xf-6.75q-Yf6.75f0.75-r+q-Xf6.75q-Yf-6.75f0.75-r+q-Xf6.75q-Yf6.75f0.75niiiiiaa-f-6.75X-Xf6.75a-f-6.075Y-Yf6.075aa-f-6.075X-Xf6.075a-f-6.75Y-Yf6.75-r+q-Xf-6.075q-Yf-6.075f0.675-r+q-Xf-6.075q-Yf6.075f0.675-r+q-Xf6.075q-Yf-6.075f0.675-r+q-Xf6.075q-Yf6.075f0.675',float('-10.606606'),float('-10.606606'),float('-inf'),float('10.606606'),float('10.606606'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                365.3886221292719,
                -1019.512004182769
            ],
            "name": "r1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "toki.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "toki.y0+toki.r+7",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "1",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "5",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5',float('-0.500000'),float('11.500000'),float('-inf'),float('0.500000'),float('16.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -903.3265690792018,
                -3683.034378682407
            ],
            "name": "toki_marks",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, width))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "toki.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "toki.y0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__7.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5',float('-12.020820'),float('7.778178'),float('-inf'),float('-7.778178'),float('12.020820'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -379.9254040265588,
                -3789.4380334159096
            ],
            "name": "r3",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "toki.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "toki.y0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__7.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5',float('7.778178'),float('7.778178'),float('-inf'),float('12.020820'),float('12.020820'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -377.49952897753553,
                -3434.924338651681
            ],
            "name": "r4",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__8.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__5,__9.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5im-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5',float('-12.020820'),float('7.778178'),float('-inf'),float('12.020820'),float('16.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                49.252232067320364,
                -3493.2766600273762
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "toki.x0-toki.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "toki.x0+toki.r",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "toki.y0-toki.r/2+1",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "toki.y0+toki.r",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "-1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "3.2",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "4",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "0.01",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "0.3",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 1.9634954084936207)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /628.3185307179587) + sin(Z / 628.3185307179587)*cos(X / 1.9634954084936207)) - 0.3;am__f1aa-f-7X-Xf7a-f-2.5Y-Yf7a-f-1Z-Zf1',float('-7.000000'),float('-2.500000'),float('-1.000000'),float('7.000000'),float('7.000000'),float('1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                -1017.6446060843055,
                -2266.5567859227262
            ],
            "name": "kon",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "toki.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "toki.y0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__11.__10]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 1.9634954084936207)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /628.3185307179587) + sin(Z / 628.3185307179587)*cos(X / 1.9634954084936207)) - 0.3;am__f1aa-f-7X-Xf7a-f-2.5Y-Yf7a-f-1Z-Zf1',float('-7.000000'),float('-7.000000'),float('-1.000000'),float('2.500000'),float('7.000000'),float('1.000000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -606.249637143681,
                -2047.1620916943689
            ],
            "name": "r2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "toki.r/3+.25",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__12.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf2.58333-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 1.9634954084936207)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /628.3185307179587) + sin(Z / 628.3185307179587)*cos(X / 1.9634954084936207)) - 0.3;am__f1aa-f-7X-Xf7a-f-2.5Y-Yf7a-f-1Z-Zf1',float('-4.416670'),float('-7.000000'),float('-1.000000'),float('5.083330'),float('7.000000'),float('1.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -211.76423579765992,
                -2057.507693368289
            ],
            "name": "t0",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "toki.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "toki.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "toki.r",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf7',float('-7.000000'),float('-7.000000'),float('-inf'),float('7.000000'),float('7.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -31.478125273795513,
                -1615.2047182866636
            ],
            "name": "toki_mask",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__13.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('mXYf0m-Xf2.58333-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 1.9634954084936207)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /628.3185307179587) + sin(Z / 628.3185307179587)*cos(X / 1.9634954084936207)) - 0.3;am__f1aa-f-7X-Xf7a-f-2.5Y-Yf7a-f-1Z-Zf1',float('-4.416670'),float('-7.000000'),float('-inf'),float('5.083330'),float('7.000000'),float('inf'))",
                    "name": "slice",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                166.71020110091763,
                -2031.8481274584983
            ],
            "name": "s0",
            "script": [
                "# Neil Gershenfeld 7/12/15",
                "",
                "import fab",
                "from fab.types import Shape",
                "",
                "title('Slice (XY)')",
                "",
                "def slice_xy(shape,z):",
                "    return Shape(('mXYf%g' % z) + shape.math,",
                "       shape.bounds.xmin,shape.bounds.ymin,",
                "       shape.bounds.xmax,shape.bounds.ymax)",
                "",
                "input('shape',fab.types.Shape)",
                "input('z',float)",
                "",
                "output('slice',slice_xy(shape,z))",
                "",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__15.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__14.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('amXYf0m-Xf2.58333-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 1.9634954084936207)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /628.3185307179587) + sin(Z / 628.3185307179587)*cos(X / 1.9634954084936207)) - 0.3;am__f1aa-f-7X-Xf7a-f-2.5Y-Yf7a-f-1Z-Zf1-r+qXqYf7',float('-4.416670'),float('-7.000000'),float('-inf'),float('5.083330'),float('7.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                532.3908124647462,
                -1813.869131108073
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "toki.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "toki.y0-toki.r*4",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "2",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-28f2',float('-2.000000'),float('-30.000000'),float('-inf'),float('2.000000'),float('-26.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -785.1160243308852,
                1273.970318342269
            ],
            "name": "meso_dot",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 17
        },
        {
            "datums": [
                {
                    "expr": "meso_dot.x0-toki.r+self.width/2+1",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__17.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "1",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "toki.r*3-2",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5',float('-6.000000'),float('-37.500000'),float('-inf'),float('-5.000000'),float('-18.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -361.02704286764333,
                1504.6278986133889
            ],
            "name": "meso",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, width))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 18
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__17.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__18.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5',float('-6.000000'),float('-37.500000'),float('-inf'),float('6.000000'),float('-18.500000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                76.41177760026642,
                1229.0406542048136
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 19
        },
        {
            "datums": [
                {
                    "expr": "meso.x0-3",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "meso.y0-meso.height/4",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "meso.width",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "meso.height*1.5",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-9X-Xf-8a-f-46.5Y-Yf-19aa-f-8.5X-Xf-8.5a-f-47Y-Yf-18.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5',float('-9.000000'),float('-47.000000'),float('-inf'),float('-8.000000'),float('-18.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                179.46387591688406,
                2075.472068554199
            ],
            "name": "ken",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, width))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 20
        },
        {
            "datums": [
                {
                    "expr": "ken.x0-ken.width/2",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "meso_dot.y0+3",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "2",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf-9q-Yf-25f2',float('-11.000000'),float('-27.000000'),float('-inf'),float('-7.000000'),float('-23.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1543.0120126856932,
                2477.946487387154
            ],
            "name": "ken_curve",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 21
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__21.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__21.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ken_curve.r/2",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf-9q-Yf-25f1',float('-10.000000'),float('-26.000000'),float('-inf'),float('-8.000000'),float('-24.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1090.3763647359299,
                2784.063286988
            ],
            "name": "c1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 22
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__21.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__22.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1',float('-11.000000'),float('-27.000000'),float('-inf'),float('-7.000000'),float('-23.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -655.219407581849,
                2674.7524243618473
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 23
        },
        {
            "datums": [
                {
                    "expr": "ken_curve.x0-self.width/2",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ken_curve.y0-self.height/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ken_curve.r",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.width",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-11X-Xf-9a-f-27Y-Yf-25',float('-11.000000'),float('-27.000000'),float('-inf'),float('-9.000000'),float('-25.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -655.219407581849,
                2925.1821928395357
            ],
            "name": "r5",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 24
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__23.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__24.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25',float('-11.000000'),float('-27.000000'),float('-inf'),float('-9.000000'),float('-25.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -215.30095497085122,
                2810.9176596938223
            ],
            "name": "i1",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 25
        },
        {
            "datums": [
                {
                    "expr": "ken_curve.x0-ken_curve.r/2-self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ken_curve.y0+self.height/2-self.r/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ken_curve.r/2",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "22",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-11X-Xf-10a-f-25Y-Yf-4aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf-3.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5',float('-11.000000'),float('-25.500000'),float('-inf'),float('-10.000000'),float('-3.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -420.6589425638424,
                2170.499769838244
            ],
            "name": "ken_tip_top",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 26
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "meso_dot.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__25.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f-28Y_aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25',float('-11.000000'),float('-31.000000'),float('-inf'),float('-9.000000'),float('-25.000000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                177.17995311281072,
                2819.08248612001
            ],
            "name": "m1",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 27
        },
        {
            "datums": [
                {
                    "expr": "ken_curve.x0-ken_curve.r/2-self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ken_curve.y0+self.height/2-self.r/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ken_curve.r/2",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "40",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5',float('-11.000000'),float('-25.500000'),float('-inf'),float('-10.000000'),float('14.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -427.671638661067,
                3460.0975548652086
            ],
            "name": "ken_tip_bottom",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 28
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "meso_dot.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__28.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f-28Y_iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5',float('-11.000000'),float('-70.500000'),float('-inf'),float('-10.000000'),float('-30.500000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                218.49650077749902,
                3509.311870635979
            ],
            "name": "r6",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 29
        },
        {
            "datums": [
                {
                    "expr": "meso_dot.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__29.__4,__27.__4,__26.__5,__20.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__iiim_-*f2f-28Y_iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5im_-*f2f-28Y_aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25iiiiiaa-f-11X-Xf-10a-f-25Y-Yf-4aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf-3.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5iiiiiaa-f-9X-Xf-8a-f-46.5Y-Yf-19aa-f-8.5X-Xf-8.5a-f-47Y-Yf-18.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5iiim_-*f2f-28Y_iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5im_-*f2f-28Y_aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25iiiiiaa-f-11X-Xf-10a-f-25Y-Yf-4aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf-3.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5iiiiiaa-f-9X-Xf-8a-f-46.5Y-Yf-19aa-f-8.5X-Xf-8.5a-f-47Y-Yf-18.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5',float('-11.000000'),float('-70.500000'),float('-inf'),float('11.000000'),float('-3.500000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                747.9298227455259,
                2826.255147819641
            ],
            "name": "m2",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 30
        },
        {
            "datums": [
                {
                    "expr": "meso_dot.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "meso.y0-meso.height/2-5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "meso.width",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "20",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.width",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-0.5X-Xf0.5a-f-52Y-Yf-33aa-f0X-Xf0a-f-52.5Y-Yf-32.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5',float('-0.500000'),float('-52.500000'),float('-inf'),float('0.500000'),float('-32.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1178.7641057008714,
                4284.679381570192
            ],
            "name": "nasin",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 31
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__31.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "nasin.y+2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__31.__2]",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "7",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.width",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5',float('-0.500000'),float('-44.000000'),float('-inf'),float('0.500000'),float('-37.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -616.223142531154,
                4052.6834207422116
            ],
            "name": "nasin_tip",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 32
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__32.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "nasin_tip.y+nasin_tip.height/2-0.5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__32.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5',float('-0.707107'),float('-42.449749'),float('-inf'),float('4.949749'),float('-36.792892'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -29.933190567711563,
                4046.3707429283377
            ],
            "name": "r7",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 33
        },
        {
            "datums": [
                {
                    "expr": "nasin.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__33.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5',float('-4.949749'),float('-42.449749'),float('-inf'),float('4.949749'),float('-36.792892'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                360.30652403988995,
                4292.2418741695665
            ],
            "name": "m3",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 34
        },
        {
            "datums": [
                {
                    "expr": "nasin.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "nasin.y-nasin.height+7",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "nasin.width",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "15",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.width",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5',float('-0.500000'),float('-63.000000'),float('-inf'),float('0.500000'),float('-48.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -901.0093910575793,
                5002.2155030664535
            ],
            "name": "utala",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 35
        },
        {
            "datums": [
                {
                    "expr": "nasin.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "utala.y-2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "35",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__35.__5,__39.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-57.5-Zf0m+*f0.819152X*f0.573576Y+*f-0.573576X*f0.819152Y_m-Xf-0-Yf57.5-Zf0iiiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5',float('-5.858548'),float('-62.292122'),float('-inf'),float('6.840852'),float('-47.136963'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -4.830103504552994,
                5133.595008089086
            ],
            "name": "r8",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 36
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__35.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__36.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf0-Yf-57.5-Zf0m+*f0.819152X*f0.573576Y+*f-0.573576X*f0.819152Y_m-Xf-0-Yf57.5-Zf0iiiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5m-Xf0-Yf-57.5-Zf0m+*f0.819152X*f0.573576Y+*f-0.573576X*f0.819152Y_m-Xf-0-Yf57.5-Zf0iiiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5',float('-6.840852'),float('-62.292122'),float('-inf'),float('6.840852'),float('-47.136963'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                375.10270328193917,
                4994.74527489457
            ],
            "name": "m4",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 37
        },
        {
            "datums": [
                {
                    "expr": "utala.x-self.width/2+self.height/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "utala.y-utala.height/2+self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "5",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "utala.width",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.height",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5',float('-4.500000'),float('-63.000000'),float('-inf'),float('0.500000'),float('-62.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -954.5228354498813,
                5368.826859687431
            ],
            "name": "utala_tip",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 38
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__35.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "utala.y-utala.height/2+utala.width/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "180",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__38.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5',float('-0.500000'),float('-63.000000'),float('-inf'),float('4.500000'),float('-62.000000'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -381.35055290959104,
                5366.411807935154
            ],
            "name": "r9",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 39
        },
        {
            "datums": [
                {
                    "expr": "utala.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "utala.y-utala.height-3",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "utala.width",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "utala.height+5",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.width",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-0.5X-Xf0.5a-f-83Y-Yf-64aa-f0X-Xf0a-f-83.5Y-Yf-63.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5',float('-0.500000'),float('-83.500000'),float('-inf'),float('0.500000'),float('-63.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1083.1853180224082,
                6134.132723660918
            ],
            "name": "mute",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 40
        },
        {
            "datums": [
                {
                    "expr": "mute.x-3",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "mute.y+4",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__40.__2]",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "mute.height*0.4",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.width",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5',float('-3.500000'),float('-73.500000'),float('-inf'),float('-2.500000'),float('-65.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -529.8163648867105,
                6513.596603718798
            ],
            "name": "mute_side",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 41
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__40.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__41.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5',float('-3.500000'),float('-73.500000'),float('-inf'),float('3.500000'),float('-65.500000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                52.369281810967635,
                6152.621739657156
            ],
            "name": "m5",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 42
        },
        {
            "datums": [
                {
                    "expr": "mute.x-self.width/2+self.height/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "mute.y-mute.height/2+self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "15",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "mute.width",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.height",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5',float('-14.500000'),float('-83.500000'),float('-inf'),float('0.500000'),float('-82.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -973.9083187694199,
                7060.157101942661
            ],
            "name": "ni",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 43
        },
        {
            "datums": [
                {
                    "expr": "mute.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__43.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__43.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-83-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf83-Zf0iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5',float('-10.606606'),float('-83.707108'),float('-inf'),float('0.707107'),float('-72.393394'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -460.34257269069616,
                7113.634553776408
            ],
            "name": "ni_tip",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 44
        },
        {
            "datums": [
                {
                    "expr": "mute.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__44.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__m-Xf0-Yf-83-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf83-Zf0iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5m-Xf0-Yf-83-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf83-Zf0iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5',float('-10.606606'),float('-83.707108'),float('-inf'),float('10.606606'),float('-72.393394'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -70.69997582531519,
                7149.740578520537
            ],
            "name": "m6",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 45
        },
        {
            "datums": [
                {
                    "expr": "ni_tip.x-self.width/2+self.height/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ni_tip.y-2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "6",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "ni.height",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.height",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5',float('-5.500000'),float('-85.500000'),float('-inf'),float('0.500000'),float('-84.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -862.4912763169648,
                7743.535493027156
            ],
            "name": "awen",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 46
        },
        {
            "datums": [
                {
                    "expr": "ni_tip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__46.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__46.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-85-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf85-Zf0iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5',float('-4.242642'),float('-89.242645'),float('-inf'),float('0.707107'),float('-84.292892'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -156.11191346079445,
                7763.8945454714285
            ],
            "name": "r10",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 47
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__47.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__47.__5,__49.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__im-Xf0-Yf-85-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf85-Zf0iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5iiiiiaa-f-10.875X-Xf-3.125a-f-88.6Y-Yf-88.6aa-f-10.375X-Xf-3.625a-f-89.1Y-Yf-88.1-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5im-Xf0-Yf-85-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf85-Zf0iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5iiiiiaa-f-10.875X-Xf-3.125a-f-88.6Y-Yf-88.6aa-f-10.375X-Xf-3.625a-f-89.1Y-Yf-88.1-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5',float('-10.875000'),float('-89.242645'),float('-inf'),float('10.875000'),float('-84.292892'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                221.33675401633187,
                7965.98462522547
            ],
            "name": "m7",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 48
        },
        {
            "datums": [
                {
                    "expr": "ni_tip.x-self.width+0.75",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "awen.y-awen.width*0.6",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "7.75",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__46.__3]",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.height",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-10.875X-Xf-3.125a-f-88.6Y-Yf-88.6aa-f-10.375X-Xf-3.625a-f-89.1Y-Yf-88.1-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5',float('-10.875000'),float('-89.099998'),float('-inf'),float('-3.125000'),float('-88.099998'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -371.37417047380956,
                8156.366496730771
            ],
            "name": "awen_base",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 49
        },
        {
            "datums": [
                {
                    "expr": "ni_tip.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "awen.y-7",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "2.5",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-92f2.5',float('-2.500000'),float('-94.500000'),float('-inf'),float('2.500000'),float('-89.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1084.0583760200084,
                8633.107442201303
            ],
            "name": "kulupu",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 50
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__50.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__50.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "kulupu.r-0.75",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-92f1.75',float('-1.750000'),float('-93.750000'),float('-inf'),float('1.750000'),float('-90.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -689.549584013116,
                8916.474943557447
            ],
            "name": "c2",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 51
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__50.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__51.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75',float('-2.500000'),float('-94.500000'),float('-inf'),float('2.500000'),float('-89.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -322.1767088567624,
                8763.81125062256
            ],
            "name": "d3",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 52
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-kulupu.r*2-1",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "-kulupu.r*2+1",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__52.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-6-Yf-4-Zf0a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75',float('-8.500000'),float('-98.500000'),float('-inf'),float('-3.500000'),float('-93.500000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                47.37470267757931,
                9088.779453294255
            ],
            "name": "t1",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 53
        },
        {
            "datums": [
                {
                    "expr": "kulupu.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__53.__7,__53.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__im-Xf-6-Yf-4-Zf0a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75im-Xf-6-Yf-4-Zf0a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75',float('-8.500000'),float('-98.500000'),float('-inf'),float('8.500000'),float('-89.500000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                418.583100363973,
                9134.159453011414
            ],
            "name": "m8",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 54
        },
        {
            "datums": [
                {
                    "expr": "sona.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "sona.y0-sona.height-3",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "1",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "12",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.width",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-0.5X-Xf0.5a-f-23.5Y-Yf-12.5aa-f0X-Xf0a-f-24Y-Yf-12-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5',float('-0.500000'),float('-24.000000'),float('-inf'),float('0.500000'),float('-12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                26.30820663968848,
                -148.74834774785583
            ],
            "name": "ijo",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 55
        },
        {
            "datums": [
                {
                    "expr": "ijo.x-self.width/2+ijo.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ijo.y+ijo.height/2-self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "9.5",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5',float('-9.000000'),float('-13.000000'),float('-inf'),float('0.500000'),float('-12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -839.121392240886,
                164.3149066464114
            ],
            "name": "ijo_box",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 56
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ijo_box.y-2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__56.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5',float('-9.000000'),float('-17.000000'),float('-inf'),float('0.500000'),float('-12.000000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -263.22550478565677,
                245.97106067874682
            ],
            "name": "ijo_mirror",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 57
        },
        {
            "datums": [
                {
                    "expr": "ijo_box.x-ijo_box.width/2+self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ijo_box.y-self.height/2+ijo_box.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "1",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "(ijo_box.y-ijo_mirror.y0)*2+self.width",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.width",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5',float('-9.000000'),float('-17.000000'),float('-inf'),float('-8.000000'),float('-12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -826.9845374865769,
                568.6550993628011
            ],
            "name": "ijo_left",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 58
        },
        {
            "datums": [
                {
                    "expr": "ijo.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__57.__4,__58.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5',float('-9.000000'),float('-17.000000'),float('-inf'),float('9.000000'),float('-12.000000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                130.74919360766535,
                515.1871045808502
            ],
            "name": "m9",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 59
        },
        {
            "datums": [
                {
                    "expr": "kulupu.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "kulupu.y0-9",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "18",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.height",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-9X-Xf9a-f-101Y-Yf-101aa-f-8.5X-Xf8.5a-f-101.5Y-Yf-100.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5',float('-9.000000'),float('-101.500000'),float('-inf'),float('9.000000'),float('-100.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -591.2414654032056,
                9790.60743452338
            ],
            "name": "sama",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 60
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "sama.y-2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__60.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f-103Y_iiiiiaa-f-9X-Xf9a-f-101Y-Yf-101aa-f-8.5X-Xf8.5a-f-101.5Y-Yf-100.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5iiiiiaa-f-9X-Xf9a-f-101Y-Yf-101aa-f-8.5X-Xf8.5a-f-101.5Y-Yf-100.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5',float('-9.000000'),float('-105.500000'),float('-inf'),float('9.000000'),float('-100.500000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -64.41480817152424,
                9829.190571785763
            ],
            "name": "m10",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 61
        },
        {
            "datums": [
                {
                    "expr": "sama.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "sama.y-self.height+5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "9",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "24",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5',float('-4.500000'),float('-132.000000'),float('-inf'),float('4.500000'),float('-108.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -858.5686944241611,
                10426.34017807625
            ],
            "name": "palisa",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 62
        },
        {
            "datums": [
                {
                    "expr": "palisa.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "palisa.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.8",
                    "name": "sx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.92",
                    "name": "sy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__62.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/-Xf0f0.8+f-120/-Yf-120f0.92_iiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5',float('-3.600000'),float('-131.039993'),float('-inf'),float('3.600000'),float('-108.959999'),float('inf'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -269.26707862759383,
                10792.662804111951
            ],
            "name": "s1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "",
                "title('Scale (2D)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('sx', float)",
                "input('sy', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_xy(shape, x0, y0, sx, sy))",
                "",
                "# UI",
                "sb.ui.wireframe([(x0 + sx, y0, _z), (x0, y0, _z), (x0, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sx, y0 + sx/10, _z), (x0 + sx, y0 - sx/10, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sy/10, y0 + sy, _z), (x0 - sy/10, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.point(x0, y0, _z, color=sb.color.teal)",
                "sb.ui.point(x0 + sx, y0, _z, color=sb.color.teal, drag=(sx, None, None))",
                "sb.ui.point(x0, y0 + sy, _z, color=sb.color.teal, drag=(None, sy, None))",
                ""
            ],
            "uid": 63
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__62.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__63.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5nm+f0/-Xf0f0.8+f-120/-Yf-120f0.92_iiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5',float('-4.500000'),float('-132.000000'),float('-inf'),float('4.500000'),float('-108.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                119.35344638419667,
                10650.380972550262
            ],
            "name": "d4",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 64
        },
        {
            "datums": [
                {
                    "expr": "palisa.x-1",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "palisa.y+1",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.75",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf-1q-Yf-119f0.75',float('-1.750000'),float('-119.750000'),float('-inf'),float('-0.250000'),float('-118.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -654.0907119969252,
                11913.365521668842
            ],
            "name": "waso",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 65
        },
        {
            "datums": [
                {
                    "expr": "waso.x0+1",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "waso.y0+2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "10.25",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.75",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-5.125X-Xf5.125a-f-117Y-Yf-117aa-f-4.75X-Xf4.75a-f-117.375Y-Yf-116.625-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375',float('-5.125000'),float('-117.375000'),float('-inf'),float('5.125000'),float('-116.625000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -729.3455093423722,
                11439.19867663319
            ],
            "name": "waso_head",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 66
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__66.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__66.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-55",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__66.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-117-Zf0m+*f0.573576X*f-0.819152Y+*f0.819152X*f0.573576Y_m-Xf-0-Yf117-Zf0iiiiiaa-f-5.125X-Xf5.125a-f-117Y-Yf-117aa-f-4.75X-Xf4.75a-f-117.375Y-Yf-116.625-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375',float('-3.246759'),float('-121.413246'),float('-inf'),float('3.246759'),float('-112.586754'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -163.72300771209612,
                11439.796897318316
            ],
            "name": "r12",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 67
        },
        {
            "datums": [
                {
                    "expr": "waso_head.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "waso.y0-2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "6",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "waso_head.height",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-3X-Xf3a-f-121Y-Yf-121aa-f-2.625X-Xf2.625a-f-121.375Y-Yf-120.625-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375',float('-3.000000'),float('-121.375000'),float('-inf'),float('3.000000'),float('-120.625000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -221.97060442184522,
                11768.267385523906
            ],
            "name": "waso_chin",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 68
        },
        {
            "datums": [
                {
                    "expr": "waso_chin.x-waso_chin.width/2+self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "waso_chin.y-self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "waso_head.height",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "6",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-3X-Xf-2.25a-f-126.625Y-Yf-121.375aa-f-2.625X-Xf-2.625a-f-127Y-Yf-121-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375',float('-3.000000'),float('-127.000000'),float('-inf'),float('-2.250000'),float('-121.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -714.6939694326903,
                12211.01664413344
            ],
            "name": "waso_neck",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 69
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__67.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__68.__5,__65.__4,__69.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf-117-Zf0m+*f0.573576X*f-0.819152Y+*f0.819152X*f0.573576Y_m-Xf-0-Yf117-Zf0iiiiiaa-f-5.125X-Xf5.125a-f-117Y-Yf-117aa-f-4.75X-Xf4.75a-f-117.375Y-Yf-116.625-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375iiiiiiiaa-f-3X-Xf3a-f-121Y-Yf-121aa-f-2.625X-Xf2.625a-f-121.375Y-Yf-120.625-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375-r+q-Xf-1q-Yf-119f0.75iiiiiaa-f-3X-Xf-2.25a-f-126.625Y-Yf-121.375aa-f-2.625X-Xf-2.625a-f-127Y-Yf-121-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375',float('-3.246759'),float('-127.000000'),float('-inf'),float('3.246759'),float('-112.586754'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1388.8249922456996,
                11937.965808999183
            ],
            "name": "u1",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 70
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__42.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__40.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iim-*f2f0X__iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5iiiiiaa-f-0.5X-Xf0.5a-f-83Y-Yf-64aa-f0X-Xf0a-f-83.5Y-Yf-63.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5',float('-3.500000'),float('-83.500000'),float('-inf'),float('3.500000'),float('-63.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1320.1301777775136,
                6320.218709165915
            ],
            "name": "u2",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 71
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__34.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__31.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iim-*f2f0X__m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5iiiiiaa-f-0.5X-Xf0.5a-f-52Y-Yf-33aa-f0X-Xf0a-f-52.5Y-Yf-32.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5',float('-4.949749'),float('-52.500000'),float('-inf'),float('4.949749'),float('-32.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1377.8651766047403,
                4453.868151645093
            ],
            "name": "u3",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 72
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__19.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__17.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iim-*f2f0X__iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+qXq-Yf-28f2',float('-6.000000'),float('-37.500000'),float('-inf'),float('6.000000'),float('-18.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1609.461309403902,
                1360.9561380364507
            ],
            "name": "u4",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 73
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__55.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__59.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiaa-f-0.5X-Xf0.5a-f-23.5Y-Yf-12.5aa-f0X-Xf0a-f-24Y-Yf-12-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5im-*f2f0X__iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5',float('-9.000000'),float('-24.000000'),float('-inf'),float('9.000000'),float('-12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1694.451726413276,
                335.26580655546593
            ],
            "name": "u5",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 74
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__2.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5im-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5a-r+qXqYf7n-r+qXqYf6.25',float('-12.020820'),float('-7.000000'),float('-inf'),float('12.020820'),float('16.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1769.8620652815018,
                -3231.6448995116016
            ],
            "name": "u6",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 75
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__79.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__86.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116',float('-9.000000'),float('-118.000000'),float('-inf'),float('-7.000000'),float('-116.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -437.7041622067841,
                13867.566881053377
            ],
            "name": "i2",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 76
        },
        {
            "datums": [
                {
                    "expr": "palisa.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__85.__4,__83.__4,__82.__5,__81.__4,__87.__7,__88.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__iiiiim_-*f2f-120Y_iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5im_-*f2f-120Y_aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-107.75aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-107.25-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5iiiiiaa-f-7X-Xf-6a-f-132.5Y-Yf-110.5aa-f-6.5X-Xf-6.5a-f-133Y-Yf-110-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5m-Xf-2-Yf2-Zf0aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-11X-Xf-10a-f-114Y-Yf-94aa-f-10.5X-Xf-10.5a-f-114.5Y-Yf-93.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5iiiiim_-*f2f-120Y_iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5im_-*f2f-120Y_aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-107.75aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-107.25-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5iiiiiaa-f-7X-Xf-6a-f-132.5Y-Yf-110.5aa-f-6.5X-Xf-6.5a-f-133Y-Yf-110-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5m-Xf-2-Yf2-Zf0aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-11X-Xf-10a-f-114Y-Yf-94aa-f-10.5X-Xf-10.5a-f-114.5Y-Yf-93.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5',float('-11.000000'),float('-163.500000'),float('-inf'),float('11.000000'),float('-93.500000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1297.7552244738058,
                13845.437308782417
            ],
            "name": "m11",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 77
        },
        {
            "datums": [
                {
                    "expr": "ken0.x0-ken0.width/2",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "waso.y0+3",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "2",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf-7q-Yf-116f2',float('-9.000000'),float('-118.000000'),float('-inf'),float('-5.000000'),float('-114.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1765.4152199216264,
                13534.595708746705
            ],
            "name": "ken_curve0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 78
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__78.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__84.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1',float('-9.000000'),float('-118.000000'),float('-inf'),float('-5.000000'),float('-114.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -877.6226148177816,
                13731.401645721404
            ],
            "name": "d5",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 79
        },
        {
            "datums": [
                {
                    "expr": "ken_curve0.x0-ken_curve0.r/2-self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ken_curve0.y0+self.height/2-self.r/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ken_curve0.r/2",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "40",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5',float('-9.000000'),float('-116.500000'),float('-inf'),float('-8.000000'),float('-76.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -650.0748458969997,
                14516.746776224763
            ],
            "name": "ken_tip_bottom0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 80
        },
        {
            "datums": [
                {
                    "expr": "palisa.x-6.5",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "palisa.y-3+1.5",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "meso.width",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "23",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-7X-Xf-6a-f-132.5Y-Yf-110.5aa-f-6.5X-Xf-6.5a-f-133Y-Yf-110-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5',float('-7.000000'),float('-133.000000'),float('-inf'),float('-6.000000'),float('-110.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                384.47892107076376,
                13041.21610809367
            ],
            "name": "ken0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, width))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 81
        },
        {
            "datums": [
                {
                    "expr": "ken_curve0.x0-ken_curve0.r/2-self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ken_curve0.y0+self.height/2-self.r/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ken_curve0.r/2",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "9.25",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-107.75aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-107.25-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5',float('-9.000000'),float('-116.500000'),float('-inf'),float('-8.000000'),float('-107.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -270.5138576545799,
                12928.878240165666
            ],
            "name": "ken_tip_top0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 82
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "palisa.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__76.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f-120Y_aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116',float('-9.000000'),float('-124.000000'),float('-inf'),float('-7.000000'),float('-116.000000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                220.55107267204835,
                13915.191651195875
            ],
            "name": "m12",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 83
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__78.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__78.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ken_curve0.r/2",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf-7q-Yf-116f1',float('-8.000000'),float('-117.000000'),float('-inf'),float('-6.000000'),float('-115.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1312.7795719718629,
                13840.712508347557
            ],
            "name": "c3",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 84
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "palisa.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__80.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f-120Y_iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5',float('-9.000000'),float('-163.500000'),float('-inf'),float('-8.000000'),float('-123.500000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -3.906706458433746,
                14565.961091995532
            ],
            "name": "r11",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 85
        },
        {
            "datums": [
                {
                    "expr": "ken_curve0.x0-self.width/2",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ken_curve0.y0-self.height/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ken_curve0.r",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.width",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-9X-Xf-7a-f-118Y-Yf-116',float('-9.000000'),float('-118.000000'),float('-inf'),float('-7.000000'),float('-116.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -877.6226148177816,
                13981.831414199087
            ],
            "name": "r13",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 86
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-2",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__76.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-2-Yf2-Zf0aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116',float('-11.000000'),float('-116.000000'),float('-inf'),float('-9.000000'),float('-114.000000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -100.97103245056688,
                14093.002839623376
            ],
            "name": "t2",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 87
        },
        {
            "datums": [
                {
                    "expr": "ken_curve0.x0-ken_curve0.r/2-self.width/2+t2.dx",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ken_curve0.y0+self.height/2-self.r/2+t2.dy",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ken_curve0.r/2",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "21",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-11X-Xf-10a-f-114Y-Yf-94aa-f-10.5X-Xf-10.5a-f-114.5Y-Yf-93.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5',float('-11.000000'),float('-114.500000'),float('-inf'),float('-10.000000'),float('-93.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -255.32036709458134,
                13385.664569056433
            ],
            "name": "sewi_tip",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 88
        },
        {
            "datums": [
                {
                    "expr": "palisa.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "palisa.y-palisa.height/2-9",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "3.5",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-141f3.5',float('-3.500000'),float('-144.500000'),float('-inf'),float('3.500000'),float('-137.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1352.1111976726797,
                16111.359067643125
            ],
            "name": "jo",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 89
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__89.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__89.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "jo.r-0.75",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-141f2.75',float('-2.750000'),float('-143.750000'),float('-inf'),float('2.750000'),float('-138.250000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -988.8195452940786,
                16487.371038147146
            ],
            "name": "c4",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 90
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__89.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__90.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXq-Yf-141f3.5n-r+qXq-Yf-141f2.75',float('-3.500000'),float('-144.500000'),float('-inf'),float('3.500000'),float('-137.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -613.3957842774156,
                16318.373635151727
            ],
            "name": "d6",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 91
        },
        {
            "datums": [
                {
                    "expr": "jo.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "jo.y0+jo.r+self.height/2+1",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "1",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "3",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5',float('-0.500000'),float('-136.500000'),float('-inf'),float('0.500000'),float('-133.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -675.920098446831,
                15407.744499450671
            ],
            "name": "jo_toki",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 92
        },
        {
            "datums": [
                {
                    "expr": "jo.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "jo.y0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__92.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-141-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5',float('-5.656856'),float('-138.171570'),float('-inf'),float('-2.828428'),float('-135.343140'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -123.34805172631866,
                15738.353241779083
            ],
            "name": "r14",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 93
        },
        {
            "datums": [
                {
                    "expr": "jo.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "jo.y0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__92.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-141-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5',float('2.828428'),float('-138.171570'),float('-inf'),float('5.656856'),float('-135.343140'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -125.78872668298425,
                16083.294490612387
            ],
            "name": "r15",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 94
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__92.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__93.__5,__94.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5im-Xf0-Yf-141-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5m-Xf0-Yf-141-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5',float('-5.656856'),float('-138.171570'),float('-inf'),float('5.656856'),float('-133.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                274.753546886982,
                15629.25809215909
            ],
            "name": "u7",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 95
        },
        {
            "datums": [
                {
                    "expr": "jo.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "jo.y0-self.r-1",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "7",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-149f7',float('-7.000000'),float('-156.000000'),float('-inf'),float('7.000000'),float('-142.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1084.9521329408722,
                16983.713189252463
            ],
            "name": "jo_body",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 96
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__96.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__96.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "jo_body.r-0.75",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-149f6.25',float('-6.250000'),float('-155.250000'),float('-inf'),float('6.250000'),float('-142.750000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -644.0326436906997,
                17240.396833509985
            ],
            "name": "c5",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 97
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__96.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__99.__4,__97.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXq-Yf-149f7niaa-f0X-Xf7a-f-147Y-Yf-140-r+qXq-Yf-149f6.25',float('-7.000000'),float('-156.000000'),float('-inf'),float('7.000000'),float('-142.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -250.2262590809092,
                17119.557614122867
            ],
            "name": "d7",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 98
        },
        {
            "datums": [
                {
                    "expr": "jo_body.x0+jo.r",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "jo_body.y0+jo.r+2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "jo_body.r",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "jo_body.r",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f0X-Xf7a-f-147Y-Yf-140',float('0.000000'),float('-147.000000'),float('-inf'),float('7.000000'),float('-140.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -676.6501669533253,
                17571.74276906182
            ],
            "name": "r16",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 99
        },
        {
            "datums": [
                {
                    "expr": "jo_body.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "jo_body.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.9",
                    "name": "sx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1.3",
                    "name": "sy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__98.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/-Xf0f0.9+f-149/-Yf-149f1.3_a-r+qXq-Yf-149f7niaa-f0X-Xf7a-f-147Y-Yf-140-r+qXq-Yf-149f6.25',float('-6.300000'),float('-158.100006'),float('-inf'),float('6.300000'),float('-139.899994'),float('inf'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                169.23497068760093,
                17200.94380461648
            ],
            "name": "s2",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "",
                "title('Scale (2D)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('sx', float)",
                "input('sy', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_xy(shape, x0, y0, sx, sy))",
                "",
                "# UI",
                "sb.ui.wireframe([(x0 + sx, y0, _z), (x0, y0, _z), (x0, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sx, y0 + sx/10, _z), (x0 + sx, y0 - sx/10, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sy/10, y0 + sy, _z), (x0 - sy/10, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.point(x0, y0, _z, color=sb.color.teal)",
                "sb.ui.point(x0 + sx, y0, _z, color=sb.color.teal, drag=(sx, None, None))",
                "sb.ui.point(x0, y0 + sy, _z, color=sb.color.teal, drag=(None, sy, None))",
                ""
            ],
            "uid": 100
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__100.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__90.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('am+f0/-Xf0f0.9+f-149/-Yf-149f1.3_a-r+qXq-Yf-149f7niaa-f0X-Xf7a-f-147Y-Yf-140-r+qXq-Yf-149f6.25n-r+qXq-Yf-141f2.75',float('-6.300000'),float('-158.100006'),float('-inf'),float('6.300000'),float('-139.899994'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                531.3433344037509,
                17081.206639014337
            ],
            "name": "d8",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 101
        },
        {
            "datums": [
                {
                    "expr": "jo_body.x0+1.9",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "jo_body.y0+2.75",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "8",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.8",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-2.1X-Xf5.9a-f-146.25Y-Yf-146.25aa-f-1.7X-Xf5.5a-f-146.65Y-Yf-145.85-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4',float('-2.100000'),float('-146.649994'),float('-inf'),float('5.900000'),float('-145.850006'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -67.91018107652019,
                17760.174337250384
            ],
            "name": "jo_arm",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 102
        },
        {
            "datums": [
                {
                    "expr": "jo_arm.x+jo_arm.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__102.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__102.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf5.9-Yf-146.25-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-5.9-Yf146.25-Zf0iiiiiaa-f-2.1X-Xf5.9a-f-146.25Y-Yf-146.25aa-f-1.7X-Xf5.5a-f-146.65Y-Yf-145.85-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4',float('-0.039694'),float('-152.189697'),float('-inf'),float('6.182838'),float('-145.967163'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                482.649889414835,
                17753.11765819265
            ],
            "name": "r17",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 103
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__95.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__91.__2,__101.__2,__103.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5im-Xf0-Yf-141-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5m-Xf0-Yf-141-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5iia-r+qXq-Yf-141f3.5n-r+qXq-Yf-141f2.75am+f0/-Xf0f0.9+f-149/-Yf-149f1.3_a-r+qXq-Yf-149f7niaa-f0X-Xf7a-f-147Y-Yf-140-r+qXq-Yf-149f6.25n-r+qXq-Yf-141f2.75m-Xf5.9-Yf-146.25-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-5.9-Yf146.25-Zf0iiiiiaa-f-2.1X-Xf5.9a-f-146.25Y-Yf-146.25aa-f-1.7X-Xf5.5a-f-146.65Y-Yf-145.85-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4',float('-6.300000'),float('-158.100006'),float('-inf'),float('6.300000'),float('-133.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1276.2349488818438,
                16862.113085668963
            ],
            "name": "u8",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 104
        },
        {
            "datums": [
                {
                    "expr": "jo.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "jo.y0-27.5",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "8",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-168.5f8',float('-8.000000'),float('-176.500000'),float('-inf'),float('8.000000'),float('-160.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -791.4216569733912,
                18602.557776158697
            ],
            "name": "sike",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 105
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__105.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__105.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "sike.r-0.5",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-168.5f7.5',float('-7.500000'),float('-176.000000'),float('-inf'),float('7.500000'),float('-161.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -450.38653846860905,
                18886.221325815364
            ],
            "name": "c6",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 106
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__105.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__106.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXq-Yf-168.5f8n-r+qXq-Yf-168.5f7.5',float('-8.000000'),float('-176.500000'),float('-inf'),float('8.000000'),float('-160.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -109.6441476391982,
                18736.907244440685
            ],
            "name": "d9",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 107
        },
        {
            "datums": [
                {
                    "expr": "sike.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "sike.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "sike.r-1.5",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-168.5f6.5',float('-6.500000'),float('-175.000000'),float('-inf'),float('6.500000'),float('-162.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -834.5193461077574,
                19265.249378535715
            ],
            "name": "ma",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 108
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__108.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__108.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ma.r-1",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-168.5f5.5',float('-5.500000'),float('-174.000000'),float('-inf'),float('5.500000'),float('-163.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -489.9483890892522,
                19600.887014446336
            ],
            "name": "c7",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 109
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__108.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__109.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXq-Yf-168.5f6.5n-r+qXq-Yf-168.5f5.5',float('-6.500000'),float('-175.000000'),float('-inf'),float('6.500000'),float('-162.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -93.05369415312191,
                19394.144440235235
            ],
            "name": "d10",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 110
        },
        {
            "datums": [
                {
                    "expr": "ma.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ma.y0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.75",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "ma.r*2",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375',float('-0.375000'),float('-175.000000'),float('-inf'),float('0.375000'),float('-162.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -601.2674009978027,
                19957.467427267526
            ],
            "name": "ma_bar",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rounded rectangle (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('width', float)",
                "input('height', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min(width, height)/2",
                "",
                "output('shape', fab.shapes.rounded_rectangle(xmin, xmax, ymin, ymax, r))",
                "",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.y + this.height/2 - d/2",
                "    else:",
                "        d = abs(this.width)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.height = abs(2 * (y - this.y))",
                "   this.width = abs(2 * (x - this.x))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.wireframe([(xmax - r_, ymax, 0), (xmax, ymax - r_, 0)])",
                "sb.ui.point(x, y)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                "sb.ui.point(xmax, ymax - r_, drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 111
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__111.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__111.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__111.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf-168.5-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf168.5-Zf0iiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375',float('-6.500000'),float('-168.875000'),float('-inf'),float('6.500000'),float('-168.125000'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                53.03354441300178,
                20128.503990190708
            ],
            "name": "r18",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 112
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__110.__2,__107.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__111.__5,__112.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iia-r+qXq-Yf-168.5f6.5n-r+qXq-Yf-168.5f5.5a-r+qXq-Yf-168.5f8n-r+qXq-Yf-168.5f7.5iiiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375m-Xf0-Yf-168.5-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf168.5-Zf0iiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375',float('-8.000000'),float('-176.500000'),float('-inf'),float('8.000000'),float('-160.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1383.8993692808579,
                19525.75286069359
            ],
            "name": "u9",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 113
        },
        {
            "datums": [
                {
                    "expr": "ma.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "ma.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "ma.r+4",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-168.5f10.5',float('-10.500000'),float('-179.000000'),float('-inf'),float('10.500000'),float('-158.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -852.4493217323845,
                20658.967515330423
            ],
            "name": "pona",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 114
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__114.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__116.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXq-Yf-168.5f10.5n-r+qXq-Yf-168.5f9.75',float('-10.500000'),float('-179.000000'),float('-inf'),float('10.500000'),float('-158.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -20.018379375320194,
                20795.759774395116
            ],
            "name": "d11",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 115
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__114.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__114.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "pona.r-0.75",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-168.5f9.75',float('-9.750000'),float('-178.250000'),float('-inf'),float('9.750000'),float('-158.750000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -375.3446132872535,
                21061.00330111811
            ],
            "name": "c8",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 116
        },
        {
            "datums": [
                {
                    "expr": "pona.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "pona.y0-pona.r",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "pona.r-1",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXq-Yf-179f9.5',float('-9.500000'),float('-188.500000'),float('-inf'),float('9.500000'),float('-169.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -354.12685786759647,
                21388.47961441196
            ],
            "name": "pona_mask",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 117
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__115.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__117.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+qXq-Yf-168.5f10.5n-r+qXq-Yf-168.5f9.75-r+qXq-Yf-179f9.5',float('-9.500000'),float('-179.000000'),float('-inf'),float('9.500000'),float('-169.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                383.4743875251321,
                21217.285691409666
            ],
            "name": "i3",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 118
        },
        {
            "datums": [
                {
                    "expr": "pona_mask.x0-sike.r-0.25",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "pona_mask.y0+4.65",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.4",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf-8.25q-Yf-174.35f0.4',float('-8.650000'),float('-174.750000'),float('-inf'),float('-7.850000'),float('-173.949997'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                18.581783982894333,
                21684.1676670384
            ],
            "name": "pona_cheek",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 119
        },
        {
            "datums": [
                {
                    "expr": "pona.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__119.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__-r+q-Xf-8.25q-Yf-174.35f0.4-r+q-Xf-8.25q-Yf-174.35f0.4',float('-8.650000'),float('-174.750000'),float('-inf'),float('8.650000'),float('-173.949997'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                482.52551931189,
                21686.54019379281
            ],
            "name": "m13",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 120
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__118.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__120.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaa-r+qXq-Yf-168.5f10.5n-r+qXq-Yf-168.5f9.75-r+qXq-Yf-179f9.5im-*f2f0X__-r+q-Xf-8.25q-Yf-174.35f0.4-r+q-Xf-8.25q-Yf-174.35f0.4',float('-9.500000'),float('-179.000000'),float('-inf'),float('9.500000'),float('-169.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1363.8292500676698,
                21342.476881378105
            ],
            "name": "u10",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 121
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__75.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__16.__2,__6.__5,__74.__2,__73.__2,__30.__4,__72.__2,__37.__4,__71.__2,__45.__4,__48.__4,__54.__4,__61.__4,__64.__2,__70.__2,__77.__4,__104.__2,__113.__2,__121.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5im-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5a-r+qXqYf7n-r+qXqYf6.25iiiiiiiiiiiiiiiiiamXYf0m-Xf2.58333-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 1.9634954084936207)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /628.3185307179587) + sin(Z / 628.3185307179587)*cos(X / 1.9634954084936207)) - 0.3;am__f1aa-f-7X-Xf7a-f-2.5Y-Yf7a-f-1Z-Zf1-r+qXqYf7m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aiiiiiaa-f-7.5X-Xf7.5a-f-6.75Y-Yf6.75aa-f-6.75X-Xf6.75a-f-7.5Y-Yf7.5-r+q-Xf-6.75q-Yf-6.75f0.75-r+q-Xf-6.75q-Yf6.75f0.75-r+q-Xf6.75q-Yf-6.75f0.75-r+q-Xf6.75q-Yf6.75f0.75niiiiiaa-f-6.75X-Xf6.75a-f-6.075Y-Yf6.075aa-f-6.075X-Xf6.075a-f-6.75Y-Yf6.75-r+q-Xf-6.075q-Yf-6.075f0.675-r+q-Xf-6.075q-Yf6.075f0.675-r+q-Xf6.075q-Yf-6.075f0.675-r+q-Xf6.075q-Yf6.075f0.675iiiiiiaa-f-0.5X-Xf0.5a-f-23.5Y-Yf-12.5aa-f0X-Xf0a-f-24Y-Yf-12-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5im-*f2f0X__iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5iim-*f2f0X__iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+qXq-Yf-28f2im-*f2f0X__iiim_-*f2f-28Y_iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5im_-*f2f-28Y_aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25iiiiiaa-f-11X-Xf-10a-f-25Y-Yf-4aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf-3.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5iiiiiaa-f-9X-Xf-8a-f-46.5Y-Yf-19aa-f-8.5X-Xf-8.5a-f-47Y-Yf-18.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5iiim_-*f2f-28Y_iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5im_-*f2f-28Y_aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25iiiiiaa-f-11X-Xf-10a-f-25Y-Yf-4aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf-3.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5iiiiiaa-f-9X-Xf-8a-f-46.5Y-Yf-19aa-f-8.5X-Xf-8.5a-f-47Y-Yf-18.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5iim-*f2f0X__m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5iiiiiaa-f-0.5X-Xf0.5a-f-52Y-Yf-33aa-f0X-Xf0a-f-52.5Y-Yf-32.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5im-*f2f0X__m-Xf0-Yf-57.5-Zf0m+*f0.819152X*f0.573576Y+*f-0.573576X*f0.819152Y_m-Xf-0-Yf57.5-Zf0iiiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5m-Xf0-Yf-57.5-Zf0m+*f0.819152X*f0.573576Y+*f-0.573576X*f0.819152Y_m-Xf-0-Yf57.5-Zf0iiiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5iim-*f2f0X__iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5iiiiiaa-f-0.5X-Xf0.5a-f-83Y-Yf-64aa-f0X-Xf0a-f-83.5Y-Yf-63.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5im-*f2f0X__m-Xf0-Yf-83-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf83-Zf0iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5m-Xf0-Yf-83-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf83-Zf0iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5im-*f2f0X__im-Xf0-Yf-85-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf85-Zf0iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5iiiiiaa-f-10.875X-Xf-3.125a-f-88.6Y-Yf-88.6aa-f-10.375X-Xf-3.625a-f-89.1Y-Yf-88.1-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5im-Xf0-Yf-85-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf85-Zf0iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5iiiiiaa-f-10.875X-Xf-3.125a-f-88.6Y-Yf-88.6aa-f-10.375X-Xf-3.625a-f-89.1Y-Yf-88.1-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5im-*f2f0X__im-Xf-6-Yf-4-Zf0a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75im-Xf-6-Yf-4-Zf0a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75im_-*f2f-103Y_iiiiiaa-f-9X-Xf9a-f-101Y-Yf-101aa-f-8.5X-Xf8.5a-f-101.5Y-Yf-100.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5iiiiiaa-f-9X-Xf9a-f-101Y-Yf-101aa-f-8.5X-Xf8.5a-f-101.5Y-Yf-100.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5aiiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5nm+f0/-Xf0f0.8+f-120/-Yf-120f0.92_iiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5im-Xf0-Yf-117-Zf0m+*f0.573576X*f-0.819152Y+*f0.819152X*f0.573576Y_m-Xf-0-Yf117-Zf0iiiiiaa-f-5.125X-Xf5.125a-f-117Y-Yf-117aa-f-4.75X-Xf4.75a-f-117.375Y-Yf-116.625-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375iiiiiiiaa-f-3X-Xf3a-f-121Y-Yf-121aa-f-2.625X-Xf2.625a-f-121.375Y-Yf-120.625-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375-r+q-Xf-1q-Yf-119f0.75iiiiiaa-f-3X-Xf-2.25a-f-126.625Y-Yf-121.375aa-f-2.625X-Xf-2.625a-f-127Y-Yf-121-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375im-*f2f0X__iiiiim_-*f2f-120Y_iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5im_-*f2f-120Y_aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-107.75aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-107.25-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5iiiiiaa-f-7X-Xf-6a-f-132.5Y-Yf-110.5aa-f-6.5X-Xf-6.5a-f-133Y-Yf-110-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5m-Xf-2-Yf2-Zf0aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-11X-Xf-10a-f-114Y-Yf-94aa-f-10.5X-Xf-10.5a-f-114.5Y-Yf-93.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5iiiiim_-*f2f-120Y_iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5im_-*f2f-120Y_aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-107.75aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-107.25-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5iiiiiaa-f-7X-Xf-6a-f-132.5Y-Yf-110.5aa-f-6.5X-Xf-6.5a-f-133Y-Yf-110-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5m-Xf-2-Yf2-Zf0aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-11X-Xf-10a-f-114Y-Yf-94aa-f-10.5X-Xf-10.5a-f-114.5Y-Yf-93.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5iiiiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5im-Xf0-Yf-141-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5m-Xf0-Yf-141-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5iia-r+qXq-Yf-141f3.5n-r+qXq-Yf-141f2.75am+f0/-Xf0f0.9+f-149/-Yf-149f1.3_a-r+qXq-Yf-149f7niaa-f0X-Xf7a-f-147Y-Yf-140-r+qXq-Yf-149f6.25n-r+qXq-Yf-141f2.75m-Xf5.9-Yf-146.25-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-5.9-Yf146.25-Zf0iiiiiaa-f-2.1X-Xf5.9a-f-146.25Y-Yf-146.25aa-f-1.7X-Xf5.5a-f-146.65Y-Yf-145.85-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4iia-r+qXq-Yf-168.5f6.5n-r+qXq-Yf-168.5f5.5a-r+qXq-Yf-168.5f8n-r+qXq-Yf-168.5f7.5iiiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375m-Xf0-Yf-168.5-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf168.5-Zf0iiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375iaa-r+qXq-Yf-168.5f10.5n-r+qXq-Yf-168.5f9.75-r+qXq-Yf-179f9.5im-*f2f0X__-r+q-Xf-8.25q-Yf-174.35f0.4-r+q-Xf-8.25q-Yf-174.35f0.4',float('-12.020820'),float('-179.000000'),float('-inf'),float('12.020820'),float('16.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5838.641234557077,
                19618.106785124965
            ],
            "name": "u11",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 122
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__124.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/-Xf0f1.36364+f0/-Yf0f1.36364_iiiiiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5im-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5a-r+qXqYf7n-r+qXqYf6.25iiiiiiiiiiiiiiiiiamXYf0m-Xf2.58333-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 1.9634954084936207)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /628.3185307179587) + sin(Z / 628.3185307179587)*cos(X / 1.9634954084936207)) - 0.3;am__f1aa-f-7X-Xf7a-f-2.5Y-Yf7a-f-1Z-Zf1-r+qXqYf7m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aiiiiiaa-f-7.5X-Xf7.5a-f-6.75Y-Yf6.75aa-f-6.75X-Xf6.75a-f-7.5Y-Yf7.5-r+q-Xf-6.75q-Yf-6.75f0.75-r+q-Xf-6.75q-Yf6.75f0.75-r+q-Xf6.75q-Yf-6.75f0.75-r+q-Xf6.75q-Yf6.75f0.75niiiiiaa-f-6.75X-Xf6.75a-f-6.075Y-Yf6.075aa-f-6.075X-Xf6.075a-f-6.75Y-Yf6.75-r+q-Xf-6.075q-Yf-6.075f0.675-r+q-Xf-6.075q-Yf6.075f0.675-r+q-Xf6.075q-Yf-6.075f0.675-r+q-Xf6.075q-Yf6.075f0.675iiiiiiaa-f-0.5X-Xf0.5a-f-23.5Y-Yf-12.5aa-f0X-Xf0a-f-24Y-Yf-12-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5im-*f2f0X__iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5iim-*f2f0X__iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+qXq-Yf-28f2im-*f2f0X__iiim_-*f2f-28Y_iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5im_-*f2f-28Y_aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25iiiiiaa-f-11X-Xf-10a-f-25Y-Yf-4aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf-3.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5iiiiiaa-f-9X-Xf-8a-f-46.5Y-Yf-19aa-f-8.5X-Xf-8.5a-f-47Y-Yf-18.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5iiim_-*f2f-28Y_iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5im_-*f2f-28Y_aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25iiiiiaa-f-11X-Xf-10a-f-25Y-Yf-4aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf-3.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5iiiiiaa-f-9X-Xf-8a-f-46.5Y-Yf-19aa-f-8.5X-Xf-8.5a-f-47Y-Yf-18.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5iim-*f2f0X__m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5iiiiiaa-f-0.5X-Xf0.5a-f-52Y-Yf-33aa-f0X-Xf0a-f-52.5Y-Yf-32.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5im-*f2f0X__m-Xf0-Yf-57.5-Zf0m+*f0.819152X*f0.573576Y+*f-0.573576X*f0.819152Y_m-Xf-0-Yf57.5-Zf0iiiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5m-Xf0-Yf-57.5-Zf0m+*f0.819152X*f0.573576Y+*f-0.573576X*f0.819152Y_m-Xf-0-Yf57.5-Zf0iiiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5iim-*f2f0X__iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5iiiiiaa-f-0.5X-Xf0.5a-f-83Y-Yf-64aa-f0X-Xf0a-f-83.5Y-Yf-63.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5im-*f2f0X__m-Xf0-Yf-83-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf83-Zf0iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5m-Xf0-Yf-83-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf83-Zf0iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5im-*f2f0X__im-Xf0-Yf-85-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf85-Zf0iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5iiiiiaa-f-10.875X-Xf-3.125a-f-88.6Y-Yf-88.6aa-f-10.375X-Xf-3.625a-f-89.1Y-Yf-88.1-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5im-Xf0-Yf-85-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf85-Zf0iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5iiiiiaa-f-10.875X-Xf-3.125a-f-88.6Y-Yf-88.6aa-f-10.375X-Xf-3.625a-f-89.1Y-Yf-88.1-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5im-*f2f0X__im-Xf-6-Yf-4-Zf0a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75im-Xf-6-Yf-4-Zf0a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75im_-*f2f-103Y_iiiiiaa-f-9X-Xf9a-f-101Y-Yf-101aa-f-8.5X-Xf8.5a-f-101.5Y-Yf-100.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5iiiiiaa-f-9X-Xf9a-f-101Y-Yf-101aa-f-8.5X-Xf8.5a-f-101.5Y-Yf-100.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5aiiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5nm+f0/-Xf0f0.8+f-120/-Yf-120f0.92_iiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5im-Xf0-Yf-117-Zf0m+*f0.573576X*f-0.819152Y+*f0.819152X*f0.573576Y_m-Xf-0-Yf117-Zf0iiiiiaa-f-5.125X-Xf5.125a-f-117Y-Yf-117aa-f-4.75X-Xf4.75a-f-117.375Y-Yf-116.625-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375iiiiiiiaa-f-3X-Xf3a-f-121Y-Yf-121aa-f-2.625X-Xf2.625a-f-121.375Y-Yf-120.625-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375-r+q-Xf-1q-Yf-119f0.75iiiiiaa-f-3X-Xf-2.25a-f-126.625Y-Yf-121.375aa-f-2.625X-Xf-2.625a-f-127Y-Yf-121-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375im-*f2f0X__iiiiim_-*f2f-120Y_iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5im_-*f2f-120Y_aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-107.75aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-107.25-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5iiiiiaa-f-7X-Xf-6a-f-132.5Y-Yf-110.5aa-f-6.5X-Xf-6.5a-f-133Y-Yf-110-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5m-Xf-2-Yf2-Zf0aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-11X-Xf-10a-f-114Y-Yf-94aa-f-10.5X-Xf-10.5a-f-114.5Y-Yf-93.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5iiiiim_-*f2f-120Y_iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5im_-*f2f-120Y_aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-107.75aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-107.25-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5iiiiiaa-f-7X-Xf-6a-f-132.5Y-Yf-110.5aa-f-6.5X-Xf-6.5a-f-133Y-Yf-110-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5m-Xf-2-Yf2-Zf0aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-11X-Xf-10a-f-114Y-Yf-94aa-f-10.5X-Xf-10.5a-f-114.5Y-Yf-93.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5iiiiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5im-Xf0-Yf-141-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5m-Xf0-Yf-141-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5iia-r+qXq-Yf-141f3.5n-r+qXq-Yf-141f2.75am+f0/-Xf0f0.9+f-149/-Yf-149f1.3_a-r+qXq-Yf-149f7niaa-f0X-Xf7a-f-147Y-Yf-140-r+qXq-Yf-149f6.25n-r+qXq-Yf-141f2.75m-Xf5.9-Yf-146.25-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-5.9-Yf146.25-Zf0iiiiiaa-f-2.1X-Xf5.9a-f-146.25Y-Yf-146.25aa-f-1.7X-Xf5.5a-f-146.65Y-Yf-145.85-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4iia-r+qXq-Yf-168.5f6.5n-r+qXq-Yf-168.5f5.5a-r+qXq-Yf-168.5f8n-r+qXq-Yf-168.5f7.5iiiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375m-Xf0-Yf-168.5-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf168.5-Zf0iiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375iaa-r+qXq-Yf-168.5f10.5n-r+qXq-Yf-168.5f9.75-r+qXq-Yf-179f9.5im-*f2f0X__-r+q-Xf-8.25q-Yf-174.35f0.4-r+q-Xf-8.25q-Yf-174.35f0.4',float('-16.392071'),float('-244.091553'),float('-inf'),float('16.392071'),float('22.500059'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                6620.397837879789,
                19658.61155754347
            ],
            "name": "h0",
            "script": [
                "import fab",
                "",
                "title('Heightmap (.png)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.heightmap(shape)",
                ""
            ],
            "uid": 123
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "30/22",
                    "name": "sx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.sx",
                    "name": "sy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__122.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/-Xf0f1.36364+f0/-Yf0f1.36364_iiiiiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5im-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0iiiiiaa-f-0.5X-Xf0.5a-f12Y-Yf16aa-f0X-Xf0a-f11.5Y-Yf16.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5-r+qXq-Yf12f0.5-r+qXq-Yf16f0.5a-r+qXqYf7n-r+qXqYf6.25iiiiiiiiiiiiiiiiiamXYf0m-Xf2.58333-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf-0-Zf0a= abs( sin(X / 1.9634954084936207)*cos(Y / 1.5707963267948966) + sin(Y / 1.5707963267948966)*cos(Z /628.3185307179587) + sin(Z / 628.3185307179587)*cos(X / 1.9634954084936207)) - 0.3;am__f1aa-f-7X-Xf7a-f-2.5Y-Yf7a-f-1Z-Zf1-r+qXqYf7m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0aiiiiiaa-f-7.5X-Xf7.5a-f-6.75Y-Yf6.75aa-f-6.75X-Xf6.75a-f-7.5Y-Yf7.5-r+q-Xf-6.75q-Yf-6.75f0.75-r+q-Xf-6.75q-Yf6.75f0.75-r+q-Xf6.75q-Yf-6.75f0.75-r+q-Xf6.75q-Yf6.75f0.75niiiiiaa-f-6.75X-Xf6.75a-f-6.075Y-Yf6.075aa-f-6.075X-Xf6.075a-f-6.75Y-Yf6.75-r+q-Xf-6.075q-Yf-6.075f0.675-r+q-Xf-6.075q-Yf6.075f0.675-r+q-Xf6.075q-Yf-6.075f0.675-r+q-Xf6.075q-Yf6.075f0.675iiiiiiaa-f-0.5X-Xf0.5a-f-23.5Y-Yf-12.5aa-f0X-Xf0a-f-24Y-Yf-12-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-23.5f0.5-r+qXq-Yf-12.5f0.5im-*f2f0X__iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5iim_-*f2f-14.5Y_iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf0.5a-f-12.5Y-Yf-12.5aa-f-8.5X-Xf0a-f-13Y-Yf-12-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5-r+qXq-Yf-12.5f0.5iiiiiaa-f-9X-Xf-8a-f-16.5Y-Yf-12.5aa-f-8.5X-Xf-8.5a-f-17Y-Yf-12-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5-r+q-Xf-8.5q-Yf-16.5f0.5-r+q-Xf-8.5q-Yf-12.5f0.5iim-*f2f0X__iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5iiiiiaa-f-6X-Xf-5a-f-37Y-Yf-19aa-f-5.5X-Xf-5.5a-f-37.5Y-Yf-18.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+q-Xf-5.5q-Yf-37f0.5-r+q-Xf-5.5q-Yf-19f0.5-r+qXq-Yf-28f2im-*f2f0X__iiim_-*f2f-28Y_iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5im_-*f2f-28Y_aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25iiiiiaa-f-11X-Xf-10a-f-25Y-Yf-4aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf-3.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5iiiiiaa-f-9X-Xf-8a-f-46.5Y-Yf-19aa-f-8.5X-Xf-8.5a-f-47Y-Yf-18.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5iiim_-*f2f-28Y_iiiiiaa-f-11X-Xf-10a-f-25Y-Yf14aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf14.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf14f0.5im_-*f2f-28Y_aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25aa-r+q-Xf-9q-Yf-25f2n-r+q-Xf-9q-Yf-25f1aa-f-11X-Xf-9a-f-27Y-Yf-25iiiiiaa-f-11X-Xf-10a-f-25Y-Yf-4aa-f-10.5X-Xf-10.5a-f-25.5Y-Yf-3.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5-r+q-Xf-10.5q-Yf-25f0.5-r+q-Xf-10.5q-Yf-4f0.5iiiiiaa-f-9X-Xf-8a-f-46.5Y-Yf-19aa-f-8.5X-Xf-8.5a-f-47Y-Yf-18.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5-r+q-Xf-8.5q-Yf-46.5f0.5-r+q-Xf-8.5q-Yf-19f0.5iim-*f2f0X__m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5m-Xf0-Yf-37.5-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf37.5-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-43.5Y-Yf-37.5aa-f0X-Xf0a-f-44Y-Yf-37-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5-r+qXq-Yf-43.5f0.5-r+qXq-Yf-37.5f0.5iiiiiaa-f-0.5X-Xf0.5a-f-52Y-Yf-33aa-f0X-Xf0a-f-52.5Y-Yf-32.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5-r+qXq-Yf-52f0.5-r+qXq-Yf-33f0.5im-*f2f0X__m-Xf0-Yf-57.5-Zf0m+*f0.819152X*f0.573576Y+*f-0.573576X*f0.819152Y_m-Xf-0-Yf57.5-Zf0iiiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5m-Xf0-Yf-57.5-Zf0m+*f0.819152X*f0.573576Y+*f-0.573576X*f0.819152Y_m-Xf-0-Yf57.5-Zf0iiiiiiaa-f-0.5X-Xf0.5a-f-62.5Y-Yf-48.5aa-f0X-Xf0a-f-63Y-Yf-48-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-48.5f0.5m-Xf0-Yf-62.5-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf62.5-Zf0iiiiiaa-f-4.5X-Xf0.5a-f-62.5Y-Yf-62.5aa-f-4X-Xf0a-f-63Y-Yf-62-r+q-Xf-4q-Yf-62.5f0.5-r+q-Xf-4q-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5-r+qXq-Yf-62.5f0.5iim-*f2f0X__iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5iiiiiaa-f-3.5X-Xf-2.5a-f-73Y-Yf-66aa-f-3X-Xf-3a-f-73.5Y-Yf-65.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5-r+q-Xf-3q-Yf-73f0.5-r+q-Xf-3q-Yf-66f0.5iiiiiaa-f-0.5X-Xf0.5a-f-83Y-Yf-64aa-f0X-Xf0a-f-83.5Y-Yf-63.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-64f0.5im-*f2f0X__m-Xf0-Yf-83-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf83-Zf0iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5m-Xf0-Yf-83-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf83-Zf0iiiiiaa-f-14.5X-Xf0.5a-f-83Y-Yf-83aa-f-14X-Xf0a-f-83.5Y-Yf-82.5-r+q-Xf-14q-Yf-83f0.5-r+q-Xf-14q-Yf-83f0.5-r+qXq-Yf-83f0.5-r+qXq-Yf-83f0.5im-*f2f0X__im-Xf0-Yf-85-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf85-Zf0iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5iiiiiaa-f-10.875X-Xf-3.125a-f-88.6Y-Yf-88.6aa-f-10.375X-Xf-3.625a-f-89.1Y-Yf-88.1-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5im-Xf0-Yf-85-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf85-Zf0iiiiiaa-f-5.5X-Xf0.5a-f-85Y-Yf-85aa-f-5X-Xf0a-f-85.5Y-Yf-84.5-r+q-Xf-5q-Yf-85f0.5-r+q-Xf-5q-Yf-85f0.5-r+qXq-Yf-85f0.5-r+qXq-Yf-85f0.5iiiiiaa-f-10.875X-Xf-3.125a-f-88.6Y-Yf-88.6aa-f-10.375X-Xf-3.625a-f-89.1Y-Yf-88.1-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-10.375q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5-r+q-Xf-3.625q-Yf-88.6f0.5im-*f2f0X__im-Xf-6-Yf-4-Zf0a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75im-Xf-6-Yf-4-Zf0a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75a-r+qXq-Yf-92f2.5n-r+qXq-Yf-92f1.75im_-*f2f-103Y_iiiiiaa-f-9X-Xf9a-f-101Y-Yf-101aa-f-8.5X-Xf8.5a-f-101.5Y-Yf-100.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5iiiiiaa-f-9X-Xf9a-f-101Y-Yf-101aa-f-8.5X-Xf8.5a-f-101.5Y-Yf-100.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf-8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5-r+q-Xf8.5q-Yf-101f0.5aiiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5nm+f0/-Xf0f0.8+f-120/-Yf-120f0.92_iiiiiaa-f-4.5X-Xf4.5a-f-127.5Y-Yf-112.5aa-f0X-Xf0a-f-132Y-Yf-108-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5-r+qXq-Yf-127.5f4.5-r+qXq-Yf-112.5f4.5im-Xf0-Yf-117-Zf0m+*f0.573576X*f-0.819152Y+*f0.819152X*f0.573576Y_m-Xf-0-Yf117-Zf0iiiiiaa-f-5.125X-Xf5.125a-f-117Y-Yf-117aa-f-4.75X-Xf4.75a-f-117.375Y-Yf-116.625-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf-4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375-r+q-Xf4.75q-Yf-117f0.375iiiiiiiaa-f-3X-Xf3a-f-121Y-Yf-121aa-f-2.625X-Xf2.625a-f-121.375Y-Yf-120.625-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf-2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375-r+q-Xf2.625q-Yf-121f0.375-r+q-Xf-1q-Yf-119f0.75iiiiiaa-f-3X-Xf-2.25a-f-126.625Y-Yf-121.375aa-f-2.625X-Xf-2.625a-f-127Y-Yf-121-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375-r+q-Xf-2.625q-Yf-126.625f0.375-r+q-Xf-2.625q-Yf-121.375f0.375im-*f2f0X__iiiiim_-*f2f-120Y_iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5im_-*f2f-120Y_aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-107.75aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-107.25-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5iiiiiaa-f-7X-Xf-6a-f-132.5Y-Yf-110.5aa-f-6.5X-Xf-6.5a-f-133Y-Yf-110-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5m-Xf-2-Yf2-Zf0aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-11X-Xf-10a-f-114Y-Yf-94aa-f-10.5X-Xf-10.5a-f-114.5Y-Yf-93.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5iiiiim_-*f2f-120Y_iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-77aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-76.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-77f0.5im_-*f2f-120Y_aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-9X-Xf-8a-f-116Y-Yf-107.75aa-f-8.5X-Xf-8.5a-f-116.5Y-Yf-107.25-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5-r+q-Xf-8.5q-Yf-116f0.5-r+q-Xf-8.5q-Yf-107.75f0.5iiiiiaa-f-7X-Xf-6a-f-132.5Y-Yf-110.5aa-f-6.5X-Xf-6.5a-f-133Y-Yf-110-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5-r+q-Xf-6.5q-Yf-132.5f0.5-r+q-Xf-6.5q-Yf-110.5f0.5m-Xf-2-Yf2-Zf0aa-r+q-Xf-7q-Yf-116f2n-r+q-Xf-7q-Yf-116f1aa-f-9X-Xf-7a-f-118Y-Yf-116iiiiiaa-f-11X-Xf-10a-f-114Y-Yf-94aa-f-10.5X-Xf-10.5a-f-114.5Y-Yf-93.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5-r+q-Xf-10.5q-Yf-114f0.5-r+q-Xf-10.5q-Yf-94f0.5iiiiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5im-Xf0-Yf-141-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5m-Xf0-Yf-141-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf141-Zf0iiiiiaa-f-0.5X-Xf0.5a-f-136Y-Yf-134aa-f0X-Xf0a-f-136.5Y-Yf-133.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5-r+qXq-Yf-136f0.5-r+qXq-Yf-134f0.5iia-r+qXq-Yf-141f3.5n-r+qXq-Yf-141f2.75am+f0/-Xf0f0.9+f-149/-Yf-149f1.3_a-r+qXq-Yf-149f7niaa-f0X-Xf7a-f-147Y-Yf-140-r+qXq-Yf-149f6.25n-r+qXq-Yf-141f2.75m-Xf5.9-Yf-146.25-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-5.9-Yf146.25-Zf0iiiiiaa-f-2.1X-Xf5.9a-f-146.25Y-Yf-146.25aa-f-1.7X-Xf5.5a-f-146.65Y-Yf-145.85-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf-1.7q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4-r+q-Xf5.5q-Yf-146.25f0.4iia-r+qXq-Yf-168.5f6.5n-r+qXq-Yf-168.5f5.5a-r+qXq-Yf-168.5f8n-r+qXq-Yf-168.5f7.5iiiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375m-Xf0-Yf-168.5-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf-0-Yf168.5-Zf0iiiiiaa-f-0.375X-Xf0.375a-f-174.625Y-Yf-162.375aa-f0X-Xf0a-f-175Y-Yf-162-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375-r+qXq-Yf-174.625f0.375-r+qXq-Yf-162.375f0.375iaa-r+qXq-Yf-168.5f10.5n-r+qXq-Yf-168.5f9.75-r+qXq-Yf-179f9.5im-*f2f0X__-r+q-Xf-8.25q-Yf-174.35f0.4-r+q-Xf-8.25q-Yf-174.35f0.4',float('-16.392071'),float('-244.091553'),float('-inf'),float('16.392071'),float('22.500059'),float('inf'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                6234.750495985974,
                19925.935901397403
            ],
            "name": "s3",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "",
                "title('Scale (2D)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('sx', float)",
                "input('sy', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_xy(shape, x0, y0, sx, sy))",
                "",
                "# UI",
                "sb.ui.wireframe([(x0 + sx, y0, _z), (x0, y0, _z), (x0, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sx, y0 + sx/10, _z), (x0 + sx, y0 - sx/10, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sy/10, y0 + sy, _z), (x0 - sy/10, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.point(x0, y0, _z, color=sb.color.teal)",
                "sb.ui.point(x0 + sx, y0, _z, color=sb.color.teal, drag=(sx, None, None))",
                "sb.ui.point(x0, y0 + sy, _z, color=sb.color.teal, drag=(None, sy, None))",
                ""
            ],
            "uid": 124
        }
    ],
    "protocol": 6,
    "type": "sb"
}
