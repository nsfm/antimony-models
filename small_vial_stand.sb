{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "11",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "11.7/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+1.5",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf7.35a-f0Z-Zf11nam__f1-r+qXqYf5.85a-f0Z-Zf11',float('-7.350000'),float('-7.350000'),float('0.000000'),float('7.350000'),float('7.350000'),float('11.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -38,
                -280
            ],
            "name": "vial_holder",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-0.4",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__0.__0]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__0.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__0.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "4",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "vial_holder.R+10",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf17.35a-f-0.4Z-Zf0nam__f1-r+qXqYf4a-f-0.4Z-Zf0',float('-17.350000'),float('-17.350000'),float('-0.400000'),float('17.350000'),float('17.350000'),float('0.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                413.6789620972809,
                -420.6232132595854
            ],
            "name": "platter",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__1]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__1.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__1.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.R-2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__1.__5]",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf17.35a-f0Z-Zf2nam__f1-r+qXqYf15.35a-f0Z-Zf2',float('-17.350000'),float('-17.350000'),float('0.000000'),float('17.350000'),float('17.350000'),float('2.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                877.9517540913516,
                -135.90891560510187
            ],
            "name": "fence",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__0.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__0.__1]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "(vial_holder.r+vial_holder.R)/2",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "(vial_holder.R-vial_holder.r)/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf11-r+q-f6.6r+qXqYqZf0.75',float('-7.350000'),float('-7.350000'),float('10.250000'),float('7.350000'),float('7.350000'),float('11.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -37.69736345250999,
                174.59831493794113
            ],
            "name": "vial_lip",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__2.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__2.__1]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "(fence.r+fence.R)/2",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "(fence.R-fence.r)/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf2-r+q-f16.35r+qXqYqZf1',float('-17.350000'),float('-17.350000'),float('1.000000'),float('17.350000'),float('17.350000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1290.6386803083035,
                -408.71878269563484
            ],
            "name": "t0",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "platter.zmax+0.5",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+0.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__0.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__0.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "vial_holder.R-0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+1",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1',float('-8.100000'),float('-8.100000'),float('0.500000'),float('8.100000'),float('8.100000'),float('1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                414.6709979776101,
                713.2737979567025
            ],
            "name": "texture",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__5.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "i",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "j",
                    "type": "int",
                    "uid": 5
                },
                {
                    "expr": "5",
                    "name": "k",
                    "type": "int",
                    "uid": 6
                },
                {
                    "expr": "0",
                    "name": "dx",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "0",
                    "name": "dy",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "2.25",
                    "name": "dz",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf2.25m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf4.5m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf6.75m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf9m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1',float('-8.100000'),float('-8.100000'),float('0.500000'),float('8.100000'),float('8.100000'),float('10.000000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                810.4933142289652,
                728.1543361616407
            ],
            "name": "a0",
            "script": [
                "import fab",
                "",
                "title('Array (3D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('i', int)",
                "input('j', int)",
                "input('k', int)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, k, dx, dy, dz))",
                "",
                "# UI",
                "fab.ui.wireframe([(_x, _y, _z), (_x + dx, _y, _z)], color=fab.color.teal)",
                "fab.ui.wireframe([(_x, _y, _z), (_x, _y + dy, _z)], color=fab.color.teal)",
                "fab.ui.wireframe([(_x, _y, _z), (_x, _y, _z + dz)], color=fab.color.teal)",
                "",
                "fab.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=fab.color.teal)",
                "fab.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=fab.color.teal)",
                "fab.ui.wireframe([",
                "\t(_x, _y - 0.3, _z + dz), (_x, _y + 0.3, _z + dz)], color=fab.color.teal)",
                "",
                "",
                "fab.ui.point(_x, _y, 0, color=fab.color.teal)",
                "fab.ui.point(_x + dx, _y, 0, color=fab.color.teal, drag=(dx, None, None))",
                "fab.ui.point(_x, _y + dy, 0, color=fab.color.teal, drag=(None, dy, None))",
                "fab.ui.point(_x, _y, _z + dz, color=fab.color.teal, drag=(None, None, dz))",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__6,__3.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__6.__10]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiaam__f1-r+qXqYf7.35a-f0Z-Zf11nam__f1-r+qXqYf5.85a-f0Z-Zf11m-Xf0-Yf0-Zf11-r+q-f6.6r+qXqYqZf0.75niiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf2.25m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf4.5m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf6.75m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf9m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1',float('-7.350000'),float('-7.350000'),float('0.000000'),float('7.350000'),float('7.350000'),float('11.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1208.2997022409781,
                558.5162006253456
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "platter.zmin+1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+0.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__2.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__2.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "fence.R-0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+1",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf18.1a-f0.6Z-Zf1.1nam__f1-r+qXqYf17.1a-f0.6Z-Zf1.1',float('-18.100000'),float('-18.100000'),float('0.600000'),float('18.100000'),float('18.100000'),float('1.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1640.8273460645146,
                236.10453951835217
            ],
            "name": "platter_texture",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__6,__1.__6,__4.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiaam__f1-r+qXqYf17.35a-f0Z-Zf2nam__f1-r+qXqYf15.35a-f0Z-Zf2aam__f1-r+qXqYf17.35a-f-0.4Z-Zf0nam__f1-r+qXqYf4a-f-0.4Z-Zf0m-Xf0-Yf0-Zf2-r+q-f16.35r+qXqYqZf1naam__f1-r+qXqYf18.1a-f0.6Z-Zf1.1nam__f1-r+qXqYf17.1a-f0.6Z-Zf1.1',float('-17.350000'),float('-17.350000'),float('-0.400000'),float('17.350000'),float('17.350000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2025.7372676322484,
                151.78148969036923
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__9.__2,__7.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iaiiaam__f1-r+qXqYf17.35a-f0Z-Zf2nam__f1-r+qXqYf15.35a-f0Z-Zf2aam__f1-r+qXqYf17.35a-f-0.4Z-Zf0nam__f1-r+qXqYf4a-f-0.4Z-Zf0m-Xf0-Yf0-Zf2-r+q-f16.35r+qXqYqZf1naam__f1-r+qXqYf18.1a-f0.6Z-Zf1.1nam__f1-r+qXqYf17.1a-f0.6Z-Zf1.1aiaam__f1-r+qXqYf7.35a-f0Z-Zf11nam__f1-r+qXqYf5.85a-f0Z-Zf11m-Xf0-Yf0-Zf11-r+q-f6.6r+qXqYqZf0.75niiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf2.25m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf4.5m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf6.75m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1m-Xf0-Yf0-Zf9m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0aam__f1-r+qXqYf8.1a-f0.5Z-Zf1nam__f1-r+qXqYf7.1a-f0.5Z-Zf1',float('-17.350000'),float('-17.350000'),float('-0.400000'),float('17.350000'),float('17.350000'),float('11.750000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                2455.434753797651,
                673.7612607352789
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 10
        }
    ],
    "protocol": 6,
    "type": "sb"
}
