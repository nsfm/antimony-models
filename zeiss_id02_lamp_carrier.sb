{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "7.1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "28/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "39.4/2",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf19.7a-f0Z-Zf7.1nam__f1-r+qXqYf14a-f0Z-Zf7.1',float('-19.700001'),float('-19.700001'),float('0.000000'),float('19.700001'),float('19.700001'),float('7.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                17.404475093496842,
                -353.93966340341746
            ],
            "name": "outer",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__0]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__0.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__0.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.R-2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__0.__4]",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf14a-f0Z-Zf2nam__f1-r+qXqYf12a-f0Z-Zf2',float('-14.000000'),float('-14.000000'),float('0.000000'),float('14.000000'),float('14.000000'),float('2.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                434.72082487841635,
                -452.9822470573001
            ],
            "name": "lip",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "outer.x+outer.R-2+self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "outer.zmax/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "26",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "(outer.zmax-outer.zmin)*3",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f19.7X-Xf41.7a-f0Y-Yf0a-f-7.1Z-Zf14.2am__f1iaa-f17.7X-Xf43.7a-f0Y-Yf0aa-f19.7X-Xf41.7a-f-2Y-Yf2a-f-5.1Z-Zf12.2-r++q-Xf41.7qYq-Zf12.2f2-r++q-Xf19.7qYq-Zf12.2f2-r++q-Xf41.7qYq-Zf12.2f2-r++q-Xf19.7qYq-Zf12.2f2-r++q-Xf41.7qYq-Zf-5.1f2-r++q-Xf19.7qYq-Zf-5.1f2-r++q-Xf41.7qYq-Zf-5.1f2-r++q-Xf19.7qYq-Zf-5.1f2am__f1-r+q-Xf41.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf12.2f2a-f19.7X-Xf41.7a-r+q-Xf41.7q-Zf12.2f2a-f0Y-Yf0am__f1-r+q-Xf19.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf12.2f2a-f19.7X-Xf41.7a-r+q-Xf19.7q-Zf12.2f2a-f0Y-Yf0am__f1-r+q-Xf41.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf-5.1f2a-f19.7X-Xf41.7a-r+q-Xf41.7q-Zf-5.1f2a-f0Y-Yf0am__f1-r+q-Xf19.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf-5.1f2a-f19.7X-Xf41.7a-r+q-Xf19.7q-Zf-5.1f2a-f0Y-Yf0',float('17.700001'),float('-2.000000'),float('-7.100000'),float('43.700001'),float('2.000000'),float('14.200000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -75,
                107
            ],
            "name": "handle",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__4.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f19.7X-Xf41.7a-f0Y-Yf0a-f-7.1Z-Zf14.2am__f1iaa-f17.7X-Xf43.7a-f0Y-Yf0aa-f19.7X-Xf41.7a-f-2Y-Yf2a-f-5.1Z-Zf12.2-r++q-Xf41.7qYq-Zf12.2f2-r++q-Xf19.7qYq-Zf12.2f2-r++q-Xf41.7qYq-Zf12.2f2-r++q-Xf19.7qYq-Zf12.2f2-r++q-Xf41.7qYq-Zf-5.1f2-r++q-Xf19.7qYq-Zf-5.1f2-r++q-Xf41.7qYq-Zf-5.1f2-r++q-Xf19.7qYq-Zf-5.1f2am__f1-r+q-Xf41.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf12.2f2a-f19.7X-Xf41.7a-r+q-Xf41.7q-Zf12.2f2a-f0Y-Yf0am__f1-r+q-Xf19.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf12.2f2a-f19.7X-Xf41.7a-r+q-Xf19.7q-Zf12.2f2a-f0Y-Yf0am__f1-r+q-Xf41.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf-5.1f2a-f19.7X-Xf41.7a-r+q-Xf41.7q-Zf-5.1f2a-f0Y-Yf0am__f1-r+q-Xf19.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf-5.1f2a-f19.7X-Xf41.7a-r+q-Xf19.7q-Zf-5.1f2a-f0Y-Yf0am__f1-r+qXqYf59.1a-f0Z-Zf7.1',float('17.700001'),float('-2.000000'),float('0.000000'),float('43.700001'),float('2.000000'),float('7.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                446,
                469
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "outer.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "outer.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "outer.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "outer.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "outer.R*3",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf59.1a-f0Z-Zf7.1',float('-59.099998'),float('-59.099998'),float('0.000000'),float('59.099998'),float('59.099998'),float('7.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -25,
                642
            ],
            "name": "c0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "handle.x-handle.width/2+1",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "handle.y+handle.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "outer.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "outer.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf18.7q-Yf2f3a-f0Z-Zf7.1',float('15.700000'),float('-1.000000'),float('0.000000'),float('21.700001'),float('5.000000'),float('7.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -112.74312603917747,
                1021.0520884694564
            ],
            "name": "handle_support",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "handle.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__5.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f0Y_am__f1-r+q-Xf18.7q-Yf2f3a-f0Z-Zf7.1am__f1-r+q-Xf18.7q-Yf2f3a-f0Z-Zf7.1',float('15.700000'),float('-5.000000'),float('0.000000'),float('21.700001'),float('5.000000'),float('7.100000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                422.24606447543084,
                745.0139579050474
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "outer.y-outer.R-2",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "outer.y+outer.R+2",
                    "name": "ymax",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "outer.zmax/2",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1.75/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf0q-Zf3.55f0.875a-f-21.7Y-Yf21.7',float('-0.875000'),float('-21.700001'),float('2.675000'),float('0.875000'),float('21.700001'),float('4.425000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -406.187640644416,
                1504.6389260584683
            ],
            "name": "setscrew",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Y)')",
                "",
                "input('x', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_y(x, ymin, ymax, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, ymin, z), (x, ymax, z)])",
                "sb.ui.wireframe([(x, ymin, z), (x+r, ymin, z)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymin,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymax,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, ymin, z)",
                "sb.ui.point(x, ymax, z)",
                "sb.ui.point(x+r, ymin, z, drag=(r, None, None))",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__7.__1]",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.ymin+5",
                    "name": "ymax",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__7.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "5/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf0q-Zf3.55f2.5a-f-21.7Y-Yf-16.7',float('-2.500000'),float('-21.700001'),float('1.050000'),float('2.500000'),float('-16.700001'),float('6.050000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3.1876406444159784,
                1491.6389260584683
            ],
            "name": "setscrew_recess",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Y)')",
                "",
                "input('x', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_y(x, ymin, ymax, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, ymin, z), (x, ymax, z)])",
                "sb.ui.wireframe([(x, ymin, z), (x+r, ymin, z)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymin,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymax,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, ymin, z)",
                "sb.ui.point(x, ymax, z)",
                "sb.ui.point(x+r, ymin, z, drag=(r, None, None))",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "outer.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__8.__5,__7.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im_-*f2f0Y_ia-r+q-Xf0q-Zf3.55f2.5a-f-21.7Y-Yf-16.7a-r+q-Xf0q-Zf3.55f0.875a-f-21.7Y-Yf21.7ia-r+q-Xf0q-Zf3.55f2.5a-f-21.7Y-Yf-16.7a-r+q-Xf0q-Zf3.55f0.875a-f-21.7Y-Yf21.7',float('-2.500000'),float('-21.700001'),float('1.050000'),float('2.500000'),float('21.700001'),float('6.050000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                443.8123593555838,
                1735.199383156124
            ],
            "name": "m1",
            "script": [
                "import fab",
                "",
                "title('Mirror (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__6,__3.__2,__6.__4,__0.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__9.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiaam__f1-r+qXqYf14a-f0Z-Zf2nam__f1-r+qXqYf12a-f0Z-Zf2aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f19.7X-Xf41.7a-f0Y-Yf0a-f-7.1Z-Zf14.2am__f1iaa-f17.7X-Xf43.7a-f0Y-Yf0aa-f19.7X-Xf41.7a-f-2Y-Yf2a-f-5.1Z-Zf12.2-r++q-Xf41.7qYq-Zf12.2f2-r++q-Xf19.7qYq-Zf12.2f2-r++q-Xf41.7qYq-Zf12.2f2-r++q-Xf19.7qYq-Zf12.2f2-r++q-Xf41.7qYq-Zf-5.1f2-r++q-Xf19.7qYq-Zf-5.1f2-r++q-Xf41.7qYq-Zf-5.1f2-r++q-Xf19.7qYq-Zf-5.1f2am__f1-r+q-Xf41.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf12.2f2a-f19.7X-Xf41.7a-r+q-Xf41.7q-Zf12.2f2a-f0Y-Yf0am__f1-r+q-Xf19.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf12.2f2a-f19.7X-Xf41.7a-r+q-Xf19.7q-Zf12.2f2a-f0Y-Yf0am__f1-r+q-Xf41.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf-5.1f2a-f19.7X-Xf41.7a-r+q-Xf41.7q-Zf-5.1f2a-f0Y-Yf0am__f1-r+q-Xf19.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf-5.1f2a-f19.7X-Xf41.7a-r+q-Xf19.7q-Zf-5.1f2a-f0Y-Yf0am__f1-r+qXqYf59.1a-f0Z-Zf7.1im_-*f2f0Y_am__f1-r+q-Xf18.7q-Yf2f3a-f0Z-Zf7.1am__f1-r+q-Xf18.7q-Yf2f3a-f0Z-Zf7.1aam__f1-r+qXqYf19.7a-f0Z-Zf7.1nam__f1-r+qXqYf14a-f0Z-Zf7.1nim_-*f2f0Y_ia-r+q-Xf0q-Zf3.55f2.5a-f-21.7Y-Yf-16.7a-r+q-Xf0q-Zf3.55f0.875a-f-21.7Y-Yf21.7ia-r+q-Xf0q-Zf3.55f2.5a-f-21.7Y-Yf-16.7a-r+q-Xf0q-Zf3.55f0.875a-f-21.7Y-Yf21.7',float('-19.700001'),float('-19.700001'),float('0.000000'),float('43.700001'),float('19.700001'),float('7.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1296.1998953892587,
                286.2253157229077
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiaam__f1-r+qXqYf14a-f0Z-Zf2nam__f1-r+qXqYf12a-f0Z-Zf2aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f19.7X-Xf41.7a-f0Y-Yf0a-f-7.1Z-Zf14.2am__f1iaa-f17.7X-Xf43.7a-f0Y-Yf0aa-f19.7X-Xf41.7a-f-2Y-Yf2a-f-5.1Z-Zf12.2-r++q-Xf41.7qYq-Zf12.2f2-r++q-Xf19.7qYq-Zf12.2f2-r++q-Xf41.7qYq-Zf12.2f2-r++q-Xf19.7qYq-Zf12.2f2-r++q-Xf41.7qYq-Zf-5.1f2-r++q-Xf19.7qYq-Zf-5.1f2-r++q-Xf41.7qYq-Zf-5.1f2-r++q-Xf19.7qYq-Zf-5.1f2am__f1-r+q-Xf41.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf12.2f2a-f19.7X-Xf41.7a-r+q-Xf41.7q-Zf12.2f2a-f0Y-Yf0am__f1-r+q-Xf19.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf12.2f2a-f19.7X-Xf41.7a-r+q-Xf19.7q-Zf12.2f2a-f0Y-Yf0am__f1-r+q-Xf41.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf-5.1f2a-f19.7X-Xf41.7a-r+q-Xf41.7q-Zf-5.1f2a-f0Y-Yf0am__f1-r+q-Xf19.7qYf2a-f-5.1Z-Zf12.2a-r+q-Yf0q-Zf-5.1f2a-f19.7X-Xf41.7a-r+q-Xf19.7q-Zf-5.1f2a-f0Y-Yf0am__f1-r+qXqYf59.1a-f0Z-Zf7.1im_-*f2f0Y_am__f1-r+q-Xf18.7q-Yf2f3a-f0Z-Zf7.1am__f1-r+q-Xf18.7q-Yf2f3a-f0Z-Zf7.1aam__f1-r+qXqYf19.7a-f0Z-Zf7.1nam__f1-r+qXqYf14a-f0Z-Zf7.1nim_-*f2f0Y_ia-r+q-Xf0q-Zf3.55f2.5a-f-21.7Y-Yf-16.7a-r+q-Xf0q-Zf3.55f0.875a-f-21.7Y-Yf21.7ia-r+q-Xf0q-Zf3.55f2.5a-f-21.7Y-Yf-16.7a-r+q-Xf0q-Zf3.55f0.875a-f-21.7Y-Yf21.7',float('-19.700001'),float('-19.700001'),float('0.000000'),float('43.700001'),float('19.700001'),float('7.100000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1698.091222546168,
                301.4441007465678
            ],
            "name": "m2",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 11
        }
    ],
    "protocol": 6,
    "type": "sb"
}
