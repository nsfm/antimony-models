{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "40",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "40",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "3",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-20X-Xf20a-f-20Y-Yf20a-f-1.5Z-Zf1.5',float('-20.000000'),float('-20.000000'),float('-1.500000'),float('20.000000'),float('20.000000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3428.2060554175673,
                4428.84193866347
            ],
            "name": "form",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "form.x+form.width/2-4",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y+form.height/2-4",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "form.z-form.depth",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "form.z+form.depth",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3',float('14.500000'),float('14.500000'),float('-3.000000'),float('17.500000'),float('17.500000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2215.784215784207,
                4987.012987012968
            ],
            "name": "form_drill",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__4.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "-form.width+form_drill.r*4+4/2",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "-form.height+form_drill.r*4+4/2",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3',float('-19.000000'),float('-19.000000'),float('-3.000000'),float('19.000000'),float('19.000000'),float('3.000000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                3433.4375346176384,
                5004.917159876683
            ],
            "name": "a0",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__1.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "form.z",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__1.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "form_drill.r*2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3',float('13.000000'),float('13.000000'),float('0.000000'),float('19.000000'),float('19.000000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2620.7052849986408,
                4984.9768484314845
            ],
            "name": "recess",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__1.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3',float('13.000000'),float('13.000000'),float('-3.000000'),float('19.000000'),float('19.000000'),float('3.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3039.052758120146,
                5293.656880119026
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__2.__7]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-20X-Xf20a-f-20Y-Yf20a-f-1.5Z-Zf1.5nm-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3',float('-20.000000'),float('-20.000000'),float('-1.500000'),float('20.000000'),float('20.000000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3875.6151148228932,
                4946.689214142313
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "form.x+form.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y+form.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "form.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "form.height/20",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "form.height/10",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "form.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5',float('19.000000'),float('18.000000'),float('-1.500000'),float('21.000000'),float('22.000000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1236.2124677538645,
                5521.353221862246
            ],
            "name": "c2",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__6.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__6.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__6.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5',float('17.878679'),float('17.878679'),float('-1.500000'),float('22.121321'),float('22.121321'),float('1.500000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1627.0653721149843,
                5559.752805448601
            ],
            "name": "r0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__9.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5',float('17.878679'),float('-22.121321'),float('-1.500000'),float('22.121321'),float('-17.878679'),float('1.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2338.8290821620753,
                5766.83627407502
            ],
            "name": "r1",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__7.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5',float('17.878679'),float('17.878679'),float('-1.500000'),float('22.121321'),float('22.121321'),float('1.500000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1987.7471750868222,
                5629.694904123748
            ],
            "name": "c3",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__9.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5',float('17.878679'),float('-22.121321'),float('-1.500000'),float('22.121321'),float('22.121321'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2723.435293344611,
                5626.040375282639
            ],
            "name": "u1",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5',float('17.878679'),float('-22.121321'),float('-1.500000'),float('22.121321'),float('22.121321'),float('1.500000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                3089.2960431129363,
                5644.993533886918
            ],
            "name": "c4",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__11.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-*f2f0X__im-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5',float('-22.121321'),float('-22.121321'),float('-1.500000'),float('-17.878679'),float('22.121321'),float('1.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                3469.465480194944,
                5800.915561077236
            ],
            "name": "r2",
            "script": [
                "import fab",
                "",
                "title('Reflect (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__11.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__12.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iim-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m-*f2f0X__im-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5',float('-22.121321'),float('-22.121321'),float('-1.500000'),float('22.121321'),float('22.121321'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3867.1542461747426,
                5646.745466776698
            ],
            "name": "u2",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__5.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__13.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaam__f1aa-f-20X-Xf20a-f-20Y-Yf20a-f-1.5Z-Zf1.5nm-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3niim-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m-*f2f0X__im-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5',float('-20.000000'),float('-20.000000'),float('-1.500000'),float('20.000000'),float('20.000000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4363.5296266302,
                5309.8360744667825
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "c11.zmax+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "76",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "26",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1.2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-38X-Xf38a-f-13Y-Yf13a-f14.5Z-Zf15.7',float('-38.000000'),float('-13.000000'),float('14.500000'),float('38.000000'),float('13.000000'),float('15.700000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3733.8814580917774,
                3863.1454057012847
            ],
            "name": "slide",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__15.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "10",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "13",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "128",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-38X-Xf38a-f-13Y-Yf13a-f14.5Z-Zf15.7',float('-38.000000'),float('-13.000000'),float('14.500000'),float('38.000000'),float('13.000000'),float('15.700000'),color=(10,13,128))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                4126.597641781615,
                3865.607576131942
            ],
            "name": "s0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "form.z+form.depth/2+self.depth/2-dotstar_pocket.depth",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "25.35",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "25.35",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "2.6",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.675X-Xf12.675a-f-12.675Y-Yf12.675a-f-2.22045e-16Z-Zf2.6',float('-12.675000'),float('-12.675000'),float('-0.000000'),float('12.675000'),float('12.675000'),float('2.600000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3318.06761400987,
                2428.335926780092
            ],
            "name": "dotstar",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 20
        },
        {
            "datums": [
                {
                    "expr": "dotstar.x + dotstar.width/2+self.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "dotstar.y+dotstar.height/2-self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "dotstar.z-(dotstar.depth-self.depth)",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "5",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "5",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1.6",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1',float('12.675000'),float('7.675000'),float('-0.500000'),float('17.674999'),float('12.675000'),float('1.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2484.820367726619,
                2536.355038030394
            ],
            "name": "dotstar_mount",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 21
        },
        {
            "datums": [
                {
                    "expr": "dotstar_mount.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "dotstar_mount.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "dotstar_mount.z-dotstar_mount.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "dotstar_mount.z+dotstar_mount.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2.6/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1',float('13.875000'),float('8.875000'),float('-0.500000'),float('16.475000'),float('11.475000'),float('1.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2536.723378805161,
                3102.387533336151
            ],
            "name": "dotstar_drill",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 22
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__21.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__22.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1',float('12.675000'),float('7.675000'),float('-0.500000'),float('17.674999'),float('12.675000'),float('1.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2991.5557483132698,
                3123.339653061498
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 23
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__23.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "-dotstar.width-dotstar_mount.width",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "-dotstar.height+dotstar_mount.height",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1m-Xf-30.35-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1m-Xf0-Yf-20.35-Zf0im-Xf-0-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1m-Xf-30.35-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1',float('-17.674999'),float('-12.675000'),float('-0.500000'),float('17.674999'),float('12.675000'),float('1.100000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                3327.905249913777,
                3033.266631152327
            ],
            "name": "a1",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 24
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__20.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__24.__7]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iam__f1aa-f-12.675X-Xf12.675a-f-12.675Y-Yf12.675a-f-2.22045e-16Z-Zf2.6m-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1m-Xf-30.35-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1m-Xf0-Yf-20.35-Zf0im-Xf-0-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1m-Xf-30.35-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1',float('-17.674999'),float('-12.675000'),float('-0.500000'),float('17.674999'),float('12.675000'),float('2.600000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3713.7511753699473,
                3098.623737085613
            ],
            "name": "u3",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 26
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__26.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "64",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "64",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "64",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iam__f1aa-f-12.675X-Xf12.675a-f-12.675Y-Yf12.675a-f-2.22045e-16Z-Zf2.6m-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1m-Xf-30.35-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1m-Xf0-Yf-20.35-Zf0im-Xf-0-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1m-Xf-30.35-Yf0-Zf0aam__f1aa-f12.675X-Xf17.675a-f7.675Y-Yf12.675a-f-0.5Z-Zf1.1nam__f1-r+q-Xf15.175q-Yf10.175f1.3a-f-0.5Z-Zf1.1',float('-17.674999'),float('-12.675000'),float('-0.500000'),float('17.674999'),float('12.675000'),float('2.600000'),color=(64,64,64))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                4064.112412673979,
                3043.1939610831746
            ],
            "name": "s1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 27
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "form.z+form.depth/2-self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "dotstar.width+dotstar_mount.width*2+1",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "dotstar.height+1",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "form.depth/2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-18.175X-Xf18.175a-f-13.175Y-Yf13.175a-f0Z-Zf1.5',float('-18.174999'),float('-13.175000'),float('0.000000'),float('18.174999'),float('13.175000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                4238.439824407103,
                6033.202750205294
            ],
            "name": "dotstar_pocket",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 17
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__14.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__17.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaam__f1aa-f-20X-Xf20a-f-20Y-Yf20a-f-1.5Z-Zf1.5nm-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3niim-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m-*f2f0X__im-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5nam__f1aa-f-18.175X-Xf18.175a-f-13.175Y-Yf13.175a-f0Z-Zf1.5',float('-20.000000'),float('-20.000000'),float('-1.500000'),float('20.000000'),float('20.000000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4771.246985010241,
                5687.701015078805
            ],
            "name": "d3",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 18
        },
        {
            "datums": [
                {
                    "expr": "dotstar.x+dotstar.width/2+self.width/2+.5",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "dotstar.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "dotstar_pocket.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "dotstar_mount.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "dotstar.height-dotstar_mount.height*2-1",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "dotstar_pocket.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5',float('13.175000'),float('-7.175000'),float('0.000000'),float('18.174999'),float('7.175000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                3484.9279805836504,
                6562.107609832381
            ],
            "name": "dotstar_pocket_filler",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 19
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__19.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5',float('13.175000'),float('-7.175000'),float('0.000000'),float('18.174999'),float('7.175000'),float('1.500000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                4000.9840495986555,
                6729.381998492325
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 28
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__28.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-*f2f0X__am__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5',float('-18.174999'),float('-7.175000'),float('0.000000'),float('-13.175000'),float('7.175000'),float('1.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                4354.110035658153,
                6849.311578663476
            ],
            "name": "r3",
            "script": [
                "import fab",
                "",
                "title('Reflect (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 29
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__28.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__29.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iam__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5m-*f2f0X__am__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5',float('-18.174999'),float('-7.175000'),float('0.000000'),float('18.174999'),float('7.175000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4738.884105373927,
                6730.21484279907
            ],
            "name": "u4",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 30
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__18.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__30.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaaaam__f1aa-f-20X-Xf20a-f-20Y-Yf20a-f-1.5Z-Zf1.5nm-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3niim-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m-*f2f0X__im-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5nam__f1aa-f-18.175X-Xf18.175a-f-13.175Y-Yf13.175a-f0Z-Zf1.5iam__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5m-*f2f0X__am__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5',float('-20.000000'),float('-20.000000'),float('-1.500000'),float('20.000000'),float('20.000000'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5344.625607407616,
                6218.839461407375
            ],
            "name": "u5",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 31
        },
        {
            "datums": [
                {
                    "expr": "cup.x-cup.width/2",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "cup.x+cup.width/2",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "cup.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "cup.z+cup.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "cup.height/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786',float('14.478572'),float('-6.175000'),float('4.325000'),float('18.478571'),float('6.175000'),float('16.674999'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1658.2579492002596,
                6501.722277228277
            ],
            "name": "rocker",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 34
        },
        {
            "datums": [
                {
                    "expr": "fab.types.Shape('am__f1aa-f14.4786X-Xf18.4786a-f-6.175Y-Yf6.175a-f1.5Z-Zf11.5',float('14.478572'),float('-6.175000'),float('1.500000'),float('18.478571'),float('6.175000'),float('11.500000'))",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__37.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "0.2",
                    "name": "o",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0012fab.types.Shape('iia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452aam__f1aa-f14.4786X-Xf18.4786a-f-6.175Y-Yf6.175a-f1.5Z-Zf11.5n-ia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452f0.2',float('14.478572'),float('-7.175000'),float('1.500000'),float('18.478571'),float('7.175000'),float('17.674999'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                }
            ],
            "inspector": [
                -757.3080987514281,
                6889.823751267773
            ],
            "name": "c5",
            "script": [
                "import fab.types",
                "import fab.shapes",
                "",
                "title('Clearance')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "input('o', float)",
                "",
                "output('shape', fab.shapes.clearance(a, b, o))",
                ""
            ],
            "uid": 35
        },
        {
            "datums": [
                {
                    "expr": "cup.x-cup.width/6",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "cup.x+cup.width/6",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "cup.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "cup.z+cup.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "rocker.r+1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452',float('15.811905'),float('-7.175000'),float('3.325000'),float('17.145239'),float('7.175000'),float('17.674999'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1716.5717290694565,
                7079.023666576828
            ],
            "name": "rocker_guide",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 36
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__34.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__36.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('ia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452',float('14.478572'),float('-7.175000'),float('3.325000'),float('18.478571'),float('7.175000'),float('17.674999'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1198.8725309494284,
                6971.998298066948
            ],
            "name": "u6",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 37
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__35.__3]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452aam__f1aa-f14.4786X-Xf18.4786a-f-6.175Y-Yf6.175a-f1.5Z-Zf11.5n-ia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452f0.2',float('14.478572'),float('-7.175000'),float('1.500000'),float('18.478571'),float('7.175000'),float('17.674999'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                -403.85144633647405,
                6924.002816023887
            ],
            "name": "c6",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 38
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__38.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__39.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452aam__f1aa-f14.4786X-Xf18.4786a-f-6.175Y-Yf6.175a-f1.5Z-Zf11.5n-ia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452f0.2m-*f2f0X__iia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452aam__f1aa-f14.4786X-Xf18.4786a-f-6.175Y-Yf6.175a-f1.5Z-Zf11.5n-ia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452f0.2',float('-18.478571'),float('-7.175000'),float('1.500000'),float('18.478571'),float('7.175000'),float('17.674999'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                366.4461080686501,
                6932.925181518927
            ],
            "name": "u7",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 40
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__38.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-*f2f0X__iia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452aam__f1aa-f14.4786X-Xf18.4786a-f-6.175Y-Yf6.175a-f1.5Z-Zf11.5n-ia-r+q-Yf0q-Zf10.5f6.175a-f14.4786X-Xf18.4786a-r+q-Yf0q-Zf10.5f7.175a-f15.8119X-Xf17.1452f0.2',float('-18.478571'),float('-7.175000'),float('1.500000'),float('-14.478572'),float('7.175000'),float('17.674999'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -52.905070198232806,
                7097.988943177166
            ],
            "name": "r4",
            "script": [
                "import fab",
                "",
                "title('Reflect (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 39
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__40.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                }
            ],
            "inspector": [
                714.4050053187707,
                6965.721605285336
            ],
            "name": "h1",
            "script": [
                "import fab",
                "",
                "title('Hide')",
                "",
                "input('shape',fab.types.Shape)",
                ""
            ],
            "uid": 41
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y-form.height/2+(form.height-dotstar.height)/4",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "form.z+form.depth/2+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "dotstar.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "(form.height-dotstar.height)/2-2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "9",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5',float('-12.675000'),float('-19.000000'),float('1.500000'),float('12.675000'),float('-13.675000'),float('10.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                4466.873237757148,
                8310.037960345597
            ],
            "name": "c1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 32
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "10",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "12.5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "form.width/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf20a-f10Z-Zf12.5',float('-20.000000'),float('-20.000000'),float('10.000000'),float('20.000000'),float('20.000000'),float('12.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6948.2764205323265,
                5215.004408357601
            ],
            "name": "slide_tray",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 42
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_tray.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide_tray.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide_tray.r-4",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf16a-f10Z-Zf12.5',float('-16.000000'),float('-16.000000'),float('10.000000'),float('16.000000'),float('16.000000'),float('12.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6859.183088888957,
                5571.377734931077
            ],
            "name": "slide_tray_cutout",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 43
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__42.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__43.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5',float('-20.000000'),float('-20.000000'),float('10.000000'),float('20.000000'),float('20.000000'),float('12.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7370.374336023045,
                5540.706260103032
            ],
            "name": "d4",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 44
        },
        {
            "datums": [
                {
                    "expr": "slide_tray.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide_tray.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_tray.zmin",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide_tray.r-4/2",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "4/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2',float('-20.000000'),float('-20.000000'),float('8.000000'),float('20.000000'),float('20.000000'),float('12.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                7357.2294182395935,
                5844.4999155427195
            ],
            "name": "tray_round",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 45
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__60.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f0Y_aaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5',float('-12.675000'),float('13.675000'),float('1.500000'),float('12.675000'),float('19.000000'),float('10.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                5465.979744175354,
                8831.732307772247
            ],
            "name": "r5",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 46
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__46.__3]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__46.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5m_-*f2f0Y_aaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5',float('-12.675000'),float('-19.000000'),float('1.500000'),float('12.675000'),float('19.000000'),float('10.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5836.166581623145,
                8828.126591823078
            ],
            "name": "u8",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 47
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__44.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__45.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2',float('-20.000000'),float('-20.000000'),float('8.000000'),float('20.000000'),float('20.000000'),float('12.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7747.154541959871,
                5722.621929019546
            ],
            "name": "u9",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 48
        },
        {
            "datums": [
                {
                    "expr": "slide_tray.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide_tray.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_tray.zmin",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "tray_round.R+1",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "tray_round.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf10-r+q-f19r+qXqYqZf2',float('-21.000000'),float('-21.000000'),float('8.000000'),float('21.000000'),float('21.000000'),float('12.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5435.698112796066,
                9930.727180792914
            ],
            "name": "slide_race",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 49
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_tray.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide_tray.zmax-1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide_race.R+slide_race.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf21a-f10Z-Zf11.5',float('-21.000000'),float('-21.000000'),float('10.000000'),float('21.000000'),float('21.000000'),float('11.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5000.350499160029,
                10025.527070161574
            ],
            "name": "race_upper",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 53
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "race_upper.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "race_upper.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide_tray.r-4",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf16a-f10Z-Zf11.5',float('-16.000000'),float('-16.000000'),float('10.000000'),float('16.000000'),float('16.000000'),float('11.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4926.991638681073,
                10435.155529906911
            ],
            "name": "race_upper_cutout",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 54
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__53.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__54.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf21a-f10Z-Zf11.5nam__f1-r+qXqYf16a-f10Z-Zf11.5',float('-21.000000'),float('-21.000000'),float('10.000000'),float('21.000000'),float('21.000000'),float('11.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5438.18288581516,
                10404.484055078865
            ],
            "name": "d5",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 55
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__49.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__55.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf0-Zf10-r+q-f19r+qXqYqZf2aam__f1-r+qXqYf21a-f10Z-Zf11.5nam__f1-r+qXqYf16a-f10Z-Zf11.5',float('-21.000000'),float('-21.000000'),float('8.000000'),float('21.000000'),float('21.000000'),float('12.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5841.204492019488,
                10336.150421276478
            ],
            "name": "u12",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 56
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__47.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__52.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5m_-*f2f0Y_aaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5iaam__f1-r+qXqYf21a-f11.5Z-Zf13.5nam__f1-r+qXqYf19a-f11.5Z-Zf13.5im-Xf0-Yf0-Zf10-r+q-f19r+qXqYqZf2aam__f1-r+qXqYf21a-f10Z-Zf11.5nam__f1-r+qXqYf16a-f10Z-Zf11.5',float('-21.000000'),float('-21.000000'),float('1.500000'),float('21.000000'),float('21.000000'),float('13.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                6675.436019933291,
                9762.173281103616
            ],
            "name": "u13",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 57
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__57.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__68.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": ".15",
                    "name": "o",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2aiiaaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5m_-*f2f0Y_aaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5iaam__f1-r+qXqYf21a-f11.5Z-Zf13.5nam__f1-r+qXqYf19a-f11.5Z-Zf13.5im-Xf0-Yf0-Zf10-r+q-f19r+qXqYqZf2aam__f1-r+qXqYf21a-f10Z-Zf11.5nam__f1-r+qXqYf16a-f10Z-Zf11.5n-iiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2f0.15',float('-21.000000'),float('-21.000000'),float('1.500000'),float('21.000000'),float('21.000000'),float('14.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                }
            ],
            "inspector": [
                7171.002527840305,
                8893.988099830238
            ],
            "name": "c7",
            "script": [
                "import fab.types",
                "import fab.shapes",
                "",
                "title('Clearance')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "input('o', float)",
                "",
                "output('shape', fab.shapes.clearance(a, b, o))",
                ""
            ],
            "uid": 58
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "form.z+form.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide_race.z+slide_race.r",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide_race.R+slide_race.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf21a-f1.5Z-Zf12',float('-21.000000'),float('-21.000000'),float('1.500000'),float('21.000000'),float('21.000000'),float('12.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3666.424019210109,
                7713.486394672576
            ],
            "name": "c8",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 59
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__62.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__32.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5',float('-12.675000'),float('-19.000000'),float('1.500000'),float('12.675000'),float('-13.675000'),float('10.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4892.734000094181,
                8319.359211197841
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 60
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__59.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__59.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__59.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__59.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide_race.R-slide_race.r-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf16a-f1.5Z-Zf12',float('-16.000000'),float('-16.000000'),float('1.500000'),float('16.000000'),float('16.000000'),float('12.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4045.0595194049974,
                7623.054039068073
            ],
            "name": "c9",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 61
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__59.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__61.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12',float('-21.000000'),float('-21.000000'),float('1.500000'),float('21.000000'),float('21.000000'),float('12.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4453.608403006135,
                8033.730781437964
            ],
            "name": "d6",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 62
        },
        {
            "datums": [
                {
                    "expr": "slide_tray.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide_tray.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "race_upper.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "race_upper.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf21a-f11.5Z-Zf13.5',float('-21.000000'),float('-21.000000'),float('11.500000'),float('21.000000'),float('21.000000'),float('13.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5045.788336399739,
                9457.72992321786
            ],
            "name": "race_cap",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 33
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__33.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__33.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__33.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__33.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "race_cap.r-2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf19a-f11.5Z-Zf13.5',float('-19.000000'),float('-19.000000'),float('11.500000'),float('19.000000'),float('19.000000'),float('13.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                5463.969386953589,
                9385.403011958546
            ],
            "name": "c10",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 50
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__33.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__50.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf21a-f11.5Z-Zf13.5nam__f1-r+qXqYf19a-f11.5Z-Zf13.5',float('-21.000000'),float('-21.000000'),float('11.500000'),float('21.000000'),float('21.000000'),float('13.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5867.685055255575,
                9712.84666475071
            ],
            "name": "d7",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 51
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__51.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__56.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaam__f1-r+qXqYf21a-f11.5Z-Zf13.5nam__f1-r+qXqYf19a-f11.5Z-Zf13.5im-Xf0-Yf0-Zf10-r+q-f19r+qXqYqZf2aam__f1-r+qXqYf21a-f10Z-Zf11.5nam__f1-r+qXqYf16a-f10Z-Zf11.5',float('-21.000000'),float('-21.000000'),float('8.000000'),float('21.000000'),float('21.000000'),float('13.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                6249.824172705592,
                10025.170448977975
            ],
            "name": "u10",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 52
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_tray.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide_tray.r-(slide_tray.r-slide_tray_cutout.r)+1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf17a-f12.5Z-Zf14.5',float('-17.000000'),float('-17.000000'),float('12.500000'),float('17.000000'),float('17.000000'),float('14.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6589.414686959412,
                4298.741644726886
            ],
            "name": "c11",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 63
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__63.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__63.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__63.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__63.__3]",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "c11.r-2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf15a-f12.5Z-Zf14.5',float('-15.000000'),float('-15.000000'),float('12.500000'),float('15.000000'),float('15.000000'),float('14.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6974.422601995016,
                4315.753327486016
            ],
            "name": "c12",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 64
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__63.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__64.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5',float('-17.000000'),float('-17.000000'),float('12.500000'),float('17.000000'),float('17.000000'),float('14.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7336.1784412605675,
                4654.09087440144
            ],
            "name": "d8",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 65
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__63.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__63.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__63.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "c11.r-(c11.r-c12.r)/2",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1',float('-17.000000'),float('-17.000000'),float('11.500000'),float('17.000000'),float('17.000000'),float('13.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6982.068014150086,
                4773.031840210138
            ],
            "name": "t0",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 66
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__65.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__66.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1',float('-17.000000'),float('-17.000000'),float('11.500000'),float('17.000000'),float('17.000000'),float('14.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7754.334052696308,
                4976.162155911961
            ],
            "name": "u11",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 67
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__67.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__48.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2',float('-20.000000'),float('-20.000000'),float('8.000000'),float('20.000000'),float('20.000000'),float('14.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                8183.205312086483,
                5349.802574697918
            ],
            "name": "u14",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 68
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__58.__3]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__58.__1]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2aiiaaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5m_-*f2f0Y_aaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5iaam__f1-r+qXqYf21a-f11.5Z-Zf13.5nam__f1-r+qXqYf19a-f11.5Z-Zf13.5im-Xf0-Yf0-Zf10-r+q-f19r+qXqYqZf2aam__f1-r+qXqYf21a-f10Z-Zf11.5nam__f1-r+qXqYf16a-f10Z-Zf11.5n-iiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2f0.15niiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2',float('-21.000000'),float('-21.000000'),float('1.500000'),float('21.000000'),float('21.000000'),float('14.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7673.3970972317975,
                9020.096482144574
            ],
            "name": "d9",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 69
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__76.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "128",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "164",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "128",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39X-Xf39a-f-14Y-Yf14a-f14.5Z-Zf16.5am__f1iaa-f-40X-Xf40a-f-14Y-Yf14aa-f-39X-Xf39a-f-15Y-Yf15a-f15.5Z-Zf15.5-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1am__f1-r+q-Xf39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14nam__f1aa-f-38X-Xf38a-f-13Y-Yf13a-f14.5Z-Zf16.5iaim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5m_-*f2f0Y_aim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5iiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2',float('-40.000000'),float('-20.000000'),float('8.000000'),float('40.000000'),float('20.000000'),float('16.500000'),color=(128,164,128))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                9950.818688356565,
                4732.904582543226
            ],
            "name": "s2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 71
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y-slide.height/2-self.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "c11.zmax+self.depth/2-2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "c11.r*2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "9",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "5",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5',float('-17.000000'),float('-22.000000'),float('12.500000'),float('17.000000'),float('-13.000000'),float('17.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                7360.744419629101,
                3998.99875542514
            ],
            "name": "c14",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 25
        },
        {
            "datums": [
                {
                    "expr": "form.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "c11.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "c11.r+2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf19a-f14.5Z-Zf16.5',float('-19.000000'),float('-19.000000'),float('14.500000'),float('19.000000'),float('19.000000'),float('16.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                6970.221868208207,
                3654.2311892416965
            ],
            "name": "c15",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 72
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__75.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__25.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5',float('-17.000000'),float('-19.000000'),float('13.500000'),float('17.000000'),float('-13.000000'),float('16.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                8060.501780855703,
                4349.573687917327
            ],
            "name": "i1",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 73
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__72.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__72.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__72.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "c15.r-1",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1',float('-19.000000'),float('-19.000000'),float('13.500000'),float('19.000000'),float('19.000000'),float('15.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                7372.556727047825,
                3536.881024778204
            ],
            "name": "t1",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 74
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__74.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__72.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5',float('-19.000000'),float('-19.000000'),float('13.500000'),float('19.000000'),float('19.000000'),float('16.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                7714.829277951344,
                3823.2396138296226
            ],
            "name": "u15",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 75
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__81.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__68.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39X-Xf39a-f-14Y-Yf14a-f14.5Z-Zf16.5am__f1iaa-f-40X-Xf40a-f-14Y-Yf14aa-f-39X-Xf39a-f-15Y-Yf15a-f15.5Z-Zf15.5-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1am__f1-r+q-Xf39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14nam__f1aa-f-38X-Xf38a-f-13Y-Yf13a-f14.5Z-Zf16.5iaim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5m_-*f2f0Y_aim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5iiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2',float('-40.000000'),float('-20.000000'),float('8.000000'),float('40.000000'),float('20.000000'),float('16.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                9573.743245691094,
                4766.175324609507
            ],
            "name": "u16",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 76
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__70.__3]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__70.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5m_-*f2f0Y_aim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5',float('-17.000000'),float('-19.000000'),float('13.500000'),float('17.000000'),float('19.000000'),float('16.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                8800.389724808054,
                4352.523302631025
            ],
            "name": "u17",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 77
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "form.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__73.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f0Y_aim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5',float('-17.000000'),float('13.000000'),float('13.500000'),float('17.000000'),float('19.000000'),float('16.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                8414.609563291262,
                4345.695335170551
            ],
            "name": "r6",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 70
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "(c15.zmax+c15.zmin)/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.width+4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height+4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "c15.zmax-c15.zmin",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39X-Xf39a-f-14Y-Yf14a-f14.5Z-Zf16.5am__f1iaa-f-40X-Xf40a-f-14Y-Yf14aa-f-39X-Xf39a-f-15Y-Yf15a-f15.5Z-Zf15.5-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1am__f1-r+q-Xf39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14',float('-40.000000'),float('-15.000000'),float('14.500000'),float('40.000000'),float('15.000000'),float('16.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                8338.799408141756,
                3351.805821832988
            ],
            "name": "r7",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 78
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r7.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "r7.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-38X-Xf38a-f-13Y-Yf13a-f14.5Z-Zf16.5',float('-38.000000'),float('-13.000000'),float('14.500000'),float('38.000000'),float('13.000000'),float('16.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                8368.592356242425,
                3832.66117942902
            ],
            "name": "c13",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 79
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__78.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__79.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39X-Xf39a-f-14Y-Yf14a-f14.5Z-Zf16.5am__f1iaa-f-40X-Xf40a-f-14Y-Yf14aa-f-39X-Xf39a-f-15Y-Yf15a-f15.5Z-Zf15.5-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1am__f1-r+q-Xf39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14nam__f1aa-f-38X-Xf38a-f-13Y-Yf13a-f14.5Z-Zf16.5',float('-40.000000'),float('-15.000000'),float('14.500000'),float('40.000000'),float('15.000000'),float('16.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                8784.038953273022,
                3774.9749933031617
            ],
            "name": "d10",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 80
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__80.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__77.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39X-Xf39a-f-14Y-Yf14a-f14.5Z-Zf16.5am__f1iaa-f-40X-Xf40a-f-14Y-Yf14aa-f-39X-Xf39a-f-15Y-Yf15a-f15.5Z-Zf15.5-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1am__f1-r+q-Xf39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14nam__f1aa-f-38X-Xf38a-f-13Y-Yf13a-f14.5Z-Zf16.5iaim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5m_-*f2f0Y_aim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5',float('-40.000000'),float('-19.000000'),float('13.500000'),float('40.000000'),float('19.000000'),float('16.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                9164.802106652642,
                4119.7796042830505
            ],
            "name": "u18",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 81
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__31.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__69.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaaaam__f1aa-f-20X-Xf20a-f-20Y-Yf20a-f-1.5Z-Zf1.5nm-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3niim-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m-*f2f0X__im-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5nam__f1aa-f-18.175X-Xf18.175a-f-13.175Y-Yf13.175a-f0Z-Zf1.5iam__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5m-*f2f0X__am__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5aiiiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2aiiaaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5m_-*f2f0Y_aaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5iaam__f1-r+qXqYf21a-f11.5Z-Zf13.5nam__f1-r+qXqYf19a-f11.5Z-Zf13.5im-Xf0-Yf0-Zf10-r+q-f19r+qXqYqZf2aam__f1-r+qXqYf21a-f10Z-Zf11.5nam__f1-r+qXqYf16a-f10Z-Zf11.5n-iiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2f0.15niiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2',float('-21.000000'),float('-21.000000'),float('-1.500000'),float('21.000000'),float('21.000000'),float('14.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                8425.041915232641,
                8279.072730561797
            ],
            "name": "u19",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 82
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__71.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-39X-Xf39a-f-14Y-Yf14a-f14.5Z-Zf16.5am__f1iaa-f-40X-Xf40a-f-14Y-Yf14aa-f-39X-Xf39a-f-15Y-Yf15a-f15.5Z-Zf15.5-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1-r++q-Xf39q-Yf14q-Zf15.5f1-r++q-Xf-39q-Yf14q-Zf15.5f1-r++q-Xf39q-Yf-14q-Zf15.5f1-r++q-Xf-39q-Yf-14q-Zf15.5f1am__f1-r+q-Xf39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf39q-Zf15.5f1a-f-14Y-Yf14am__f1-r+q-Xf-39q-Yf-14f1a-f15.5Z-Zf15.5a-r+q-Yf-14q-Zf15.5f1a-f-39X-Xf39a-r+q-Xf-39q-Zf15.5f1a-f-14Y-Yf14nam__f1aa-f-38X-Xf38a-f-13Y-Yf13a-f14.5Z-Zf16.5iaim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5m_-*f2f0Y_aim-Xf0-Yf0-Zf14.5-r+q-f18r+qXqYqZf1am__f1-r+qXqYf19a-f14.5Z-Zf16.5am__f1aa-f-17X-Xf17a-f-22Y-Yf-13a-f12.5Z-Zf17.5iiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2',float('-40.000000'),float('-20.000000'),float('8.000000'),float('40.000000'),float('20.000000'),float('16.500000'),color=(128,164,128))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                10317.35893360272,
                4808.661265819911
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 83
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__82.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaaaam__f1aa-f-20X-Xf20a-f-20Y-Yf20a-f-1.5Z-Zf1.5nm-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf0-Yf-32-Zf0im-Xf-0-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3m-Xf-32-Yf0-Zf0iam__f1-r+q-Xf16q-Yf16f3a-f0Z-Zf3am__f1-r+q-Xf16q-Yf16f1.5a-f-3Z-Zf3niim-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m-*f2f0X__im-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5m_-*f2f0Y_m-Xf20-Yf20-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf-20-Yf-20-Zf0am__f1aa-f19X-Xf21a-f18Y-Yf22a-f-1.5Z-Zf1.5nam__f1aa-f-18.175X-Xf18.175a-f-13.175Y-Yf13.175a-f0Z-Zf1.5iam__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5m-*f2f0X__am__f1aa-f13.175X-Xf18.175a-f-7.175Y-Yf7.175a-f0Z-Zf1.5aiiiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2aiiaaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5m_-*f2f0Y_aaam__f1-r+qXqYf21a-f1.5Z-Zf12nam__f1-r+qXqYf16a-f1.5Z-Zf12am__f1aa-f-12.675X-Xf12.675a-f-19Y-Yf-13.675a-f1.5Z-Zf10.5iaam__f1-r+qXqYf21a-f11.5Z-Zf13.5nam__f1-r+qXqYf19a-f11.5Z-Zf13.5im-Xf0-Yf0-Zf10-r+q-f19r+qXqYqZf2aam__f1-r+qXqYf21a-f10Z-Zf11.5nam__f1-r+qXqYf16a-f10Z-Zf11.5n-iiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2f0.15niiaam__f1-r+qXqYf17a-f12.5Z-Zf14.5nam__f1-r+qXqYf15a-f12.5Z-Zf14.5m-Xf0-Yf0-Zf12.5-r+q-f16r+qXqYqZf1iaam__f1-r+qXqYf20a-f10Z-Zf12.5nam__f1-r+qXqYf16a-f10Z-Zf12.5m-Xf0-Yf0-Zf10-r+q-f18r+qXqYqZf2',float('-21.000000'),float('-21.000000'),float('-1.500000'),float('21.000000'),float('21.000000'),float('14.500000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                8842.596925882635,
                8264.488890561604
            ],
            "name": "m1",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 84
        }
    ],
    "protocol": 6,
    "type": "sb"
}
