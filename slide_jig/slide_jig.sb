{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "25",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "75",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-0.5Z-Zf0.5',float('-12.500000'),float('-37.500000'),float('-0.500000'),float('12.500000'),float('37.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -1967.5397973178533,
                -495.3422414128099
            ],
            "name": "slide",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "64",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "128",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "200",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-0.5Z-Zf0.5',float('-12.500000'),float('-37.500000'),float('-0.500000'),float('12.500000'),float('37.500000'),float('0.500000'),color=(64,128,200))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1600.5397973178533,
                -459.3422414128099
            ],
            "name": "s0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.z - self.depth/2 - slide.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.width+10",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height+10",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "16",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -559.3412474412094,
                -103.33749929006282
            ],
            "name": "block",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "block.x-block.width/2",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.x+block.width/2",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "block.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "block.z-slide_nest.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5',float('-17.500000'),float('-3.000000'),float('-13.500000'),float('17.500000'),float('3.000000'),float('-7.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -3410.6760741404623,
                1280.1732822625568
            ],
            "name": "heater",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__25.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__18.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": ".1",
                    "name": "o",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0012fab.types.Shape('iiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                }
            ],
            "inspector": [
                294,
                676
            ],
            "name": "c0",
            "script": [
                "import fab.types",
                "import fab.shapes",
                "",
                "title('Clearance')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "input('o', float)",
                "",
                "output('shape', fab.shapes.clearance(a, b, o))",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__4.__3]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__18.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                754.6937088714473,
                1208.9657533994423
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5',float('-17.500000'),float('-3.000000'),float('-13.500000'),float('17.500000'),float('3.000000'),float('-7.500000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                -3014.043262716702,
                1390.507079838184
            ],
            "name": "c1",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "heater.r*6",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__6.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5',float('-17.500000'),float('15.000000'),float('-13.500000'),float('17.500000'),float('21.000000'),float('-7.500000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -2668.021690085909,
                1716.2356306392676
            ],
            "name": "t0",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__8.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5',float('-17.500000'),float('15.000000'),float('-13.500000'),float('17.500000'),float('21.000000'),float('-7.500000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                -2324.2861241769397,
                1587.2356306392676
            ],
            "name": "c2",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__9.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__7.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5',float('-17.500000'),float('-21.000000'),float('-13.500000'),float('17.500000'),float('21.000000'),float('-7.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1574.110079372388,
                1594.2402497506455
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__6.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__10.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5',float('-17.500000'),float('-21.000000'),float('-13.500000'),float('17.500000'),float('21.000000'),float('-7.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1201.2577379160493,
                1388.9450334022158
            ],
            "name": "u1",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.z+slide.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.z+slide.depth/2+0.15",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "8",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf8a-f0.5Z-Zf0.65',float('-8.000000'),float('-8.000000'),float('0.500000'),float('8.000000'),float('8.000000'),float('0.650000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1984.7317041779224,
                -918.3294955033542
            ],
            "name": "coverglass",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__12.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "128",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "200",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "200",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf8a-f0.5Z-Zf0.65',float('-8.000000'),float('-8.000000'),float('0.500000'),float('8.000000'),float('8.000000'),float('0.650000'),color=(128,200,200))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1590.5397973178533,
                -867.8605571544282
            ],
            "name": "s1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__9.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5',float('-17.500000'),float('-21.000000'),float('-13.500000'),float('17.500000'),float('-15.000000'),float('-7.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1949.1920258409318,
                1760.4289521377686
            ],
            "name": "r0",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "block.x-block.width/2",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.x+2",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "block.y +heater.r*3",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide_nest.z - slide_nest.depth/2 - self.r-1.5",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2',float('-17.500000'),float('8.000000'),float('-8.000000'),float('2.000000'),float('10.000000'),float('-6.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2854.3233737804353,
                706.8580938788232
            ],
            "name": "thermocouple",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__19.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2',float('-17.500000'),float('8.000000'),float('-8.000000'),float('2.000000'),float('10.000000'),float('-6.000000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                -1985.7254263116,
                931.0993470531314
            ],
            "name": "c3",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__15.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2',float('-17.500000'),float('-10.000000'),float('-8.000000'),float('2.000000'),float('-8.000000'),float('-6.000000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1601.8627853724345,
                1046.6566126645757
            ],
            "name": "r1",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__15.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__16.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2',float('-17.500000'),float('-10.000000'),float('-8.000000'),float('2.000000'),float('10.000000'),float('-6.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1207.3741889747453,
                933.7558359177622
            ],
            "name": "u2",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 17
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__17.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__11.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5',float('-17.500000'),float('-21.000000'),float('-13.500000'),float('17.500000'),float('21.000000'),float('-6.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -806.3971212092531,
                1163.3393358272242
            ],
            "name": "u3",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 18
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__14.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "heater.r*1.5",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2',float('-17.500000'),float('8.000000'),float('-8.000000'),float('2.000000'),float('10.000000'),float('-6.000000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -2369.2136518708235,
                730.359095689502
            ],
            "name": "a0",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 19
        },
        {
            "datums": [
                {
                    "expr": "block.x+block.width/4",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.y-block.height/2",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.ymin+13",
                    "name": "ymax",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "block.z-slide_nest.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "5.79/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5',float('5.855000'),float('-42.500000'),float('-13.395000'),float('11.645000'),float('-29.500000'),float('-7.605000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -707.4962849820336,
                1638.2554385309113
            ],
            "name": "threadmount",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Y)')",
                "",
                "input('x', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_y(x, ymin, ymax, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, ymin, z), (x, ymax, z)])",
                "sb.ui.wireframe([(x, ymin, z), (x+r, ymin, z)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymin,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymax,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, ymin, z)",
                "sb.ui.point(x, ymax, z)",
                "sb.ui.point(x+r, ymin, z, drag=(r, None, None))",
                ""
            ],
            "uid": 20
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__5.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__40.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1264.4316630872593,
                1757.5259712656025
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 21
        },
        {
            "datums": [
                {
                    "expr": "block.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "block.z+block.depth/2 - self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "4",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5',float('-12.500000'),float('-37.500000'),float('-4.500000'),float('12.500000'),float('37.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -578.3092106314928,
                470.89855581395204
            ],
            "name": "slide_nest",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 23
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.z+slide.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                }
            ],
            "inspector": [
                -1947.8868379123342,
                -48.788743388944326
            ],
            "name": "diatom",
            "script": [
                "import fab",
                "",
                "title('Point (3D)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "",
                "# UI",
                "sb.ui.point(x, y, z)",
                "",
                ""
            ],
            "uid": 24
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__23.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -87.05293085538293,
                507.80876332306707
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 25
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__13.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                }
            ],
            "inspector": [
                -1187.8267520606291,
                -706.2958017604827
            ],
            "name": "h0",
            "script": [
                "import fab",
                "",
                "title('Hide')",
                "",
                "input('shape',fab.types.Shape)",
                ""
            ],
            "uid": 26
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                }
            ],
            "inspector": [
                -1226.506708322996,
                -351.7295360221185
            ],
            "name": "h1",
            "script": [
                "import fab",
                "",
                "title('Hide')",
                "",
                "input('shape',fab.types.Shape)",
                ""
            ],
            "uid": 27
        },
        {
            "datums": [
                {
                    "expr": "slide_nest.x-slide_nest.width/2+self.r/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide_nest.y-slide_nest.height/2+self.r/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_nest.z-slide_nest.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide_nest.z+slide_nest.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5',float('-13.000000'),float('-38.000000'),float('-4.500000'),float('-11.000000'),float('-36.000000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                651.4472974438186,
                2252.386111856094
            ],
            "name": "corner_reliefs",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 28
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__28.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "slide_nest.width-corner_reliefs.r/2",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "slide_nest.height-corner_reliefs.r/2",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5',float('-13.000000'),float('-38.000000'),float('-4.500000'),float('13.500000'),float('38.500000'),float('-0.500000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                1152.2583492666472,
                2239.9238716191744
            ],
            "name": "a2",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 29
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__21.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__29.__7]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5nm-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1710.3606547915142,
                2071.914549066155
            ],
            "name": "d3",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 30
        },
        {
            "datums": [
                {
                    "expr": "block.x+self.r",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.y+block.height/3+3",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "block.z-block.depth/2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "block.z+block.depth/2-slide_nest.depth",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "8.334/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5',float('0.000000'),float('27.166334'),float('-16.500000'),float('8.334000'),float('35.500332'),float('-4.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2049.1913221274203,
                2491.9763809279634
            ],
            "name": "vacuum_npt",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 31
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__30.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__58.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5nm-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5niiam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2466.6407548423394,
                2945.00002705239
            ],
            "name": "d4",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 32
        },
        {
            "datums": [
                {
                    "expr": "block.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__38.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5',float('-11.645000'),float('29.500000'),float('-13.395000'),float('-5.855000'),float('42.500000'),float('-7.605000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                469.29537504448956,
                1827.3493590269527
            ],
            "name": "r4",
            "script": [
                "import fab",
                "",
                "title('Reflect (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 37
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__39.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5',float('5.855000'),float('29.500000'),float('-13.395000'),float('11.645000'),float('42.500000'),float('-7.605000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                98.18756817154588,
                1829.4962817604228
            ],
            "name": "r5",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 38
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__20.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5',float('5.855000'),float('-42.500000'),float('-13.395000'),float('11.645000'),float('-29.500000'),float('-7.605000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                -256.5659526213094,
                1710.843402379981
            ],
            "name": "c5",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 39
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__39.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__37.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('ia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5',float('-11.645000'),float('-42.500000'),float('-13.395000'),float('11.645000'),float('42.500000'),float('-7.605000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                849.0103899271345,
                1710.8211203945466
            ],
            "name": "u5",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 40
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__31.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__31.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__31.__3]",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__31.__2]",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "vacuum_npt.r+.5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5',float('-0.500000'),float('26.666334'),float('-16.500000'),float('8.834000'),float('36.000332'),float('-4.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1513.4582375067062,
                2974.327792053828
            ],
            "name": "c6",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 22
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__31.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__22.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5',float('-0.500000'),float('26.666334'),float('-16.500000'),float('8.834000'),float('36.000332'),float('-4.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1151.8329583999034,
                2852.8799375318017
            ],
            "name": "u6",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 41
        },
        {
            "datums": [
                {
                    "expr": "block.x-block.width/2 +2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.y-block.height/2+1",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "block.y+block.height/2-1",
                    "name": "ymax",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "block.z+block.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5',float('-16.500000'),float('-41.500000'),float('-1.500000'),float('-14.500000'),float('41.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                216.41749382523267,
                3426.307306005039
            ],
            "name": "sealant_groove",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Y)')",
                "",
                "input('x', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_y(x, ymin, ymax, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, ymin, z), (x, ymax, z)])",
                "sb.ui.wireframe([(x, ymin, z), (x+r, ymin, z)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymin,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x, ymax,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, ymin, z)",
                "sb.ui.point(x, ymax, z)",
                "sb.ui.point(x+r, ymin, z, drag=(r, None, None))",
                ""
            ],
            "uid": 42
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__42.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5',float('-16.500000'),float('-41.500000'),float('-1.500000'),float('-14.500000'),float('41.500000'),float('0.500000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                795.4700139353463,
                3690.5334658858155
            ],
            "name": "c7",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 43
        },
        {
            "datums": [
                {
                    "expr": "block.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__43.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5',float('14.500000'),float('-41.500000'),float('-1.500000'),float('16.500000'),float('41.500000'),float('0.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1178.37894167606,
                3845.435618736152
            ],
            "name": "r7",
            "script": [
                "import fab",
                "",
                "title('Reflect (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 45
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__43.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__45.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5',float('-16.500000'),float('-41.500000'),float('-1.500000'),float('16.500000'),float('41.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1608.689478489945,
                3691.88082136688
            ],
            "name": "u7",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 44
        },
        {
            "datums": [
                {
                    "expr": "block.x-block.width/2+1",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.x+block.width/2-1",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "block.y+block.height/2-2",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__42.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__42.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5',float('-16.500000'),float('39.500000'),float('-1.500000'),float('16.500000'),float('41.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                679.1446739399053,
                4114.828240919758
            ],
            "name": "sealant_groove_x",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 46
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__46.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5',float('-16.500000'),float('39.500000'),float('-1.500000'),float('16.500000'),float('41.500000'),float('0.500000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1191.4569799291357,
                4277.902298882527
            ],
            "name": "c8",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 47
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.y",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__47.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5',float('-16.500000'),float('-41.500000'),float('-1.500000'),float('16.500000'),float('-39.500000'),float('0.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1594.0911584389814,
                4433.7606905637585
            ],
            "name": "r6",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 48
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__47.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__48.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('ia-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5',float('-16.500000'),float('-41.500000'),float('-1.500000'),float('16.500000'),float('41.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2031.3605351002125,
                4270.6866326009895
            ],
            "name": "u8",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 49
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__76.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__49.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iim-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5ia-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5',float('-16.500000'),float('-41.500000'),float('-1.500000'),float('16.500000'),float('41.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2410.904581509136,
                3943.0953834191423
            ],
            "name": "u9",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 50
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__32.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__50.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaaaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5nm-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5niiam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5niim-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5ia-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2955.4899268660115,
                3259.4844880536043
            ],
            "name": "d5",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 51
        },
        {
            "datums": [
                {
                    "expr": "slide_nest.x-slide_nest.width/2",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide_nest.x+slide_nest.width/2",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "vacuum_npt.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "vacuum_npt.zmax",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "vacuum_outlet.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5',float('-12.500000'),float('30.333334'),float('-5.500000'),float('12.500000'),float('32.333332'),float('-3.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -847.1042096905876,
                3084.280259469447
            ],
            "name": "vacuum_groove",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 52
        },
        {
            "datums": [
                {
                    "expr": "slide_nest.x+slide_nest.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "vacuum_npt.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_nest.z-slide_nest.depth/2-vacuum_groove.r",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide_nest.z+slide_nest.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5',float('11.500000'),float('30.333334'),float('-5.500000'),float('13.500000'),float('32.333332'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -1945.2557469386625,
                3503.2797003089895
            ],
            "name": "vacuum_outlet",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 53
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__53.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5',float('11.500000'),float('30.333334'),float('-5.500000'),float('13.500000'),float('32.333332'),float('-0.500000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                -1515.230769867269,
                3614.324124767931
            ],
            "name": "c9",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 54
        },
        {
            "datums": [
                {
                    "expr": "block.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__54.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5',float('-13.500000'),float('30.333334'),float('-5.500000'),float('-11.500000'),float('32.333332'),float('-0.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1174.4768006942409,
                3730.8119033670177
            ],
            "name": "r8",
            "script": [
                "import fab",
                "",
                "title('Reflect (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 55
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__54.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__55.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5',float('-13.500000'),float('30.333334'),float('-5.500000'),float('13.500000'),float('32.333332'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -794.5306817121741,
                3612.146783111874
            ],
            "name": "u10",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 56
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__52.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__56.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5',float('-13.500000'),float('30.333334'),float('-5.500000'),float('13.500000'),float('32.333332'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -345.12501731672046,
                3433.326460992362
            ],
            "name": "u11",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 57
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__41.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__57.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5',float('-13.500000'),float('26.666334'),float('-16.500000'),float('13.500000'),float('36.000332'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                9.223655900422727,
                2939.1168457316567
            ],
            "name": "u12",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 58
        },
        {
            "datums": [
                {
                    "expr": "block.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "block.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_nest.z-slide_nest.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "11",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": ".5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf-4.5-r+q-f11r+qXqYqZf0.5',float('-11.500000'),float('-11.500000'),float('-5.000000'),float('11.500000'),float('11.500000'),float('-4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                2947.442107075903,
                3628.622322927183
            ],
            "name": "t1",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 59
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__51.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__59.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaaaaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5nm-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5niiam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5niim-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5ia-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5nm-Xf0-Yf0-Zf-4.5-r+q-f11r+qXqYqZf0.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3448.1446875185434,
                3512.666106823721
            ],
            "name": "d6",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 60
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__60.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__62.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaaaaaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5nm-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5niiam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5niim-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5ia-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5nm-Xf0-Yf0-Zf-4.5-r+q-f11r+qXqYqZf0.5nm-Xf0-Yf0-Zf-4.5-r+q-f7.33333r+qXqYqZf0.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                3948.8075738625657,
                3897.790637667774
            ],
            "name": "d7",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 61
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__59.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__59.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__59.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "t1.R/1.5",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__59.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf-4.5-r+q-f7.33333r+qXqYqZf0.5',float('-7.833333'),float('-7.833333'),float('-5.000000'),float('7.833333'),float('7.833333'),float('-4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3458.6084802835594,
                3959.7289213296917
            ],
            "name": "t2",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 62
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__61.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__64.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaaaaaaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5nm-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5niiam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5niim-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5ia-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5nm-Xf0-Yf0-Zf-4.5-r+q-f11r+qXqYqZf0.5nm-Xf0-Yf0-Zf-4.5-r+q-f7.33333r+qXqYqZf0.5nm-Xf0-Yf0-Zf-4.5-r+q-f3.66667r+qXqYqZf0.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4471.9779320572325,
                4273.912179771571
            ],
            "name": "d8",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 63
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__62.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__62.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__62.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "t2.R/2",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__62.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf-4.5-r+q-f3.66667r+qXqYqZf0.5',float('-4.166667'),float('-4.166667'),float('-5.000000'),float('4.166667'),float('4.166667'),float('-4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3975.7768459847207,
                4335.8504634334895
            ],
            "name": "t3",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 64
        },
        {
            "datums": [
                {
                    "expr": "slide_nest.x+slide_nest.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide_nest.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_nest.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide_nest.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "slide_nest.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f11.5X-Xf13.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5',float('11.500000'),float('-37.500000'),float('-4.500000'),float('13.500000'),float('37.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                4440.436367457465,
                4727.336808232984
            ],
            "name": "long_space",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 33
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__63.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__33.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaaaaaaaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5nm-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5niiam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5niim-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5ia-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5nm-Xf0-Yf0-Zf-4.5-r+q-f11r+qXqYqZf0.5nm-Xf0-Yf0-Zf-4.5-r+q-f7.33333r+qXqYqZf0.5nm-Xf0-Yf0-Zf-4.5-r+q-f3.66667r+qXqYqZf0.5nam__f1aa-f11.5X-Xf13.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4924.813735000549,
                4556.8732346553215
            ],
            "name": "d9",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 34
        },
        {
            "datums": [
                {
                    "expr": "slide_nest.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide_nest.y+slide_nest.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_nest.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide_nest.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "slide_nest.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.5X-Xf12.5a-f36.5Y-Yf38.5a-f-4.5Z-Zf-0.5',float('-12.500000'),float('36.500000'),float('-4.500000'),float('12.500000'),float('38.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                4895.690947622068,
                4897.553937497236
            ],
            "name": "short_space",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 35
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__34.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__35.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaaaaaaaaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5nm-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5niiam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5niim-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5ia-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5nm-Xf0-Yf0-Zf-4.5-r+q-f11r+qXqYqZf0.5nm-Xf0-Yf0-Zf-4.5-r+q-f7.33333r+qXqYqZf0.5nm-Xf0-Yf0-Zf-4.5-r+q-f3.66667r+qXqYqZf0.5nam__f1aa-f11.5X-Xf13.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f36.5Y-Yf38.5a-f-4.5Z-Zf-0.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5376.588779728233,
                4834.458726055012
            ],
            "name": "d10",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 36
        },
        {
            "datums": [
                {
                    "expr": "slide_nest.x-slide_nest.width/2+3",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.xmin+5",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide_nest.y-slide_nest.height/2 +3",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "vacuum_npt.zmax",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "t1.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5',float('-9.500000'),float('-35.000000'),float('-5.000000'),float('-4.500000'),float('-34.000000'),float('-4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                3329.463714766067,
                5317.89466031051
            ],
            "name": "indicator_groove",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 65
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__73.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('i-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5',float('-9.500000'),float('-35.000000'),float('-5.000000'),float('-4.000000'),float('-34.000000'),float('-4.000000'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                4599.839238990553,
                5746.9284530393215
            ],
            "name": "c4",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 66
        },
        {
            "datums": [
                {
                    "expr": "indicator_groove.xmin",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "indicator_groove.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__66.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf-9.5-Yf-34.5-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf9.5-Yf34.5-Zf0i-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5',float('-10.000000'),float('-34.500000'),float('-5.000000'),float('-9.000000'),float('-29.000000'),float('-4.000000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                4983.585210848887,
                5912.557413537446
            ],
            "name": "r2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 67
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__66.__0]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__67.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('ii-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5m-Xf-9.5-Yf-34.5-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf9.5-Yf34.5-Zf0i-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5',float('-10.000000'),float('-35.000000'),float('-5.000000'),float('-4.000000'),float('-29.000000'),float('-4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5359.166374795343,
                5746.9284530393215
            ],
            "name": "u4",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 68
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__36.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__71.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaaaaaaaaaaiiim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5aaam__f1aa-f-17.5X-Xf17.5a-f-42.5Y-Yf42.5a-f-16.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5n-iim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5f0.1niim-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2m_-*f2f0Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0a-r+q-Yf9q-Zf-7f1a-f-17.5X-Xf2ia-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5im-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5m_-*f2f0Y_m-Xf0-Yf18-Zf0a-r+q-Yf0q-Zf-10.5f3a-f-17.5X-Xf17.5nia-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5m-*f2f0X__m_-*f2f0Y_a-r+q-Xf8.75q-Zf-10.5f2.895a-f-42.5Y-Yf-29.5nm-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf0-Yf74.5-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5m-Xf24.5-Yf0-Zf0am__f1-r+q-Xf-12q-Yf-37f1a-f-4.5Z-Zf-0.5niiam__f1-r+q-Xf4.167q-Yf31.3333f4.167a-f-16.5Z-Zf-4.5m__-*f2f-4.5Zm+f4.167/*-Xf4.167f12+*f0-Zf-4.5*f1-f7.5Z+f31.3333/*-Yf31.3333f12+*f0-Zf-4.5*f1-f7.5Z_am__f1-r+q-Xf4.167q-Yf31.3333f4.667a-f-4.5Z-Zf7.5ia-r+q-Yf31.3333q-Zf-4.5f1a-f-12.5X-Xf12.5iam__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5m-*f2f0X__am__f1-r+q-Xf12.5q-Yf31.3333f1a-f-5.5Z-Zf-0.5niim-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5ia-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5m_-*f2f0Y_a-r+q-Yf40.5q-Zf-0.5f1a-f-16.5X-Xf16.5nm-Xf0-Yf0-Zf-4.5-r+q-f11r+qXqYqZf0.5nm-Xf0-Yf0-Zf-4.5-r+q-f7.33333r+qXqYqZf0.5nm-Xf0-Yf0-Zf-4.5-r+q-f3.66667r+qXqYqZf0.5nam__f1aa-f11.5X-Xf13.5a-f-37.5Y-Yf37.5a-f-4.5Z-Zf-0.5nam__f1aa-f-12.5X-Xf12.5a-f36.5Y-Yf38.5a-f-4.5Z-Zf-0.5ni-r++q-Xf-9.5q-Yf-34.5q-Zf-4.5f0.5ii-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5m-Xf-9.5-Yf-34.5-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf9.5-Yf34.5-Zf0i-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5',float('-17.500000'),float('-42.500000'),float('-16.500000'),float('17.500000'),float('42.500000'),float('-0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                6183.81197389517,
                5326.542185251043
            ],
            "name": "d11",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 69
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__67.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__67.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__65.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__65.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r++q-Xf-9.5q-Yf-34.5q-Zf-4.5f0.5',float('-10.000000'),float('-35.000000'),float('-5.000000'),float('-9.000000'),float('-34.000000'),float('-4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                5357.999973665073,
                5411.004927521995
            ],
            "name": "s2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Sphere (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.sphere(x, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z-r), (x,y,z+r)])",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y, z + r, drag=(None, None, r))",
                "sb.ui.point(x, y, z - r, drag=(None, None, r))",
                ""
            ],
            "uid": 70
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__70.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__68.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('i-r++q-Xf-9.5q-Yf-34.5q-Zf-4.5f0.5ii-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5m-Xf-9.5-Yf-34.5-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf9.5-Yf34.5-Zf0i-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5',float('-10.000000'),float('-35.000000'),float('-5.000000'),float('-4.000000'),float('-29.000000'),float('-4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                5726.5827308299195,
                5657.115566008646
            ],
            "name": "u13",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 71
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__65.__1]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__65.__2]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__65.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__65.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5',float('-5.000000'),float('-35.000000'),float('-5.000000'),float('-4.000000'),float('-34.000000'),float('-4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                3828.7391867885744,
                5093.340998483339
            ],
            "name": "s3",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Sphere (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.sphere(x, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z-r), (x,y,z+r)])",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y, z + r, drag=(None, None, r))",
                "sb.ui.point(x, y, z - r, drag=(None, None, r))",
                ""
            ],
            "uid": 72
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__72.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__65.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('i-r++q-Xf-4.5q-Yf-34.5q-Zf-4.5f0.5a-r+q-Yf-34.5q-Zf-4.5f0.5a-f-9.5X-Xf-4.5',float('-9.500000'),float('-35.000000'),float('-5.000000'),float('-4.000000'),float('-34.000000'),float('-4.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                4197.290267268679,
                5638.307525070037
            ],
            "name": "u14",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 73
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__42.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "sealant_groove.ymin+self.r",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__42.__3]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__42.__4]",
                    "name": "r",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1',float('-16.500000'),float('-41.500000'),float('-1.500000'),float('-14.500000'),float('-39.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                755.9916034200438,
                3228.119246253629
            ],
            "name": "s4",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Sphere (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.sphere(x, y, z, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z-r), (x,y,z+r)])",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y, z + r, drag=(None, None, r))",
                "sb.ui.point(x, y, z - r, drag=(None, None, r))",
                ""
            ],
            "uid": 74
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__74.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "block.width-2-s4.r*2",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "block.height-2-s4.r*2",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1',float('-16.500000'),float('-41.500000'),float('-1.500000'),float('16.500000'),float('41.500000'),float('0.500000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                1134.1994615005021,
                3179.1441622357356
            ],
            "name": "a1",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 75
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__75.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__44.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf0-Yf81-Zf0im-Xf0-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1m-Xf31-Yf0-Zf0-r++q-Xf-15.5q-Yf-40.5q-Zf-0.5f1ia-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5m-*f2f0X__a-r+q-Xf-15.5q-Zf-0.5f1a-f-41.5Y-Yf41.5',float('-16.500000'),float('-41.500000'),float('-1.500000'),float('16.500000'),float('41.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2004.5545475227964,
                3476.115133960074
            ],
            "name": "u15",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 76
        }
    ],
    "protocol": 6,
    "type": "sb"
}
