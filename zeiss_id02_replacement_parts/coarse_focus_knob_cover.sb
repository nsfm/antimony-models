{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "6.15",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.R-1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "41/2",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf20.5a-f0Z-Zf6.15nam__f1-r+qXqYf19.5a-f0Z-Zf6.15',float('-20.500000'),float('-20.500000'),float('0.000000'),float('20.500000'),float('20.500000'),float('6.150000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -135,
                -402
            ],
            "name": "r0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__2]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__0.__3]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__0.__0]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__0.__5]",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf20.5a-f0Z-Zf1',float('-20.500000'),float('-20.500000'),float('0.000000'),float('20.500000'),float('20.500000'),float('1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                262.40349980366756,
                -472.51541673205173
            ],
            "name": "c0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__1.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "c0.zmin+self.r",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__1.__4]",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0.5-r+q-f20.5r+qXqYqZf0.5',float('-21.000000'),float('-21.000000'),float('0.000000'),float('21.000000'),float('21.000000'),float('1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                701.0661663855378,
                -599.8526866148495
            ],
            "name": "t0",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "r0.R-self.r/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__2.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__2.__2]",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "r0.zmax-2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15',float('19.750000'),float('-0.500000'),float('0.500000'),float('20.750000'),float('0.500000'),float('4.150000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1096.4621022464592,
                -695.8542870280935
            ],
            "name": "c1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "r0.x",
                    "name": "x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r0.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "9",
                    "name": "n",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.766044X*f0.642788Y+*f-0.642788X*f0.766044Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.173648X*f0.984808Y+*f-0.984808X*f0.173648Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.939693X*f0.34202Y+*f-0.34202X*f-0.939693Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.939693X*f-0.34202Y+*f0.34202X*f-0.939693Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.173648X*f-0.984808Y+*f0.984808X*f0.173648Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.766044X*f-0.642788Y+*f0.642788X*f0.766044Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15',float('-19.669638'),float('-20.521591'),float('0.500000'),float('20.750000'),float('20.521591'),float('4.150000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1467.6136562689344,
                -801.8318119104332
            ],
            "name": "a0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Array (polar)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('x', float)",
                "input('y', float)",
                "input('n', int)",
                "",
                "output('array', fab.shapes.iterate_polar(shape, x, y, n))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * 0.3 + x,",
                "     math.sin(i/36. * 2*math.pi) * 0.3 + y, 0)",
                "    for i in range(36)], close=True, color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, 0, color=sb.color.teal)",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__6,__1.__5,__2.__5,__4.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiaam__f1-r+qXqYf20.5a-f0Z-Zf6.15nam__f1-r+qXqYf19.5a-f0Z-Zf6.15am__f1-r+qXqYf20.5a-f0Z-Zf1m-Xf0-Yf0-Zf0.5-r+q-f20.5r+qXqYqZf0.5iiiiiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.766044X*f0.642788Y+*f-0.642788X*f0.766044Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.173648X*f0.984808Y+*f-0.984808X*f0.173648Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.939693X*f0.34202Y+*f-0.34202X*f-0.939693Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.939693X*f-0.34202Y+*f0.34202X*f-0.939693Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.173648X*f-0.984808Y+*f0.984808X*f0.173648Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.766044X*f-0.642788Y+*f0.642788X*f0.766044Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15',float('-21.000000'),float('-21.000000'),float('0.000000'),float('21.000000'),float('21.000000'),float('6.150000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1877.5035074434118,
                -114.64127827115287
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "-5",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "6.45/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf3.225a-f-5Z-Zf5',float('-3.225000'),float('-3.225000'),float('-5.000000'),float('3.225000'),float('3.225000'),float('5.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1873.5339460070104,
                205.7638437811168
            ],
            "name": "screwhole",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__5.__1]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__6.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiaam__f1-r+qXqYf20.5a-f0Z-Zf6.15nam__f1-r+qXqYf19.5a-f0Z-Zf6.15am__f1-r+qXqYf20.5a-f0Z-Zf1m-Xf0-Yf0-Zf0.5-r+q-f20.5r+qXqYqZf0.5iiiiiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.766044X*f0.642788Y+*f-0.642788X*f0.766044Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.173648X*f0.984808Y+*f-0.984808X*f0.173648Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.939693X*f0.34202Y+*f-0.34202X*f-0.939693Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.939693X*f-0.34202Y+*f0.34202X*f-0.939693Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.173648X*f-0.984808Y+*f0.984808X*f0.173648Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.766044X*f-0.642788Y+*f0.642788X*f0.766044Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15nam__f1-r+qXqYf3.225a-f-5Z-Zf5',float('-21.000000'),float('-21.000000'),float('0.000000'),float('21.000000'),float('21.000000'),float('6.150000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                2356.8082369929234,
                128.602402363198
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__7.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiaam__f1-r+qXqYf20.5a-f0Z-Zf6.15nam__f1-r+qXqYf19.5a-f0Z-Zf6.15am__f1-r+qXqYf20.5a-f0Z-Zf1m-Xf0-Yf0-Zf0.5-r+q-f20.5r+qXqYqZf0.5iiiiiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.766044X*f0.642788Y+*f-0.642788X*f0.766044Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.173648X*f0.984808Y+*f-0.984808X*f0.173648Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.939693X*f0.34202Y+*f-0.34202X*f-0.939693Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.939693X*f-0.34202Y+*f0.34202X*f-0.939693Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.173648X*f-0.984808Y+*f0.984808X*f0.173648Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15m-Xf0-Yf0-Zf0m+*f0.766044X*f-0.642788Y+*f0.642788X*f0.766044Y_m-Xf-0-Yf-0-Zf0am__f1-r+q-Xf20.25qYf0.5a-f0.5Z-Zf4.15nam__f1-r+qXqYf3.225a-f-5Z-Zf5',float('-21.000000'),float('-21.000000'),float('0.000000'),float('21.000000'),float('21.000000'),float('6.150000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                2749.3839915753165,
                136.72465935455784
            ],
            "name": "m1",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 8
        }
    ],
    "protocol": 6,
    "type": "sb"
}
