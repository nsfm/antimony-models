{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "75.5",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "self.width/3",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "3",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-37.75X-Xf37.75a-f-12.5833Y-Yf12.5833a-f-1.5Z-Zf1.5',float('-37.750000'),float('-12.583333'),float('-1.500000'),float('37.750000'),float('12.583333'),float('1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                661.4368521202,
                696.9594800212816
            ],
            "name": "slide",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-2",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.z-slide.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "82/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf41a-f-3.5Z-Zf-1.5',float('-41.000000'),float('-41.000000'),float('-3.500000'),float('41.000000'),float('41.000000'),float('-1.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -173,
                -743
            ],
            "name": "stage",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "181",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "166",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "66",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf41a-f-3.5Z-Zf-1.5',float('-41.000000'),float('-41.000000'),float('-3.500000'),float('41.000000'),float('41.000000'),float('-1.500000'),color=(181,166,66))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                202.82615685446268,
                -700.6721782245074
            ],
            "name": "s0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "stage.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "stage.r+5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf46a-f-1.5Z-Zf0.5',float('-46.000000'),float('-46.000000'),float('-1.500000'),float('46.000000'),float('46.000000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -128.13321084682062,
                120.7458352396292
            ],
            "name": "base",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__3.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "stage.zmax+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "base.r*2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height+15",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "5",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-46X-Xf46a-f-20.0833Y-Yf20.0833a-f-1.5Z-Zf3.5',float('-46.000000'),float('-20.083334'),float('-1.500000'),float('46.000000'),float('20.083334'),float('3.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -145.5690120965043,
                549.2804056441429
            ],
            "name": "basemask",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__4.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf46a-f-1.5Z-Zf0.5am__f1aa-f-46X-Xf46a-f-20.0833Y-Yf20.0833a-f-1.5Z-Zf3.5',float('-46.000000'),float('-20.083334'),float('-1.500000'),float('46.000000'),float('20.083334'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                300.8426249994423,
                491.0528008055412
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__5.__2,__9.__2]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__0.__6,__11.__7]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiaam__f1-r+qXqYf46a-f-1.5Z-Zf0.5am__f1aa-f-46X-Xf46a-f-20.0833Y-Yf20.0833a-f-1.5Z-Zf3.5aam__f1aa-f-12.5833X-Xf12.5833a-f-37.75Y-Yf37.75a-f-1.5Z-Zf0.5m+f0/-Xf0f0.8+f0/-Yf0f0.8_am__f1-r+qXqYf46a-f-1.5Z-Zf0.5niam__f1aa-f-37.75X-Xf37.75a-f-12.5833Y-Yf12.5833a-f-1.5Z-Zf1.5m-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-37.25q-Yf-12.0833f1a-f-1.5Z-Zf3.5m-Xf74.5-Yf0-Zf0am__f1-r+q-Xf-37.25q-Yf-12.0833f1a-f-1.5Z-Zf3.5m-Xf0-Yf24.1667-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-37.25q-Yf-12.0833f1a-f-1.5Z-Zf3.5m-Xf74.5-Yf0-Zf0am__f1-r+q-Xf-37.25q-Yf-12.0833f1a-f-1.5Z-Zf3.5',float('-46.000000'),float('-36.799999'),float('-1.500000'),float('46.000000'),float('36.799999'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1356.5283228588228,
                573.0544235446665
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__4.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__4.__1]",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "stage.zmax+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.height",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.width",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "base.zmax-base.zmin",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-12.5833X-Xf12.5833a-f-37.75Y-Yf37.75a-f-1.5Z-Zf0.5',float('-12.583333'),float('-37.750000'),float('-1.500000'),float('12.583333'),float('37.750000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                299.5558806853285,
                -4.209440298740276
            ],
            "name": "wings",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.8",
                    "name": "sx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.8",
                    "name": "sy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__5.__0]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/-Xf0f0.8+f0/-Yf0f0.8_am__f1-r+qXqYf46a-f-1.5Z-Zf0.5',float('-36.799999'),float('-36.799999'),float('-1.500000'),float('36.799999'),float('36.799999'),float('0.500000'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                666.993104610357,
                15.90182236157143
            ],
            "name": "s1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "",
                "title('Scale (2D)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('sx', float)",
                "input('sy', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_xy(shape, x0, y0, sx, sy))",
                "",
                "# UI",
                "sb.ui.wireframe([(x0 + sx, y0, _z), (x0, y0, _z), (x0, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sx, y0 + sx/10, _z), (x0 + sx, y0 - sx/10, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sy/10, y0 + sy, _z), (x0 - sy/10, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.point(x0, y0, _z, color=sb.color.teal)",
                "sb.ui.point(x0 + sx, y0, _z, color=sb.color.teal, drag=(sx, None, None))",
                "sb.ui.point(x0, y0 + sy, _z, color=sb.color.teal, drag=(None, sy, None))",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__7.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f-12.5833X-Xf12.5833a-f-37.75Y-Yf37.75a-f-1.5Z-Zf0.5m+f0/-Xf0f0.8+f0/-Yf0f0.8_am__f1-r+qXqYf46a-f-1.5Z-Zf0.5',float('-12.583333'),float('-36.799999'),float('-1.500000'),float('12.583333'),float('36.799999'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1009.7657199597857,
                333.05483501735705
            ],
            "name": "i1",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "slide.x-slide.width/2+self.r/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y-slide.height/2+self.r/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "stage.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+5",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-37.25q-Yf-12.0833f1a-f-1.5Z-Zf3.5',float('-38.250000'),float('-13.083333'),float('-1.500000'),float('-36.250000'),float('-11.083333'),float('3.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                605.3884452127345,
                1120.5189767755714
            ],
            "name": "corner_relief",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "slide.width-corner_relief.r",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "slide.height-corner_relief.r",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-37.25q-Yf-12.0833f1a-f-1.5Z-Zf3.5m-Xf74.5-Yf0-Zf0am__f1-r+q-Xf-37.25q-Yf-12.0833f1a-f-1.5Z-Zf3.5m-Xf0-Yf24.1667-Zf0im-Xf0-Yf0-Zf0am__f1-r+q-Xf-37.25q-Yf-12.0833f1a-f-1.5Z-Zf3.5m-Xf74.5-Yf0-Zf0am__f1-r+q-Xf-37.25q-Yf-12.0833f1a-f-1.5Z-Zf3.5',float('-38.250000'),float('-13.083333'),float('-1.500000'),float('38.250000'),float('13.083367'),float('3.500000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                1017.0525879573943,
                1131.526039415803
            ],
            "name": "a0",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 11
        }
    ],
    "protocol": 6,
    "type": "sb"
}
