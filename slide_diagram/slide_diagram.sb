{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "25",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "75",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-12.375X-Xf12.375a-f-37.375Y-Yf37.375a-f-0.5Z-Zf0.5am__f1iaa-f-12.5X-Xf12.5a-f-37.375Y-Yf37.375aa-f-12.375X-Xf12.375a-f-37.5Y-Yf37.5a-f-0.375Z-Zf0.375-r++q-Xf12.375q-Yf37.375q-Zf0.375f0.125-r++q-Xf-12.375q-Yf37.375q-Zf0.375f0.125-r++q-Xf12.375q-Yf-37.375q-Zf0.375f0.125-r++q-Xf-12.375q-Yf-37.375q-Zf0.375f0.125-r++q-Xf12.375q-Yf37.375q-Zf-0.375f0.125-r++q-Xf-12.375q-Yf37.375q-Zf-0.375f0.125-r++q-Xf12.375q-Yf-37.375q-Zf-0.375f0.125-r++q-Xf-12.375q-Yf-37.375q-Zf-0.375f0.125am__f1-r+q-Xf12.375q-Yf37.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf37.375q-Zf0.375f0.125a-f-12.375X-Xf12.375a-r+q-Xf12.375q-Zf0.375f0.125a-f-37.375Y-Yf37.375am__f1-r+q-Xf-12.375q-Yf37.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-37.375q-Zf0.375f0.125a-f-12.375X-Xf12.375a-r+q-Xf-12.375q-Zf0.375f0.125a-f-37.375Y-Yf37.375am__f1-r+q-Xf12.375q-Yf-37.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf37.375q-Zf-0.375f0.125a-f-12.375X-Xf12.375a-r+q-Xf12.375q-Zf-0.375f0.125a-f-37.375Y-Yf37.375am__f1-r+q-Xf-12.375q-Yf-37.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-37.375q-Zf-0.375f0.125a-f-12.375X-Xf12.375a-r+q-Xf-12.375q-Zf-0.375f0.125a-f-37.375Y-Yf37.375',float('-12.500000'),float('-37.500000'),float('-0.500000'),float('12.500000'),float('37.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -694.0004814318821,
                -244.48277891092224
            ],
            "name": "slide",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "slide.z+slide.depth/2+g.spread",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+0.1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "4",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf4a-f3.5Z-Zf3.6nam__f1-r+qXqYf3a-f3.5Z-Zf3.6',float('-4.000000'),float('-4.000000'),float('3.500000'),float('4.000000'),float('4.000000'),float('3.600000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -655.1039149512114,
                226.17237136807165
            ],
            "name": "decorative_ring",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "24",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "24",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "24",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf4a-f3.5Z-Zf3.6nam__f1-r+qXqYf3a-f3.5Z-Zf3.6',float('-4.000000'),float('-4.000000'),float('3.500000'),float('4.000000'),float('4.000000'),float('3.600000'),color=(24,24,24))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -217.3797733310437,
                328.2758583798323
            ],
            "name": "s0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "102",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "153",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "204",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-12.375X-Xf12.375a-f-37.375Y-Yf37.375a-f-0.5Z-Zf0.5am__f1iaa-f-12.5X-Xf12.5a-f-37.375Y-Yf37.375aa-f-12.375X-Xf12.375a-f-37.5Y-Yf37.5a-f-0.375Z-Zf0.375-r++q-Xf12.375q-Yf37.375q-Zf0.375f0.125-r++q-Xf-12.375q-Yf37.375q-Zf0.375f0.125-r++q-Xf12.375q-Yf-37.375q-Zf0.375f0.125-r++q-Xf-12.375q-Yf-37.375q-Zf0.375f0.125-r++q-Xf12.375q-Yf37.375q-Zf-0.375f0.125-r++q-Xf-12.375q-Yf37.375q-Zf-0.375f0.125-r++q-Xf12.375q-Yf-37.375q-Zf-0.375f0.125-r++q-Xf-12.375q-Yf-37.375q-Zf-0.375f0.125am__f1-r+q-Xf12.375q-Yf37.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf37.375q-Zf0.375f0.125a-f-12.375X-Xf12.375a-r+q-Xf12.375q-Zf0.375f0.125a-f-37.375Y-Yf37.375am__f1-r+q-Xf-12.375q-Yf37.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-37.375q-Zf0.375f0.125a-f-12.375X-Xf12.375a-r+q-Xf-12.375q-Zf0.375f0.125a-f-37.375Y-Yf37.375am__f1-r+q-Xf12.375q-Yf-37.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf37.375q-Zf-0.375f0.125a-f-12.375X-Xf12.375a-r+q-Xf12.375q-Zf-0.375f0.125a-f-37.375Y-Yf37.375am__f1-r+q-Xf-12.375q-Yf-37.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-37.375q-Zf-0.375f0.125a-f-12.375X-Xf12.375a-r+q-Xf-12.375q-Zf-0.375f0.125a-f-37.375Y-Yf37.375',float('-12.500000'),float('-37.500000'),float('-0.500000'),float('12.500000'),float('37.500000'),float('0.500000'),color=(102,153,204))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -244.00048143188215,
                -200.48277891092224
            ],
            "name": "s1",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.z+slide.depth/2+g.spread*2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "coverslip.r-1",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf6.5-r+q-f8r+qXqYqZf0.25',float('-8.250000'),float('-8.250000'),float('6.250000'),float('8.250000'),float('8.250000'),float('6.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -640.9659857612952,
                726.1034335193293
            ],
            "name": "cell_ring",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__4.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "64",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "64",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "64",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf6.5-r+q-f8r+qXqYqZf0.25',float('-8.250000'),float('-8.250000'),float('6.250000'),float('8.250000'),float('8.250000'),float('6.750000'),color=(64,64,64))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -211.20734847054075,
                814.2759118722638
            ],
            "name": "s2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "mountant.zmax+g.spread*4",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+0.17",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "9",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf9a-f21.75Z-Zf21.92',float('-9.000000'),float('-9.000000'),float('21.750000'),float('9.000000'),float('9.000000'),float('21.920000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -662.8237841291809,
                1261.4999449613226
            ],
            "name": "coverslip",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "3",
                    "name": "spread",
                    "type": "float",
                    "uid": 8
                }
            ],
            "inspector": [
                -1359.5365842320496,
                -207.8801420423349
            ],
            "name": "g",
            "script": [
                "import fab",
                "",
                "title('Settings')",
                "",
                "input('spread', float)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "coverslip.x-coverslip.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "coverslip.x+coverslip.r",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "coverslip.y-coverslip.r",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "coverslip.y+coverslip.r",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "coverslip.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "coverslip.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "40",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "40",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "90",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "1.3 if g.spread>0 else 0",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 0.15707963267948966)*cos(Y / 0.15707963267948966) + sin(Y / 0.15707963267948966)*cos(Z /0.06981317007977318) + sin(Z / 0.06981317007977318)*cos(X / 0.15707963267948966)) - 1.3;am__f1aa-f-9X-Xf9a-f-9Y-Yf9a-f21.75Z-Zf21.92',float('-9.000000'),float('-9.000000'),float('21.750000'),float('9.000000'),float('9.000000'),float('21.920000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                -198.00377272877205,
                1706.4994475255558
            ],
            "name": "g0",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__6.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__10]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf9a-f21.75Z-Zf21.92na= abs( sin(X / 0.15707963267948966)*cos(Y / 0.15707963267948966) + sin(Y / 0.15707963267948966)*cos(Z /0.06981317007977318) + sin(Z / 0.06981317007977318)*cos(X / 0.15707963267948966)) - 1.3;am__f1aa-f-9X-Xf9a-f-9Y-Yf9a-f21.75Z-Zf21.92',float('-9.000000'),float('-9.000000'),float('21.750000'),float('9.000000'),float('9.000000'),float('21.920000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                274.6067002394303,
                1564.44048220289
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "cell_ring.z+g.spread",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+cell_ring.r",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "cell_ring.R",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf8a-f9.5Z-Zf9.75',float('-8.000000'),float('-8.000000'),float('9.500000'),float('8.000000'),float('8.000000'),float('9.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -678.8511634614745,
                2694.9056101861106
            ],
            "name": "mountant",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "mountant.x-mountant.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "mountant.x+mountant.r",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "mountant.y-mountant.r",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "mountant.y+mountant.r",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "mountant.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "mountant.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "30",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "15",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "90",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "1.4",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.41887902047863906) + sin(Y / 0.41887902047863906)*cos(Z /0.06981317007977318) + sin(Z / 0.06981317007977318)*cos(X / 0.20943951023931953)) - 1.4;am__f1aa-f-8X-Xf8a-f-8Y-Yf8a-f9.5Z-Zf9.75',float('-8.000000'),float('-8.000000'),float('9.500000'),float('8.000000'),float('8.000000'),float('9.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                -231.59031751579238,
                3117.9016272088143
            ],
            "name": "g1",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__11.__10]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf8a-f9.5Z-Zf9.75na= abs( sin(X / 0.20943951023931953)*cos(Y / 0.41887902047863906) + sin(Y / 0.41887902047863906)*cos(Z /0.06981317007977318) + sin(Z / 0.06981317007977318)*cos(X / 0.20943951023931953)) - 1.4;am__f1aa-f-8X-Xf8a-f-8Y-Yf8a-f9.5Z-Zf9.75',float('-8.000000'),float('-8.000000'),float('9.500000'),float('8.000000'),float('8.000000'),float('9.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                226.960964691296,
                2998.962876389201
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__9.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "102",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "153",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "204",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf9a-f21.75Z-Zf21.92na= abs( sin(X / 0.15707963267948966)*cos(Y / 0.15707963267948966) + sin(Y / 0.15707963267948966)*cos(Z /0.06981317007977318) + sin(Z / 0.06981317007977318)*cos(X / 0.15707963267948966)) - 1.3;am__f1aa-f-9X-Xf9a-f-9Y-Yf9a-f21.75Z-Zf21.92',float('-9.000000'),float('-9.000000'),float('21.750000'),float('9.000000'),float('9.000000'),float('21.920000'),color=(102,153,204))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                632.8069862263472,
                1518.0961926553834
            ],
            "name": "s3",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__12.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "255",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "165",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf8a-f9.5Z-Zf9.75na= abs( sin(X / 0.20943951023931953)*cos(Y / 0.41887902047863906) + sin(Y / 0.41887902047863906)*cos(Z /0.06981317007977318) + sin(Z / 0.06981317007977318)*cos(X / 0.20943951023931953)) - 1.4;am__f1aa-f-8X-Xf8a-f-8Y-Yf8a-f9.5Z-Zf9.75',float('-8.000000'),float('-8.000000'),float('9.500000'),float('8.000000'),float('8.000000'),float('9.750000'),color=(255,165,0))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                581.4609142159484,
                2918.7876411989087
            ],
            "name": "s4",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "coverslip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "coverslip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-0.1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "coverslip.zmin-g.spread*2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "coverslip.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf9a-f15.65Z-Zf15.75',float('-9.000000'),float('-9.000000'),float('15.650000'),float('9.000000'),float('9.000000'),float('15.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2073.1630445637193,
                1825.2280426505256
            ],
            "name": "fixative",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__17.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "255",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "191",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf9a-f15.65Z-Zf15.75na= abs( sin(X / 0.41887902047863906)*cos(Y / 0.20943951023931953) + sin(Y / 0.20943951023931953)*cos(Z /0.05235987755982988) + sin(Z / 0.05235987755982988)*cos(X / 0.41887902047863906)) - 1.43;am__f1aa-f-9X-Xf9a-f-9Y-Yf9a-f15.65Z-Zf15.75',float('-9.000000'),float('-9.000000'),float('15.650000'),float('9.000000'),float('9.000000'),float('15.750000'),color=(255,191,0))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -814.4025473973504,
                2003.3384485872407
            ],
            "name": "s5",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__15.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__18.__10]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf9a-f15.65Z-Zf15.75na= abs( sin(X / 0.41887902047863906)*cos(Y / 0.20943951023931953) + sin(Y / 0.20943951023931953)*cos(Z /0.05235987755982988) + sin(Z / 0.05235987755982988)*cos(X / 0.41887902047863906)) - 1.43;am__f1aa-f-9X-Xf9a-f-9Y-Yf9a-f15.65Z-Zf15.75',float('-9.000000'),float('-9.000000'),float('15.650000'),float('9.000000'),float('9.000000'),float('15.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1168.9024969220027,
                2083.513683777533
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 17
        },
        {
            "datums": [
                {
                    "expr": "fixative.x-fixative.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "fixative.x+fixative.r",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "fixative.y-fixative.r",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "fixative.y+fixative.r",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "fixative.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "fixative.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "15",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "30",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "120",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "1.43",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 0.41887902047863906)*cos(Y / 0.20943951023931953) + sin(Y / 0.20943951023931953)*cos(Z /0.05235987755982988) + sin(Z / 0.05235987755982988)*cos(X / 0.41887902047863906)) - 1.43;am__f1aa-f-9X-Xf9a-f-9Y-Yf9a-f15.65Z-Zf15.75',float('-9.000000'),float('-9.000000'),float('15.650000'),float('9.000000'),float('9.000000'),float('15.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                -1627.4537791290913,
                2202.4524345971454
            ],
            "name": "g2",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 18
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__20.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "80",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "80",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "80",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf3.25a-f18.65Z-Zf18.75nam__f1-r+qXqYf2.75a-f18.65Z-Zf18.75',float('-3.250000'),float('-3.250000'),float('18.650000'),float('3.250000'),float('3.250000'),float('18.750000'),color=(80,80,80))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1285.5237903270981,
                699.0637779616821
            ],
            "name": "s6",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 19
        },
        {
            "datums": [
                {
                    "expr": "self.zmax-0.1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "coverslip.zmin-g.spread",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "diatoms.r+.5",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+.5",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf3.25a-f18.65Z-Zf18.75nam__f1-r+qXqYf2.75a-f18.65Z-Zf18.75',float('-3.250000'),float('-3.250000'),float('18.650000'),float('3.250000'),float('3.250000'),float('18.750000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -1710.5665599460513,
                646.8403541546986
            ],
            "name": "centering_ring",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 20
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__23.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "255",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "255",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "255",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf2.25a-f12.55Z-Zf12.65na= abs( sin(X / 0.3141592653589793)*cos(Y / 0.20943951023931953) + sin(Y / 0.20943951023931953)*cos(Z /0.20943951023931953) + sin(Z / 0.20943951023931953)*cos(X / 0.3141592653589793)) - 1.0;am__f1aa-f-2.25X-Xf2.25a-f-2.25Y-Yf2.25a-f12.55Z-Zf12.65',float('-2.250000'),float('-2.250000'),float('12.550000'),float('2.250000'),float('2.250000'),float('12.650000'),color=(255,255,255))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -1067.7344132959856,
                3015.9827915485716
            ],
            "name": "s7",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 21
        },
        {
            "datums": [
                {
                    "expr": "coverslip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "coverslip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-0.1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "fixative.zmin-g.spread",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "coverslip.r*.25",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf2.25a-f12.55Z-Zf12.65',float('-2.250000'),float('-2.250000'),float('12.550000'),float('2.250000'),float('2.250000'),float('12.650000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -2317.2579619272105,
                2798.8719362412485
            ],
            "name": "diatoms",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 22
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__22.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__24.__10]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf2.25a-f12.55Z-Zf12.65na= abs( sin(X / 0.3141592653589793)*cos(Y / 0.20943951023931953) + sin(Y / 0.20943951023931953)*cos(Z /0.20943951023931953) + sin(Z / 0.20943951023931953)*cos(X / 0.3141592653589793)) - 1.0;am__f1aa-f-2.25X-Xf2.25a-f-2.25Y-Yf2.25a-f12.55Z-Zf12.65',float('-2.250000'),float('-2.250000'),float('12.550000'),float('2.250000'),float('2.250000'),float('12.650000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -1422.2343628206381,
                3096.158026738864
            ],
            "name": "d3",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 23
        },
        {
            "datums": [
                {
                    "expr": "diatoms.x-diatoms.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "diatoms.x+diatoms.r",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "diatoms.y-diatoms.r",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "diatoms.y+diatoms.r",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "diatoms.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "diatoms.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "20",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "30",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "30",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "1",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 0.3141592653589793)*cos(Y / 0.20943951023931953) + sin(Y / 0.20943951023931953)*cos(Z /0.20943951023931953) + sin(Z / 0.20943951023931953)*cos(X / 0.3141592653589793)) - 1.0;am__f1aa-f-2.25X-Xf2.25a-f-2.25Y-Yf2.25a-f12.55Z-Zf12.65',float('-2.250000'),float('-2.250000'),float('12.550000'),float('2.250000'),float('2.250000'),float('12.650000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                -1880.7856450277268,
                3215.0967775584763
            ],
            "name": "g3",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 24
        },
        {
            "datums": [
                {
                    "expr": "coverslip.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "coverslip.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "coverslip.zmax+g.spread",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "coverslip.r",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": ".25",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf24.92-r+q-f9r+qXqYqZf0.25',float('-9.250000'),float('-9.250000'),float('24.670000'),float('9.250000'),float('9.250000'),float('25.170000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -931.1098764566806,
                3871.0030974911997
            ],
            "name": "sealing_ring",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 25
        },
        {
            "datums": [
                {
                    "expr": "sealing_ring.z",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "self.zmin+.1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "sealing_ring.x",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "sealing_ring.y",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "sealing_ring.R",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+1.25",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf10.25a-f24.92Z-Zf25.02nam__f1-r+qXqYf9a-f24.92Z-Zf25.02',float('-10.250000'),float('-10.250000'),float('24.920000'),float('10.250000'),float('10.250000'),float('25.020000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -958.2738817806721,
                4273.652130627349
            ],
            "name": "sealing_ring_skirt",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 26
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__25.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__26.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf0-Zf24.92-r+q-f9r+qXqYqZf0.25aam__f1-r+qXqYf10.25a-f24.92Z-Zf25.02nam__f1-r+qXqYf9a-f24.92Z-Zf25.02',float('-10.250000'),float('-10.250000'),float('24.670000'),float('10.250000'),float('10.250000'),float('25.170000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -513.7943663586797,
                4229.856854388186
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 27
        },
        {
            "datums": [
                {
                    "expr": "slide.x+slide.width",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "slide.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "slide.z+self.depth/4",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "slide.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "80 ",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f24.5X-Xf25.5a-f-37.5Y-Yf37.5a-f-20Z-Zf60',float('24.500000'),float('-37.500000'),float('-20.000000'),float('25.500000'),float('37.500000'),float('60.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1519.3630633473076,
                820.2139246356979
            ],
            "name": "backdrop",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 28
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__28.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "64",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "64",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "64",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f24.5X-Xf25.5a-f-37.5Y-Yf37.5a-f-20Z-Zf60',float('24.500000'),float('-37.500000'),float('-20.000000'),float('25.500000'),float('37.500000'),float('60.000000'),color=(64,64,64))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1965.8567577917142,
                888.674972700364
            ],
            "name": "s8",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 29
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__27.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "25",
                    "name": "r",
                    "type": "int",
                    "uid": 1
                },
                {
                    "expr": "25",
                    "name": "g",
                    "type": "int",
                    "uid": 2
                },
                {
                    "expr": "25",
                    "name": "b",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf0-Zf24.92-r+q-f9r+qXqYqZf0.25aam__f1-r+qXqYf10.25a-f24.92Z-Zf25.02nam__f1-r+qXqYf9a-f24.92Z-Zf25.02',float('-10.250000'),float('-10.250000'),float('24.670000'),float('10.250000'),float('10.250000'),float('25.170000'),color=(25,25,25))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -155.77806329759608,
                4165.706916540194
            ],
            "name": "s9",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Set color (RGB)')",
                "",
                "input(\"shape\", fab.types.Shape)",
                "input(\"r\", int)",
                "input(\"g\", int)",
                "input(\"b\", int)",
                "",
                "output(\"out\", fab.shapes.set_color(shape, r, g, b))",
                ""
            ],
            "uid": 30
        }
    ],
    "protocol": 6,
    "type": "sb"
}
