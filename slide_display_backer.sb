{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "logo.x0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "logo.y0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-45",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__2.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1',float('-5.656856'),float('-5.656856'),float('-inf'),float('5.656856'),float('5.656856'),float('inf'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                279.30828012773327,
                -1683.394107799456
            ],
            "name": "r2",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__7.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__4.__2]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1',float('-4.000000'),float('-4.000000'),float('-inf'),float('4.000000'),float('4.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -98.12539040045567,
                -1355.7088678193131
            ],
            "name": "i0",
            "script": [
                "import fab.types",
                "",
                "title('Intersection')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & b)",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__2.__0]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+qXqYf4.5n-r+qXqYf4',float('-4.500000'),float('-4.500000'),float('-inf'),float('4.500000'),float('4.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                297.37244102710247,
                -1168.5655221674133
            ],
            "name": "d2",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__11.__10]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1',float('-4.000000'),float('-4.000000'),float('-inf'),float('4.000000'),float('4.000000'),float('inf'))",
                    "name": "slice",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                -482.48759133374585,
                -1140.3079428746942
            ],
            "name": "s3",
            "script": [
                "# Neil Gershenfeld 7/12/15",
                "",
                "import fab",
                "from fab.types import Shape",
                "",
                "title('Slice (XY)')",
                "",
                "def slice_xy(shape,z):",
                "    return Shape(('mXYf%g' % z) + shape.math,",
                "       shape.bounds.xmin,shape.bounds.ymin,",
                "       shape.bounds.xmax,shape.bounds.ymax)",
                "",
                "input('shape',fab.types.Shape)",
                "input('z',float)",
                "",
                "output('slice',slice_xy(shape,z))",
                "",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "4",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf4',float('-4.000000'),float('-4.000000'),float('-inf'),float('4.000000'),float('4.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -501.26281374565076,
                -1643.139625857434
            ],
            "name": "logo",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "plate.z+plate.depth/2-0.3",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "plate.z+plate.depth/2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__12.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1m+f0/-Xf0f8+f0/-Yf0f8_im-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1a-r+qXqYf4.5n-r+qXqYf4a-f0.2Z-Zf0.5',float('-45.254848'),float('-45.254848'),float('0.200000'),float('45.254848'),float('45.254848'),float('0.500000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1296.7644788855555,
                -1464.5769714149292
            ],
            "name": "e0",
            "script": [
                "import fab",
                "",
                "title('Extrude')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.extrude_z(shape, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, zmin), (_x, _y, zmax)], color=sb.color.green)",
                "sb.ui.point(_x, _y, zmin, color=sb.color.green)",
                "sb.ui.point(_x, _y, zmax, color=sb.color.green)",
                "",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__7.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__7.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "logo.r+0.5",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+qXqYf4.5',float('-4.500000'),float('-4.500000'),float('-inf'),float('4.500000'),float('4.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -85.84582948095658,
                -1053.7290707357051
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "logo.x0-logo.r",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "logo.x0+logo.r",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "logo.y0-logo.r",
                    "name": "ymin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "logo.y0+logo.r",
                    "name": "ymax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "-0.1",
                    "name": "zmin",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0.1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "30",
                    "name": "x_period",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "20",
                    "name": "y_period",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "2",
                    "name": "z_period",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "0.8",
                    "name": "thickness",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0012fab.types.Shape('a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1',float('-4.000000'),float('-4.000000'),float('-0.100000'),float('4.000000'),float('4.000000'),float('0.100000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 10
                }
            ],
            "inspector": [
                -870.0324434516592,
                -1632.578097038935
            ],
            "name": "g0",
            "script": [
                "import fab",
                "import math",
                "",
                "#https://en.wikipedia.org/wiki/Gyroid",
                "title('Gyroid')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('ymin', float)",
                "input('ymax', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('x_period', float)",
                "input('y_period', float)",
                "input('z_period', float)",
                "input('thickness', float)",
                "",
                "x_factor = 2 * math.pi / x_period",
                "y_factor = 2 * math.pi / y_period",
                "z_factor = 2 * math.pi / z_period",
                "",
                "fn = \"= abs( sin(X / %(x_factor)s)*cos(Y / %(y_factor)s) + sin(Y / %(y_factor)s)*cos(Z /%(z_factor)s) + sin(Z / %(z_factor)s)*cos(X / %(x_factor)s)) - %(thickness)s;\" % locals()",
                "",
                "output('shape', fab.shapes.function_prefix_xyz(fn, xmin, xmax,",
                "                                                   ymin, ymax,",
                "                                                   zmin, zmax))",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "logo.x0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "logo.y0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "8",
                    "name": "sx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "8",
                    "name": "sy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0011[__1.__5,__3.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f0/-Xf0f8+f0/-Yf0f8_im-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1a-r+qXqYf4.5n-r+qXqYf4',float('-45.254848'),float('-45.254848'),float('-inf'),float('45.254848'),float('45.254848'),float('inf'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                864.1464747143602,
                -1467.2235747968325
            ],
            "name": "s4",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "",
                "title('Scale (2D)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('sx', float)",
                "input('sy', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_xy(shape, x0, y0, sx, sy))",
                "",
                "# UI",
                "sb.ui.wireframe([(x0 + sx, y0, _z), (x0, y0, _z), (x0, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sx, y0 + sx/10, _z), (x0 + sx, y0 - sx/10, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.wireframe([(x0 + sy/10, y0 + sy, _z), (x0 - sy/10, y0 + sy, _z)],",
                "                 color=sb.color.teal)",
                "sb.ui.point(x0, y0, _z, color=sb.color.teal)",
                "sb.ui.point(x0 + sx, y0, _z, color=sb.color.teal, drag=(sx, None, None))",
                "sb.ui.point(x0, y0 + sy, _z, color=sb.color.teal, drag=(None, sy, None))",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "140",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "140",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-70X-Xf70a-f-70Y-Yf70a-f-0.5Z-Zf0.5am__f1iaa-f-70X-Xf70a-f-70Y-Yf70aa-f-70X-Xf70a-f-70Y-Yf70a-f-0.5Z-Zf0.5-r++q-Xf70q-Yf70q-Zf0.5f0-r++q-Xf-70q-Yf70q-Zf0.5f0-r++q-Xf70q-Yf-70q-Zf0.5f0-r++q-Xf-70q-Yf-70q-Zf0.5f0-r++q-Xf70q-Yf70q-Zf-0.5f0-r++q-Xf-70q-Yf70q-Zf-0.5f0-r++q-Xf70q-Yf-70q-Zf-0.5f0-r++q-Xf-70q-Yf-70q-Zf-0.5f0am__f1-r+q-Xf70q-Yf70f0a-f-0.5Z-Zf0.5a-r+q-Yf70q-Zf0.5f0a-f-70X-Xf70a-r+q-Xf70q-Zf0.5f0a-f-70Y-Yf70am__f1-r+q-Xf-70q-Yf70f0a-f-0.5Z-Zf0.5a-r+q-Yf-70q-Zf0.5f0a-f-70X-Xf70a-r+q-Xf-70q-Zf0.5f0a-f-70Y-Yf70am__f1-r+q-Xf70q-Yf-70f0a-f-0.5Z-Zf0.5a-r+q-Yf70q-Zf-0.5f0a-f-70X-Xf70a-r+q-Xf70q-Zf-0.5f0a-f-70Y-Yf70am__f1-r+q-Xf-70q-Yf-70f0a-f-0.5Z-Zf0.5a-r+q-Yf-70q-Zf-0.5f0a-f-70X-Xf70a-r+q-Xf-70q-Zf-0.5f0a-f-70Y-Yf70',float('-70.000000'),float('-70.000000'),float('-0.500000'),float('70.000000'),float('70.000000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                1190.3457628566366,
                -2274.0026355487776
            ],
            "name": "plate",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__13.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__9.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-70X-Xf70a-f-70Y-Yf70a-f-0.5Z-Zf0.5am__f1iaa-f-70X-Xf70a-f-70Y-Yf70aa-f-70X-Xf70a-f-70Y-Yf70a-f-0.5Z-Zf0.5-r++q-Xf70q-Yf70q-Zf0.5f0-r++q-Xf-70q-Yf70q-Zf0.5f0-r++q-Xf70q-Yf-70q-Zf0.5f0-r++q-Xf-70q-Yf-70q-Zf0.5f0-r++q-Xf70q-Yf70q-Zf-0.5f0-r++q-Xf-70q-Yf70q-Zf-0.5f0-r++q-Xf70q-Yf-70q-Zf-0.5f0-r++q-Xf-70q-Yf-70q-Zf-0.5f0am__f1-r+q-Xf70q-Yf70f0a-f-0.5Z-Zf0.5a-r+q-Yf70q-Zf0.5f0a-f-70X-Xf70a-r+q-Xf70q-Zf0.5f0a-f-70Y-Yf70am__f1-r+q-Xf-70q-Yf70f0a-f-0.5Z-Zf0.5a-r+q-Yf-70q-Zf0.5f0a-f-70X-Xf70a-r+q-Xf-70q-Zf0.5f0a-f-70Y-Yf70am__f1-r+q-Xf70q-Yf-70f0a-f-0.5Z-Zf0.5a-r+q-Yf70q-Zf-0.5f0a-f-70X-Xf70a-r+q-Xf70q-Zf-0.5f0a-f-70Y-Yf70am__f1-r+q-Xf-70q-Yf-70f0a-f-0.5Z-Zf0.5a-r+q-Yf-70q-Zf-0.5f0a-f-70X-Xf70a-r+q-Xf-70q-Zf-0.5f0a-f-70Y-Yf70nam__f1m+f0/-Xf0f8+f0/-Yf0f8_im-Xf0-Yf0-Zf0m+*f0.707107X*f-0.707107Y+*f0.707107X*f0.707107Y_m-Xf-0-Yf-0-Zf0a-r+qXqYf4mXYf0a= abs( sin(X / 0.20943951023931953)*cos(Y / 0.3141592653589793) + sin(Y / 0.3141592653589793)*cos(Z /3.141592653589793) + sin(Z / 3.141592653589793)*cos(X / 0.20943951023931953)) - 0.8;am__f1aa-f-4X-Xf4a-f-4Y-Yf4a-f-0.1Z-Zf0.1a-r+qXqYf4.5n-r+qXqYf4a-f0.2Z-Zf0.5',float('-70.000000'),float('-70.000000'),float('-0.500000'),float('70.000000'),float('70.000000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1803.5084699198392,
                -1751.65039889978
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "-120",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "25*3",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "25",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "1",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-37.375X-Xf37.375a-f-132.375Y-Yf-107.625a-f-0.5Z-Zf0.5am__f1iaa-f-37.5X-Xf37.5a-f-132.375Y-Yf-107.625aa-f-37.375X-Xf37.375a-f-132.5Y-Yf-107.5a-f-0.375Z-Zf0.375-r++q-Xf37.375q-Yf-107.625q-Zf0.375f0.125-r++q-Xf-37.375q-Yf-107.625q-Zf0.375f0.125-r++q-Xf37.375q-Yf-132.375q-Zf0.375f0.125-r++q-Xf-37.375q-Yf-132.375q-Zf0.375f0.125-r++q-Xf37.375q-Yf-107.625q-Zf-0.375f0.125-r++q-Xf-37.375q-Yf-107.625q-Zf-0.375f0.125-r++q-Xf37.375q-Yf-132.375q-Zf-0.375f0.125-r++q-Xf-37.375q-Yf-132.375q-Zf-0.375f0.125am__f1-r+q-Xf37.375q-Yf-107.625f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-107.625q-Zf0.375f0.125a-f-37.375X-Xf37.375a-r+q-Xf37.375q-Zf0.375f0.125a-f-132.375Y-Yf-107.625am__f1-r+q-Xf-37.375q-Yf-107.625f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-132.375q-Zf0.375f0.125a-f-37.375X-Xf37.375a-r+q-Xf-37.375q-Zf0.375f0.125a-f-132.375Y-Yf-107.625am__f1-r+q-Xf37.375q-Yf-132.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-107.625q-Zf-0.375f0.125a-f-37.375X-Xf37.375a-r+q-Xf37.375q-Zf-0.375f0.125a-f-132.375Y-Yf-107.625am__f1-r+q-Xf-37.375q-Yf-132.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-132.375q-Zf-0.375f0.125a-f-37.375X-Xf37.375a-r+q-Xf-37.375q-Zf-0.375f0.125a-f-132.375Y-Yf-107.625',float('-37.500000'),float('-132.500000'),float('-0.500000'),float('37.500000'),float('-107.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                977.5431707735105,
                -672.9134384859514
            ],
            "name": "frame",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "frame.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "frame.y+1.5",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "frame.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "frame.width-4",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "frame.height-3",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "frame.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-35.5X-Xf35.5a-f-129.5Y-Yf-107.5a-f-0.5Z-Zf0.5',float('-35.500000'),float('-129.500000'),float('-0.500000'),float('35.500000'),float('-107.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1075.3586194106406,
                -218.93346200147434
            ],
            "name": "c1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__5.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-37.375X-Xf37.375a-f-132.375Y-Yf-107.625a-f-0.5Z-Zf0.5am__f1iaa-f-37.5X-Xf37.5a-f-132.375Y-Yf-107.625aa-f-37.375X-Xf37.375a-f-132.5Y-Yf-107.5a-f-0.375Z-Zf0.375-r++q-Xf37.375q-Yf-107.625q-Zf0.375f0.125-r++q-Xf-37.375q-Yf-107.625q-Zf0.375f0.125-r++q-Xf37.375q-Yf-132.375q-Zf0.375f0.125-r++q-Xf-37.375q-Yf-132.375q-Zf0.375f0.125-r++q-Xf37.375q-Yf-107.625q-Zf-0.375f0.125-r++q-Xf-37.375q-Yf-107.625q-Zf-0.375f0.125-r++q-Xf37.375q-Yf-132.375q-Zf-0.375f0.125-r++q-Xf-37.375q-Yf-132.375q-Zf-0.375f0.125am__f1-r+q-Xf37.375q-Yf-107.625f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-107.625q-Zf0.375f0.125a-f-37.375X-Xf37.375a-r+q-Xf37.375q-Zf0.375f0.125a-f-132.375Y-Yf-107.625am__f1-r+q-Xf-37.375q-Yf-107.625f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-132.375q-Zf0.375f0.125a-f-37.375X-Xf37.375a-r+q-Xf-37.375q-Zf0.375f0.125a-f-132.375Y-Yf-107.625am__f1-r+q-Xf37.375q-Yf-132.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-107.625q-Zf-0.375f0.125a-f-37.375X-Xf37.375a-r+q-Xf37.375q-Zf-0.375f0.125a-f-132.375Y-Yf-107.625am__f1-r+q-Xf-37.375q-Yf-132.375f0.125a-f-0.375Z-Zf0.375a-r+q-Yf-132.375q-Zf-0.375f0.125a-f-37.375X-Xf37.375a-r+q-Xf-37.375q-Zf-0.375f0.125a-f-132.375Y-Yf-107.625nam__f1aa-f-35.5X-Xf35.5a-f-129.5Y-Yf-107.5a-f-0.5Z-Zf0.5',float('-37.500000'),float('-132.500000'),float('-0.500000'),float('37.500000'),float('-107.500000'),float('0.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1835.192622746403,
                -195.34263211306262
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "frame.x-frame.width/2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "frame.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "frame.z+self.depth/2-frame.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "frame.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "3",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0.2",
                    "name": "r",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-38.3X-Xf-36.7a-f-132.3Y-Yf-107.7a-f-0.5Z-Zf2.5am__f1iaa-f-38.5X-Xf-36.5a-f-132.3Y-Yf-107.7aa-f-38.3X-Xf-36.7a-f-132.5Y-Yf-107.5a-f-0.3Z-Zf2.3-r++q-Xf-36.7q-Yf-107.7q-Zf2.3f0.2-r++q-Xf-38.3q-Yf-107.7q-Zf2.3f0.2-r++q-Xf-36.7q-Yf-132.3q-Zf2.3f0.2-r++q-Xf-38.3q-Yf-132.3q-Zf2.3f0.2-r++q-Xf-36.7q-Yf-107.7q-Zf-0.3f0.2-r++q-Xf-38.3q-Yf-107.7q-Zf-0.3f0.2-r++q-Xf-36.7q-Yf-132.3q-Zf-0.3f0.2-r++q-Xf-38.3q-Yf-132.3q-Zf-0.3f0.2am__f1-r+q-Xf-36.7q-Yf-107.7f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-107.7q-Zf2.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-36.7q-Zf2.3f0.2a-f-132.3Y-Yf-107.7am__f1-r+q-Xf-38.3q-Yf-107.7f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-132.3q-Zf2.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-38.3q-Zf2.3f0.2a-f-132.3Y-Yf-107.7am__f1-r+q-Xf-36.7q-Yf-132.3f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-107.7q-Zf-0.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-36.7q-Zf-0.3f0.2a-f-132.3Y-Yf-107.7am__f1-r+q-Xf-38.3q-Yf-132.3f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-132.3q-Zf-0.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-38.3q-Zf-0.3f0.2a-f-132.3Y-Yf-107.7',float('-38.500000'),float('-132.500000'),float('-0.500000'),float('-36.500000'),float('-107.500000'),float('2.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1128.302316911565,
                281.44760811026765
            ],
            "name": "sidewall",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "frame.x",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__8.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('im-*f2f0X__iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-38.3X-Xf-36.7a-f-132.3Y-Yf-107.7a-f-0.5Z-Zf2.5am__f1iaa-f-38.5X-Xf-36.5a-f-132.3Y-Yf-107.7aa-f-38.3X-Xf-36.7a-f-132.5Y-Yf-107.5a-f-0.3Z-Zf2.3-r++q-Xf-36.7q-Yf-107.7q-Zf2.3f0.2-r++q-Xf-38.3q-Yf-107.7q-Zf2.3f0.2-r++q-Xf-36.7q-Yf-132.3q-Zf2.3f0.2-r++q-Xf-38.3q-Yf-132.3q-Zf2.3f0.2-r++q-Xf-36.7q-Yf-107.7q-Zf-0.3f0.2-r++q-Xf-38.3q-Yf-107.7q-Zf-0.3f0.2-r++q-Xf-36.7q-Yf-132.3q-Zf-0.3f0.2-r++q-Xf-38.3q-Yf-132.3q-Zf-0.3f0.2am__f1-r+q-Xf-36.7q-Yf-107.7f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-107.7q-Zf2.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-36.7q-Zf2.3f0.2a-f-132.3Y-Yf-107.7am__f1-r+q-Xf-38.3q-Yf-107.7f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-132.3q-Zf2.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-38.3q-Zf2.3f0.2a-f-132.3Y-Yf-107.7am__f1-r+q-Xf-36.7q-Yf-132.3f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-107.7q-Zf-0.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-36.7q-Zf-0.3f0.2a-f-132.3Y-Yf-107.7am__f1-r+q-Xf-38.3q-Yf-132.3f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-132.3q-Zf-0.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-38.3q-Zf-0.3f0.2a-f-132.3Y-Yf-107.7iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-38.3X-Xf-36.7a-f-132.3Y-Yf-107.7a-f-0.5Z-Zf2.5am__f1iaa-f-38.5X-Xf-36.5a-f-132.3Y-Yf-107.7aa-f-38.3X-Xf-36.7a-f-132.5Y-Yf-107.5a-f-0.3Z-Zf2.3-r++q-Xf-36.7q-Yf-107.7q-Zf2.3f0.2-r++q-Xf-38.3q-Yf-107.7q-Zf2.3f0.2-r++q-Xf-36.7q-Yf-132.3q-Zf2.3f0.2-r++q-Xf-38.3q-Yf-132.3q-Zf2.3f0.2-r++q-Xf-36.7q-Yf-107.7q-Zf-0.3f0.2-r++q-Xf-38.3q-Yf-107.7q-Zf-0.3f0.2-r++q-Xf-36.7q-Yf-132.3q-Zf-0.3f0.2-r++q-Xf-38.3q-Yf-132.3q-Zf-0.3f0.2am__f1-r+q-Xf-36.7q-Yf-107.7f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-107.7q-Zf2.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-36.7q-Zf2.3f0.2a-f-132.3Y-Yf-107.7am__f1-r+q-Xf-38.3q-Yf-107.7f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-132.3q-Zf2.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-38.3q-Zf2.3f0.2a-f-132.3Y-Yf-107.7am__f1-r+q-Xf-36.7q-Yf-132.3f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-107.7q-Zf-0.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-36.7q-Zf-0.3f0.2a-f-132.3Y-Yf-107.7am__f1-r+q-Xf-38.3q-Yf-132.3f0.2a-f-0.3Z-Zf2.3a-r+q-Yf-132.3q-Zf-0.3f0.2a-f-38.3X-Xf-36.7a-r+q-Xf-38.3q-Zf-0.3f0.2a-f-132.3Y-Yf-107.7',float('-38.500000'),float('-132.500000'),float('-0.500000'),float('38.500000'),float('-107.500000'),float('2.500000'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1543.5530071185917,
                440.83572457170516
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mirror (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_x(shape, x0) | shape)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (x0, _y - 1, _z + 1),",
                "    (x0, _y + 1, _z + 1),",
                "    (x0, _y + 1, _z - 1),",
                "    (x0, _y - 1, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(x0, _y, _z, color=sb.color.teal)",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "frame.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "frame.y-frame.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "sidewall.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "frame.width+sidewall.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "sidewall.width",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "sidewall.depth",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-38.25X-Xf38.25a-f-133.25Y-Yf-131.75a-f-0.5Z-Zf2.5am__f1iaa-f-38.5X-Xf38.5a-f-133.25Y-Yf-131.75aa-f-38.25X-Xf38.25a-f-133.5Y-Yf-131.5a-f-0.25Z-Zf2.25-r++q-Xf38.25q-Yf-131.75q-Zf2.25f0.25-r++q-Xf-38.25q-Yf-131.75q-Zf2.25f0.25-r++q-Xf38.25q-Yf-133.25q-Zf2.25f0.25-r++q-Xf-38.25q-Yf-133.25q-Zf2.25f0.25-r++q-Xf38.25q-Yf-131.75q-Zf-0.25f0.25-r++q-Xf-38.25q-Yf-131.75q-Zf-0.25f0.25-r++q-Xf38.25q-Yf-133.25q-Zf-0.25f0.25-r++q-Xf-38.25q-Yf-133.25q-Zf-0.25f0.25am__f1-r+q-Xf38.25q-Yf-131.75f0.25a-f-0.25Z-Zf2.25a-r+q-Yf-131.75q-Zf2.25f0.25a-f-38.25X-Xf38.25a-r+q-Xf38.25q-Zf2.25f0.25a-f-133.25Y-Yf-131.75am__f1-r+q-Xf-38.25q-Yf-131.75f0.25a-f-0.25Z-Zf2.25a-r+q-Yf-133.25q-Zf2.25f0.25a-f-38.25X-Xf38.25a-r+q-Xf-38.25q-Zf2.25f0.25a-f-133.25Y-Yf-131.75am__f1-r+q-Xf38.25q-Yf-133.25f0.25a-f-0.25Z-Zf2.25a-r+q-Yf-131.75q-Zf-0.25f0.25a-f-38.25X-Xf38.25a-r+q-Xf38.25q-Zf-0.25f0.25a-f-133.25Y-Yf-131.75am__f1-r+q-Xf-38.25q-Yf-133.25f0.25a-f-0.25Z-Zf2.25a-r+q-Yf-133.25q-Zf-0.25f0.25a-f-38.25X-Xf38.25a-r+q-Xf-38.25q-Zf-0.25f0.25a-f-133.25Y-Yf-131.75',float('-38.500000'),float('-133.500000'),float('-0.500000'),float('38.500000'),float('-131.500000'),float('2.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                1110.2529359583687,
                936.9329074942793
            ],
            "name": "bottomwall",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 16
        }
    ],
    "protocol": 6,
    "type": "sb"
}
